<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/4.9.9" created="2019-03-01 16:03" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>diaryfun.info</title>
	<link>http://diaryfun.info</link>
	<description></description>
	<pubDate>Fri, 01 Mar 2019 16:03:29 +0000</pubDate>
	<language>zh-CN</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://diaryfun.info</wp:base_site_url>
	<wp:base_blog_url>http://diaryfun.info</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login><![CDATA[admin]]></wp:author_login><wp:author_email><![CDATA[383001400@qq.com]]></wp:author_email><wp:author_display_name><![CDATA[Diary]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

	<wp:category>
		<wp:term_id>10</wp:term_id>
		<wp:category_nicename><![CDATA[other]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[其他]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>11</wp:term_id>
		<wp:category_nicename><![CDATA[digital]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[数码]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>9</wp:term_id>
		<wp:category_nicename><![CDATA[diary]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[日报]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>1</wp:term_id>
		<wp:category_nicename><![CDATA[uncategorized]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[未分类]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>12</wp:term_id>
		<wp:category_nicename><![CDATA[cs]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[计算机]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>14</wp:term_id>
		<wp:category_nicename><![CDATA[repost]]></wp:category_nicename>
		<wp:category_parent><![CDATA[cs]]></wp:category_parent>
		<wp:cat_name><![CDATA[转载]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>16</wp:term_id>
		<wp:category_nicename><![CDATA[fe]]></wp:category_nicename>
		<wp:category_parent><![CDATA[cs]]></wp:category_parent>
		<wp:cat_name><![CDATA[前端]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>17</wp:term_id>
		<wp:category_nicename><![CDATA[tool]]></wp:category_nicename>
		<wp:category_parent><![CDATA[cs]]></wp:category_parent>
		<wp:cat_name><![CDATA[工具]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>15</wp:term_id>
		<wp:category_nicename><![CDATA[app]]></wp:category_nicename>
		<wp:category_parent><![CDATA[cs]]></wp:category_parent>
		<wp:cat_name><![CDATA[应用]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>13</wp:term_id>
		<wp:category_nicename><![CDATA[algorithm]]></wp:category_nicename>
		<wp:category_parent><![CDATA[cs]]></wp:category_parent>
		<wp:cat_name><![CDATA[算法]]></wp:cat_name>
	</wp:category>
	<wp:term>
		<wp:term_id><![CDATA[5]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[language]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[en_us]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[en_US]]></wp:term_name>
		<wp:term_description><![CDATA[English]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[3]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[nav_menu]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[header]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[HEADER]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[8]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[language]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[ja]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[ja]]></wp:term_name>
		<wp:term_description><![CDATA[日本語]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[4]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[languages_group]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[the-langs-group]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[the-langs-group]]></wp:term_name>
		<wp:term_description><![CDATA[the group of languages]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[6]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[language]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[zh_cn]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[zh_CN]]></wp:term_name>
		<wp:term_description><![CDATA[简体中文]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[7]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[language]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[zh_tw]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[zh_TW]]></wp:term_name>
		<wp:term_description><![CDATA[繁體中文]]></wp:term_description>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[10]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[other]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[其他]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[11]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[digital]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[数码]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[9]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[diary]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[日报]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[1]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[uncategorized]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[未分类]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[12]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[cs]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[计算机]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[14]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[repost]]></wp:term_slug>
		<wp:term_parent><![CDATA[cs]]></wp:term_parent>
		<wp:term_name><![CDATA[转载]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[2]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[link_category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e9%93%be%e6%8e%a5%e8%a1%a8]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[链接表]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[16]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[fe]]></wp:term_slug>
		<wp:term_parent><![CDATA[cs]]></wp:term_parent>
		<wp:term_name><![CDATA[前端]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[17]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[tool]]></wp:term_slug>
		<wp:term_parent><![CDATA[cs]]></wp:term_parent>
		<wp:term_name><![CDATA[工具]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[15]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[app]]></wp:term_slug>
		<wp:term_parent><![CDATA[cs]]></wp:term_parent>
		<wp:term_name><![CDATA[应用]]></wp:term_name>
	</wp:term>
	<wp:term>
		<wp:term_id><![CDATA[13]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[algorithm]]></wp:term_slug>
		<wp:term_parent><![CDATA[cs]]></wp:term_parent>
		<wp:term_name><![CDATA[算法]]></wp:term_name>
	</wp:term>
	<wp:term><wp:term_id>3</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug><![CDATA[header]]></wp:term_slug><wp:term_name><![CDATA[HEADER]]></wp:term_name>
</wp:term>

	<generator>https://wordpress.org/?v=4.9.9</generator>

<image>
	<url>http://diaryfun.info/wp-content/uploads/2017/03/cropped-2-1-32x32.jpg</url>
	<title>diaryfun.info</title>
	<link>http://diaryfun.info</link>
	<width>32</width>
	<height>32</height>
</image> 

	<item>
		<title>ABOUT</title>
		<link>http://diaryfun.info/about/</link>
		<pubDate>Mon, 20 Mar 2017 18:21:24 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://172.93.42.104/?page_id=2</guid>
		<description></description>
		<content:encoded><![CDATA[&nbsp;

<hr />

一个闪闪发光的人的生活博客。

<hr />

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2</wp:post_id>
		<wp:post_date><![CDATA[2017-03-20 18:21:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-03-20 18:21:24]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[about]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>小火龙</title>
		<link>http://diaryfun.info/%e5%b0%8f%e7%81%ab%e9%be%99-2/</link>
		<pubDate>Mon, 20 Mar 2017 18:59:12 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://172.93.42.104/wp-content/uploads/2017/03/小火龙-2.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4</wp:post_id>
		<wp:post_date><![CDATA[2017-03-20 18:59:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-03-20 18:59:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%b0%8f%e7%81%ab%e9%be%99-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://diaryfun.info/wp-content/uploads/2017/03/小火龙-2.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/03/小火龙-2.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:640;s:6:"height";i:640;s:4:"file";s:23:"2017/03/小火龙-2.jpg";s:5:"sizes";a:7:{s:9:"thumbnail";a:4:{s:4:"file";s:23:"小火龙-2-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:23:"小火龙-2-300x300.jpg";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:19:"astrid-medium-thumb";a:4:{s:4:"file";s:23:"小火龙-2-520x520.jpg";s:5:"width";i:520;s:6:"height";i:520;s:9:"mime-type";s:10:"image/jpeg";}s:18:"astrid-small-thumb";a:4:{s:4:"file";s:23:"小火龙-2-360x360.jpg";s:5:"width";i:360;s:6:"height";i:360;s:9:"mime-type";s:10:"image/jpeg";}s:20:"astrid-project-thumb";a:4:{s:4:"file";s:23:"小火龙-2-500x310.jpg";s:5:"width";i:500;s:6:"height";i:310;s:9:"mime-type";s:10:"image/jpeg";}s:19:"astrid-client-thumb";a:4:{s:4:"file";s:23:"小火龙-2-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:24:"astrid-testimonial-thumb";a:4:{s:4:"file";s:23:"小火龙-2-100x100.jpg";s:5:"width";i:100;s:6:"height";i:100;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_wp_user_avatar]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-2.jpg</title>
		<link>http://diaryfun.info/cropped-2-jpg/</link>
		<pubDate>Mon, 20 Mar 2017 18:59:38 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://172.93.42.104/wp-content/uploads/2017/03/小火龙cropped-2.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[http://172.93.42.104/wp-content/uploads/2017/03/小火龙cropped-2.jpg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>5</wp:post_id>
		<wp:post_date><![CDATA[2017-03-20 18:59:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-03-20 18:59:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-2-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://diaryfun.info/wp-content/uploads/2017/03/cropped-2.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/03/cropped-2.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
			<wp:meta_value><![CDATA[custom-logo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:200;s:6:"height";i:200;s:4:"file";s:21:"2017/03/cropped-2.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:21:"cropped-2-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:24:"astrid-testimonial-thumb";a:4:{s:4:"file";s:21:"cropped-2-100x100.jpg";s:5:"width";i:100;s:6:"height";i:100;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-2-1.jpg</title>
		<link>http://diaryfun.info/cropped-2-1-jpg/</link>
		<pubDate>Mon, 20 Mar 2017 19:00:25 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://172.93.42.104/wp-content/uploads/2017/03/小火龙cropped-2-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[http://172.93.42.104/wp-content/uploads/2017/03/小火龙cropped-2-1.jpg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>7</wp:post_id>
		<wp:post_date><![CDATA[2017-03-20 19:00:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-03-20 19:00:25]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-2-1-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://diaryfun.info/wp-content/uploads/2017/03/cropped-2-1.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/03/cropped-2-1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
			<wp:meta_value><![CDATA[site-icon]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:512;s:6:"height";i:512;s:4:"file";s:23:"2017/03/cropped-2-1.jpg";s:5:"sizes";a:10:{s:9:"thumbnail";a:4:{s:4:"file";s:23:"cropped-2-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:23:"cropped-2-1-300x300.jpg";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:18:"astrid-small-thumb";a:4:{s:4:"file";s:23:"cropped-2-1-360x360.jpg";s:5:"width";i:360;s:6:"height";i:360;s:9:"mime-type";s:10:"image/jpeg";}s:20:"astrid-project-thumb";a:4:{s:4:"file";s:23:"cropped-2-1-500x310.jpg";s:5:"width";i:500;s:6:"height";i:310;s:9:"mime-type";s:10:"image/jpeg";}s:19:"astrid-client-thumb";a:4:{s:4:"file";s:23:"cropped-2-1-250x250.jpg";s:5:"width";i:250;s:6:"height";i:250;s:9:"mime-type";s:10:"image/jpeg";}s:24:"astrid-testimonial-thumb";a:4:{s:4:"file";s:23:"cropped-2-1-100x100.jpg";s:5:"width";i:100;s:6:"height";i:100;s:9:"mime-type";s:10:"image/jpeg";}s:13:"site_icon-270";a:4:{s:4:"file";s:23:"cropped-2-1-270x270.jpg";s:5:"width";i:270;s:6:"height";i:270;s:9:"mime-type";s:10:"image/jpeg";}s:13:"site_icon-192";a:4:{s:4:"file";s:23:"cropped-2-1-192x192.jpg";s:5:"width";i:192;s:6:"height";i:192;s:9:"mime-type";s:10:"image/jpeg";}s:13:"site_icon-180";a:4:{s:4:"file";s:23:"cropped-2-1-180x180.jpg";s:5:"width";i:180;s:6:"height";i:180;s:9:"mime-type";s:10:"image/jpeg";}s:12:"site_icon-32";a:4:{s:4:"file";s:21:"cropped-2-1-32x32.jpg";s:5:"width";i:32;s:6:"height";i:32;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>20150913-IMG_3915</title>
		<link>http://diaryfun.info/20150913-img_3915/</link>
		<pubDate>Mon, 20 Mar 2017 19:20:04 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://172.93.42.104/wp-content/uploads/2017/03/20150913-IMG_3915.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>12</wp:post_id>
		<wp:post_date><![CDATA[2017-03-20 19:20:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-03-20 19:20:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[20150913-img_3915]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://diaryfun.info/wp-content/uploads/2017/03/20150913-IMG_3915.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/03/20150913-IMG_3915.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:3101;s:6:"height";i:2048;s:4:"file";s:29:"2017/03/20150913-IMG_3915.jpg";s:5:"sizes";a:10:{s:9:"thumbnail";a:4:{s:4:"file";s:29:"20150913-IMG_3915-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:29:"20150913-IMG_3915-300x198.jpg";s:5:"width";i:300;s:6:"height";i:198;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:29:"20150913-IMG_3915-768x507.jpg";s:5:"width";i:768;s:6:"height";i:507;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:30:"20150913-IMG_3915-1024x676.jpg";s:5:"width";i:1024;s:6:"height";i:676;s:9:"mime-type";s:10:"image/jpeg";}s:18:"astrid-large-thumb";a:4:{s:4:"file";s:29:"20150913-IMG_3915-700x462.jpg";s:5:"width";i:700;s:6:"height";i:462;s:9:"mime-type";s:10:"image/jpeg";}s:19:"astrid-medium-thumb";a:4:{s:4:"file";s:29:"20150913-IMG_3915-520x343.jpg";s:5:"width";i:520;s:6:"height";i:343;s:9:"mime-type";s:10:"image/jpeg";}s:18:"astrid-small-thumb";a:4:{s:4:"file";s:29:"20150913-IMG_3915-360x238.jpg";s:5:"width";i:360;s:6:"height";i:238;s:9:"mime-type";s:10:"image/jpeg";}s:20:"astrid-project-thumb";a:4:{s:4:"file";s:29:"20150913-IMG_3915-500x310.jpg";s:5:"width";i:500;s:6:"height";i:310;s:9:"mime-type";s:10:"image/jpeg";}s:19:"astrid-client-thumb";a:4:{s:4:"file";s:29:"20150913-IMG_3915-250x165.jpg";s:5:"width";i:250;s:6:"height";i:165;s:9:"mime-type";s:10:"image/jpeg";}s:24:"astrid-testimonial-thumb";a:4:{s:4:"file";s:28:"20150913-IMG_3915-100x66.jpg";s:5:"width";i:100;s:6:"height";i:66;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:3:"2.4";s:6:"credit";s:0:"";s:6:"camera";s:9:"iPhone 4S";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1442161942";s:9:"copyright";s:0:"";s:12:"focal_length";s:4:"4.28";s:3:"iso";s:2:"50";s:13:"shutter_speed";s:19:"0.00033333333333333";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>20160418-IMG_5912</title>
		<link>http://diaryfun.info/20160418-img_5912/</link>
		<pubDate>Mon, 20 Mar 2017 19:20:26 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://172.93.42.104/wp-content/uploads/2017/03/20160418-IMG_5912.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>13</wp:post_id>
		<wp:post_date><![CDATA[2017-03-20 19:20:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-03-20 19:20:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[20160418-img_5912]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://diaryfun.info/wp-content/uploads/2017/03/20160418-IMG_5912.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/03/20160418-IMG_5912.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:4440;s:6:"height";i:2775;s:4:"file";s:29:"2017/03/20160418-IMG_5912.jpg";s:5:"sizes";a:10:{s:9:"thumbnail";a:4:{s:4:"file";s:29:"20160418-IMG_5912-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:29:"20160418-IMG_5912-300x188.jpg";s:5:"width";i:300;s:6:"height";i:188;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:29:"20160418-IMG_5912-768x480.jpg";s:5:"width";i:768;s:6:"height";i:480;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:30:"20160418-IMG_5912-1024x640.jpg";s:5:"width";i:1024;s:6:"height";i:640;s:9:"mime-type";s:10:"image/jpeg";}s:18:"astrid-large-thumb";a:4:{s:4:"file";s:29:"20160418-IMG_5912-700x438.jpg";s:5:"width";i:700;s:6:"height";i:438;s:9:"mime-type";s:10:"image/jpeg";}s:19:"astrid-medium-thumb";a:4:{s:4:"file";s:29:"20160418-IMG_5912-520x325.jpg";s:5:"width";i:520;s:6:"height";i:325;s:9:"mime-type";s:10:"image/jpeg";}s:18:"astrid-small-thumb";a:4:{s:4:"file";s:29:"20160418-IMG_5912-360x225.jpg";s:5:"width";i:360;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:20:"astrid-project-thumb";a:4:{s:4:"file";s:29:"20160418-IMG_5912-500x310.jpg";s:5:"width";i:500;s:6:"height";i:310;s:9:"mime-type";s:10:"image/jpeg";}s:19:"astrid-client-thumb";a:4:{s:4:"file";s:29:"20160418-IMG_5912-250x156.jpg";s:5:"width";i:250;s:6:"height";i:156;s:9:"mime-type";s:10:"image/jpeg";}s:24:"astrid-testimonial-thumb";a:4:{s:4:"file";s:28:"20160418-IMG_5912-100x63.jpg";s:5:"width";i:100;s:6:"height";i:63;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:2:"11";s:6:"credit";s:0:"";s:6:"camera";s:12:"Canon EOS 6D";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1461004085";s:9:"copyright";s:0:"";s:12:"focal_length";s:2:"50";s:3:"iso";s:3:"400";s:13:"shutter_speed";s:5:"0.008";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Processed with VSCOcam with g3 preset</title>
		<link>http://diaryfun.info/processed-with-vscocam-with-g3-preset/</link>
		<pubDate>Mon, 20 Mar 2017 19:20:42 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://172.93.42.104/wp-content/uploads/2017/03/IMG_5511.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Processed with VSCOcam with g3 preset]]></excerpt:encoded>
		<wp:post_id>14</wp:post_id>
		<wp:post_date><![CDATA[2017-03-20 19:20:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-03-20 19:20:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[processed-with-vscocam-with-g3-preset]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://diaryfun.info/wp-content/uploads/2017/03/IMG_5511.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/03/IMG_5511.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:3199;s:6:"height";i:2400;s:4:"file";s:20:"2017/03/IMG_5511.jpg";s:5:"sizes";a:10:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"IMG_5511-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:20:"IMG_5511-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:20:"IMG_5511-768x576.jpg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:21:"IMG_5511-1024x768.jpg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:18:"astrid-large-thumb";a:4:{s:4:"file";s:20:"IMG_5511-700x525.jpg";s:5:"width";i:700;s:6:"height";i:525;s:9:"mime-type";s:10:"image/jpeg";}s:19:"astrid-medium-thumb";a:4:{s:4:"file";s:20:"IMG_5511-520x390.jpg";s:5:"width";i:520;s:6:"height";i:390;s:9:"mime-type";s:10:"image/jpeg";}s:18:"astrid-small-thumb";a:4:{s:4:"file";s:20:"IMG_5511-360x270.jpg";s:5:"width";i:360;s:6:"height";i:270;s:9:"mime-type";s:10:"image/jpeg";}s:20:"astrid-project-thumb";a:4:{s:4:"file";s:20:"IMG_5511-500x310.jpg";s:5:"width";i:500;s:6:"height";i:310;s:9:"mime-type";s:10:"image/jpeg";}s:19:"astrid-client-thumb";a:4:{s:4:"file";s:20:"IMG_5511-250x188.jpg";s:5:"width";i:250;s:6:"height";i:188;s:9:"mime-type";s:10:"image/jpeg";}s:24:"astrid-testimonial-thumb";a:4:{s:4:"file";s:19:"IMG_5511-100x75.jpg";s:5:"width";i:100;s:6:"height";i:75;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:3:"2.4";s:6:"credit";s:0:"";s:6:"camera";s:9:"iPhone 4S";s:7:"caption";s:37:"Processed with VSCOcam with g3 preset";s:17:"created_timestamp";s:10:"1379784547";s:9:"copyright";s:36:"Copyright 2013. All rights reserved.";s:12:"focal_length";s:4:"4.28";s:3:"iso";s:2:"50";s:13:"shutter_speed";s:18:"0.0021008403361345";s:5:"title";s:37:"Processed with VSCOcam with g3 preset";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-20150913-IMG_3915.jpg</title>
		<link>http://diaryfun.info/cropped-20150913-img_3915-jpg/</link>
		<pubDate>Mon, 20 Mar 2017 19:21:29 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://172.93.42.104/wp-content/uploads/2017/03/cropped-20150913-IMG_3915.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>15</wp:post_id>
		<wp:post_date><![CDATA[2017-03-20 19:21:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-03-20 19:21:29]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-20150913-img_3915-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://diaryfun.info/wp-content/uploads/2017/03/cropped-20150913-IMG_3915.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/03/cropped-20150913-IMG_3915.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
			<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:1078;s:4:"file";s:37:"2017/03/cropped-20150913-IMG_3915.jpg";s:5:"sizes";a:10:{s:9:"thumbnail";a:4:{s:4:"file";s:37:"cropped-20150913-IMG_3915-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:37:"cropped-20150913-IMG_3915-300x168.jpg";s:5:"width";i:300;s:6:"height";i:168;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:37:"cropped-20150913-IMG_3915-768x431.jpg";s:5:"width";i:768;s:6:"height";i:431;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:38:"cropped-20150913-IMG_3915-1024x575.jpg";s:5:"width";i:1024;s:6:"height";i:575;s:9:"mime-type";s:10:"image/jpeg";}s:18:"astrid-large-thumb";a:4:{s:4:"file";s:37:"cropped-20150913-IMG_3915-700x393.jpg";s:5:"width";i:700;s:6:"height";i:393;s:9:"mime-type";s:10:"image/jpeg";}s:19:"astrid-medium-thumb";a:4:{s:4:"file";s:37:"cropped-20150913-IMG_3915-520x292.jpg";s:5:"width";i:520;s:6:"height";i:292;s:9:"mime-type";s:10:"image/jpeg";}s:18:"astrid-small-thumb";a:4:{s:4:"file";s:37:"cropped-20150913-IMG_3915-360x202.jpg";s:5:"width";i:360;s:6:"height";i:202;s:9:"mime-type";s:10:"image/jpeg";}s:20:"astrid-project-thumb";a:4:{s:4:"file";s:37:"cropped-20150913-IMG_3915-500x310.jpg";s:5:"width";i:500;s:6:"height";i:310;s:9:"mime-type";s:10:"image/jpeg";}s:19:"astrid-client-thumb";a:4:{s:4:"file";s:37:"cropped-20150913-IMG_3915-250x140.jpg";s:5:"width";i:250;s:6:"height";i:140;s:9:"mime-type";s:10:"image/jpeg";}s:24:"astrid-testimonial-thumb";a:4:{s:4:"file";s:36:"cropped-20150913-IMG_3915-100x56.jpg";s:5:"width";i:100;s:6:"height";i:56;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-IMG_5511.jpg</title>
		<link>http://diaryfun.info/cropped-img_5511-jpg/</link>
		<pubDate>Mon, 20 Mar 2017 19:23:02 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://172.93.42.104/wp-content/uploads/2017/03/cropped-IMG_5511.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>16</wp:post_id>
		<wp:post_date><![CDATA[2017-03-20 19:23:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-03-20 19:23:02]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-img_5511-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://diaryfun.info/wp-content/uploads/2017/03/cropped-IMG_5511.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/03/cropped-IMG_5511.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
			<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:1078;s:4:"file";s:28:"2017/03/cropped-IMG_5511.jpg";s:5:"sizes";a:10:{s:9:"thumbnail";a:4:{s:4:"file";s:28:"cropped-IMG_5511-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:28:"cropped-IMG_5511-300x168.jpg";s:5:"width";i:300;s:6:"height";i:168;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:28:"cropped-IMG_5511-768x431.jpg";s:5:"width";i:768;s:6:"height";i:431;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:29:"cropped-IMG_5511-1024x575.jpg";s:5:"width";i:1024;s:6:"height";i:575;s:9:"mime-type";s:10:"image/jpeg";}s:18:"astrid-large-thumb";a:4:{s:4:"file";s:28:"cropped-IMG_5511-700x393.jpg";s:5:"width";i:700;s:6:"height";i:393;s:9:"mime-type";s:10:"image/jpeg";}s:19:"astrid-medium-thumb";a:4:{s:4:"file";s:28:"cropped-IMG_5511-520x292.jpg";s:5:"width";i:520;s:6:"height";i:292;s:9:"mime-type";s:10:"image/jpeg";}s:18:"astrid-small-thumb";a:4:{s:4:"file";s:28:"cropped-IMG_5511-360x202.jpg";s:5:"width";i:360;s:6:"height";i:202;s:9:"mime-type";s:10:"image/jpeg";}s:20:"astrid-project-thumb";a:4:{s:4:"file";s:28:"cropped-IMG_5511-500x310.jpg";s:5:"width";i:500;s:6:"height";i:310;s:9:"mime-type";s:10:"image/jpeg";}s:19:"astrid-client-thumb";a:4:{s:4:"file";s:28:"cropped-IMG_5511-250x140.jpg";s:5:"width";i:250;s:6:"height";i:140;s:9:"mime-type";s:10:"image/jpeg";}s:24:"astrid-testimonial-thumb";a:4:{s:4:"file";s:27:"cropped-IMG_5511-100x56.jpg";s:5:"width";i:100;s:6:"height";i:56;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-20160418-IMG_5912.jpg</title>
		<link>http://diaryfun.info/cropped-20160418-img_5912-jpg/</link>
		<pubDate>Mon, 20 Mar 2017 19:24:59 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://172.93.42.104/wp-content/uploads/2017/03/cropped-20160418-IMG_5912.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>18</wp:post_id>
		<wp:post_date><![CDATA[2017-03-20 19:24:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-03-20 19:24:59]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-20160418-img_5912-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://diaryfun.info/wp-content/uploads/2017/03/cropped-20160418-IMG_5912.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/03/cropped-20160418-IMG_5912.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
			<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:1080;s:4:"file";s:37:"2017/03/cropped-20160418-IMG_5912.jpg";s:5:"sizes";a:10:{s:9:"thumbnail";a:4:{s:4:"file";s:37:"cropped-20160418-IMG_5912-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:37:"cropped-20160418-IMG_5912-300x169.jpg";s:5:"width";i:300;s:6:"height";i:169;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:37:"cropped-20160418-IMG_5912-768x432.jpg";s:5:"width";i:768;s:6:"height";i:432;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:38:"cropped-20160418-IMG_5912-1024x576.jpg";s:5:"width";i:1024;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:18:"astrid-large-thumb";a:4:{s:4:"file";s:37:"cropped-20160418-IMG_5912-700x394.jpg";s:5:"width";i:700;s:6:"height";i:394;s:9:"mime-type";s:10:"image/jpeg";}s:19:"astrid-medium-thumb";a:4:{s:4:"file";s:37:"cropped-20160418-IMG_5912-520x293.jpg";s:5:"width";i:520;s:6:"height";i:293;s:9:"mime-type";s:10:"image/jpeg";}s:18:"astrid-small-thumb";a:4:{s:4:"file";s:37:"cropped-20160418-IMG_5912-360x203.jpg";s:5:"width";i:360;s:6:"height";i:203;s:9:"mime-type";s:10:"image/jpeg";}s:20:"astrid-project-thumb";a:4:{s:4:"file";s:37:"cropped-20160418-IMG_5912-500x310.jpg";s:5:"width";i:500;s:6:"height";i:310;s:9:"mime-type";s:10:"image/jpeg";}s:19:"astrid-client-thumb";a:4:{s:4:"file";s:37:"cropped-20160418-IMG_5912-250x141.jpg";s:5:"width";i:250;s:6:"height";i:141;s:9:"mime-type";s:10:"image/jpeg";}s:24:"astrid-testimonial-thumb";a:4:{s:4:"file";s:36:"cropped-20160418-IMG_5912-100x56.jpg";s:5:"width";i:100;s:6:"height";i:56;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-IMG_5511-1.jpg</title>
		<link>http://diaryfun.info/cropped-img_5511-1-jpg/</link>
		<pubDate>Mon, 20 Mar 2017 19:26:28 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://172.93.42.104/wp-content/uploads/2017/03/cropped-IMG_5511-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>21</wp:post_id>
		<wp:post_date><![CDATA[2017-03-20 19:26:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-03-20 19:26:28]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-img_5511-1-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://diaryfun.info/wp-content/uploads/2017/03/cropped-IMG_5511-1.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:841;s:4:"file";s:30:"2017/03/cropped-IMG_5511-1.jpg";s:5:"sizes";a:10:{s:9:"thumbnail";a:4:{s:4:"file";s:30:"cropped-IMG_5511-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:30:"cropped-IMG_5511-1-300x131.jpg";s:5:"width";i:300;s:6:"height";i:131;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:30:"cropped-IMG_5511-1-768x336.jpg";s:5:"width";i:768;s:6:"height";i:336;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:31:"cropped-IMG_5511-1-1024x449.jpg";s:5:"width";i:1024;s:6:"height";i:449;s:9:"mime-type";s:10:"image/jpeg";}s:18:"astrid-large-thumb";a:4:{s:4:"file";s:30:"cropped-IMG_5511-1-700x307.jpg";s:5:"width";i:700;s:6:"height";i:307;s:9:"mime-type";s:10:"image/jpeg";}s:19:"astrid-medium-thumb";a:4:{s:4:"file";s:30:"cropped-IMG_5511-1-520x228.jpg";s:5:"width";i:520;s:6:"height";i:228;s:9:"mime-type";s:10:"image/jpeg";}s:18:"astrid-small-thumb";a:4:{s:4:"file";s:30:"cropped-IMG_5511-1-360x158.jpg";s:5:"width";i:360;s:6:"height";i:158;s:9:"mime-type";s:10:"image/jpeg";}s:20:"astrid-project-thumb";a:4:{s:4:"file";s:30:"cropped-IMG_5511-1-500x310.jpg";s:5:"width";i:500;s:6:"height";i:310;s:9:"mime-type";s:10:"image/jpeg";}s:19:"astrid-client-thumb";a:4:{s:4:"file";s:30:"cropped-IMG_5511-1-250x110.jpg";s:5:"width";i:250;s:6:"height";i:110;s:9:"mime-type";s:10:"image/jpeg";}s:24:"astrid-testimonial-thumb";a:4:{s:4:"file";s:29:"cropped-IMG_5511-1-100x44.jpg";s:5:"width";i:100;s:6:"height";i:44;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
			<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/03/cropped-IMG_5511-1.jpg]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Processed with VSCOcam with g3 preset</title>
		<link>http://diaryfun.info/processed-with-vscocam-with-g3-preset-2/</link>
		<pubDate>Mon, 20 Mar 2017 19:28:05 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://172.93.42.104/wp-content/uploads/2017/03/IMG_5511-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Processed with VSCOcam with g3 preset]]></excerpt:encoded>
		<wp:post_id>22</wp:post_id>
		<wp:post_date><![CDATA[2017-03-20 19:28:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-03-20 19:28:05]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[processed-with-vscocam-with-g3-preset-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://diaryfun.info/wp-content/uploads/2017/03/IMG_5511-1.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/03/IMG_5511-1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2240;s:6:"height";i:1680;s:4:"file";s:22:"2017/03/IMG_5511-1.jpg";s:5:"sizes";a:10:{s:9:"thumbnail";a:4:{s:4:"file";s:22:"IMG_5511-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:22:"IMG_5511-1-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:22:"IMG_5511-1-768x576.jpg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:23:"IMG_5511-1-1024x768.jpg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:18:"astrid-large-thumb";a:4:{s:4:"file";s:22:"IMG_5511-1-700x525.jpg";s:5:"width";i:700;s:6:"height";i:525;s:9:"mime-type";s:10:"image/jpeg";}s:19:"astrid-medium-thumb";a:4:{s:4:"file";s:22:"IMG_5511-1-520x390.jpg";s:5:"width";i:520;s:6:"height";i:390;s:9:"mime-type";s:10:"image/jpeg";}s:18:"astrid-small-thumb";a:4:{s:4:"file";s:22:"IMG_5511-1-360x270.jpg";s:5:"width";i:360;s:6:"height";i:270;s:9:"mime-type";s:10:"image/jpeg";}s:20:"astrid-project-thumb";a:4:{s:4:"file";s:22:"IMG_5511-1-500x310.jpg";s:5:"width";i:500;s:6:"height";i:310;s:9:"mime-type";s:10:"image/jpeg";}s:19:"astrid-client-thumb";a:4:{s:4:"file";s:22:"IMG_5511-1-250x188.jpg";s:5:"width";i:250;s:6:"height";i:188;s:9:"mime-type";s:10:"image/jpeg";}s:24:"astrid-testimonial-thumb";a:4:{s:4:"file";s:21:"IMG_5511-1-100x75.jpg";s:5:"width";i:100;s:6:"height";i:75;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:3:"2.4";s:6:"credit";s:0:"";s:6:"camera";s:9:"iPhone 4S";s:7:"caption";s:37:"Processed with VSCOcam with g3 preset";s:17:"created_timestamp";s:10:"1379784547";s:9:"copyright";s:36:"Copyright 2013. All rights reserved.";s:12:"focal_length";s:4:"4.28";s:3:"iso";s:2:"50";s:13:"shutter_speed";s:18:"0.0021008403361345";s:5:"title";s:37:"Processed with VSCOcam with g3 preset";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-IMG_5511-1-1.jpg</title>
		<link>http://diaryfun.info/cropped-img_5511-1-1-jpg/</link>
		<pubDate>Mon, 20 Mar 2017 19:29:12 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://172.93.42.104/wp-content/uploads/2017/03/cropped-IMG_5511-1-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>23</wp:post_id>
		<wp:post_date><![CDATA[2017-03-20 19:29:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-03-20 19:29:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-img_5511-1-1-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://diaryfun.info/wp-content/uploads/2017/03/cropped-IMG_5511-1-1.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/03/cropped-IMG_5511-1-1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
			<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:828;s:4:"file";s:32:"2017/03/cropped-IMG_5511-1-1.jpg";s:5:"sizes";a:10:{s:9:"thumbnail";a:4:{s:4:"file";s:32:"cropped-IMG_5511-1-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:32:"cropped-IMG_5511-1-1-300x129.jpg";s:5:"width";i:300;s:6:"height";i:129;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:32:"cropped-IMG_5511-1-1-768x331.jpg";s:5:"width";i:768;s:6:"height";i:331;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:33:"cropped-IMG_5511-1-1-1024x442.jpg";s:5:"width";i:1024;s:6:"height";i:442;s:9:"mime-type";s:10:"image/jpeg";}s:18:"astrid-large-thumb";a:4:{s:4:"file";s:32:"cropped-IMG_5511-1-1-700x302.jpg";s:5:"width";i:700;s:6:"height";i:302;s:9:"mime-type";s:10:"image/jpeg";}s:19:"astrid-medium-thumb";a:4:{s:4:"file";s:32:"cropped-IMG_5511-1-1-520x224.jpg";s:5:"width";i:520;s:6:"height";i:224;s:9:"mime-type";s:10:"image/jpeg";}s:18:"astrid-small-thumb";a:4:{s:4:"file";s:32:"cropped-IMG_5511-1-1-360x155.jpg";s:5:"width";i:360;s:6:"height";i:155;s:9:"mime-type";s:10:"image/jpeg";}s:20:"astrid-project-thumb";a:4:{s:4:"file";s:32:"cropped-IMG_5511-1-1-500x310.jpg";s:5:"width";i:500;s:6:"height";i:310;s:9:"mime-type";s:10:"image/jpeg";}s:19:"astrid-client-thumb";a:4:{s:4:"file";s:32:"cropped-IMG_5511-1-1-250x108.jpg";s:5:"width";i:250;s:6:"height";i:108;s:9:"mime-type";s:10:"image/jpeg";}s:24:"astrid-testimonial-thumb";a:4:{s:4:"file";s:31:"cropped-IMG_5511-1-1-100x43.jpg";s:5:"width";i:100;s:6:"height";i:43;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-IMG_5511-1-2.jpg</title>
		<link>http://diaryfun.info/cropped-img_5511-1-2-jpg/</link>
		<pubDate>Mon, 20 Mar 2017 19:31:58 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://172.93.42.104/wp-content/uploads/2017/03/cropped-IMG_5511-1-2.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>26</wp:post_id>
		<wp:post_date><![CDATA[2017-03-20 19:31:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-03-20 19:31:58]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-img_5511-1-2-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://diaryfun.info/wp-content/uploads/2017/03/cropped-IMG_5511-1-2.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/03/cropped-IMG_5511-1-2.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
			<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:925;s:4:"file";s:32:"2017/03/cropped-IMG_5511-1-2.jpg";s:5:"sizes";a:10:{s:9:"thumbnail";a:4:{s:4:"file";s:32:"cropped-IMG_5511-1-2-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:32:"cropped-IMG_5511-1-2-300x145.jpg";s:5:"width";i:300;s:6:"height";i:145;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:32:"cropped-IMG_5511-1-2-768x370.jpg";s:5:"width";i:768;s:6:"height";i:370;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:33:"cropped-IMG_5511-1-2-1024x493.jpg";s:5:"width";i:1024;s:6:"height";i:493;s:9:"mime-type";s:10:"image/jpeg";}s:18:"astrid-large-thumb";a:4:{s:4:"file";s:32:"cropped-IMG_5511-1-2-700x337.jpg";s:5:"width";i:700;s:6:"height";i:337;s:9:"mime-type";s:10:"image/jpeg";}s:19:"astrid-medium-thumb";a:4:{s:4:"file";s:32:"cropped-IMG_5511-1-2-520x251.jpg";s:5:"width";i:520;s:6:"height";i:251;s:9:"mime-type";s:10:"image/jpeg";}s:18:"astrid-small-thumb";a:4:{s:4:"file";s:32:"cropped-IMG_5511-1-2-360x173.jpg";s:5:"width";i:360;s:6:"height";i:173;s:9:"mime-type";s:10:"image/jpeg";}s:20:"astrid-project-thumb";a:4:{s:4:"file";s:32:"cropped-IMG_5511-1-2-500x310.jpg";s:5:"width";i:500;s:6:"height";i:310;s:9:"mime-type";s:10:"image/jpeg";}s:19:"astrid-client-thumb";a:4:{s:4:"file";s:32:"cropped-IMG_5511-1-2-250x120.jpg";s:5:"width";i:250;s:6:"height";i:120;s:9:"mime-type";s:10:"image/jpeg";}s:24:"astrid-testimonial-thumb";a:4:{s:4:"file";s:31:"cropped-IMG_5511-1-2-100x48.jpg";s:5:"width";i:100;s:6:"height";i:48;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_custom_header_last_used_astrid]]></wp:meta_key>
			<wp:meta_value><![CDATA[1490038372]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_is_custom_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[astrid]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MY PROFILE</title>
		<link>http://diaryfun.info/my-profile/</link>
		<pubDate>Wed, 22 Mar 2017 15:40:29 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://172.93.42.104/?page_id=63</guid>
		<description></description>
		<content:encoded><![CDATA[&nbsp;

<a href="http://172.93.42.104/wp-content/uploads/2017/03/20161216-IMG_0419-编辑.jpg"><img class="size-medium wp-image-64 alignnone" src="http://172.93.42.104/wp-content/uploads/2017/03/20161216-IMG_0419-编辑-200x300.jpg" alt="" width="200" height="300" /></a>

&nbsp;

东南大学工学学士，前端工程师，INTP，爱好过于广泛。

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>63</wp:post_id>
		<wp:post_date><![CDATA[2017-03-22 23:40:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-03-22 15:40:29]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[my-profile]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>20161216-IMG_0419-编辑</title>
		<link>http://diaryfun.info/my-profile/20161216-img_0419-%e7%bc%96%e8%be%91/</link>
		<pubDate>Wed, 22 Mar 2017 15:32:47 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://172.93.42.104/wp-content/uploads/2017/03/20161216-IMG_0419-编辑.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>64</wp:post_id>
		<wp:post_date><![CDATA[2017-03-22 23:32:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-03-22 15:32:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[20161216-img_0419-%e7%bc%96%e8%be%91]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>63</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://diaryfun.info/wp-content/uploads/2017/03/20161216-IMG_0419-编辑.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/03/20161216-IMG_0419-编辑.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2189;s:6:"height";i:3284;s:4:"file";s:36:"2017/03/20161216-IMG_0419-编辑.jpg";s:5:"sizes";a:10:{s:9:"thumbnail";a:4:{s:4:"file";s:36:"20161216-IMG_0419-编辑-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:36:"20161216-IMG_0419-编辑-200x300.jpg";s:5:"width";i:200;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:37:"20161216-IMG_0419-编辑-768x1152.jpg";s:5:"width";i:768;s:6:"height";i:1152;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:37:"20161216-IMG_0419-编辑-683x1024.jpg";s:5:"width";i:683;s:6:"height";i:1024;s:9:"mime-type";s:10:"image/jpeg";}s:18:"astrid-large-thumb";a:4:{s:4:"file";s:37:"20161216-IMG_0419-编辑-700x1050.jpg";s:5:"width";i:700;s:6:"height";i:1050;s:9:"mime-type";s:10:"image/jpeg";}s:19:"astrid-medium-thumb";a:4:{s:4:"file";s:36:"20161216-IMG_0419-编辑-520x780.jpg";s:5:"width";i:520;s:6:"height";i:780;s:9:"mime-type";s:10:"image/jpeg";}s:18:"astrid-small-thumb";a:4:{s:4:"file";s:36:"20161216-IMG_0419-编辑-360x540.jpg";s:5:"width";i:360;s:6:"height";i:540;s:9:"mime-type";s:10:"image/jpeg";}s:20:"astrid-project-thumb";a:4:{s:4:"file";s:36:"20161216-IMG_0419-编辑-500x310.jpg";s:5:"width";i:500;s:6:"height";i:310;s:9:"mime-type";s:10:"image/jpeg";}s:19:"astrid-client-thumb";a:4:{s:4:"file";s:36:"20161216-IMG_0419-编辑-250x375.jpg";s:5:"width";i:250;s:6:"height";i:375;s:9:"mime-type";s:10:"image/jpeg";}s:24:"astrid-testimonial-thumb";a:4:{s:4:"file";s:36:"20161216-IMG_0419-编辑-100x150.jpg";s:5:"width";i:100;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"2";s:6:"credit";s:0:"";s:6:"camera";s:12:"Canon EOS 6D";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1481907420";s:9:"copyright";s:0:"";s:12:"focal_length";s:2:"50";s:3:"iso";s:4:"1250";s:13:"shutter_speed";s:5:"0.125";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://diaryfun.info/2017/03/68/</link>
		<pubDate>Wed, 22 Mar 2017 15:53:16 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://172.93.42.104/?p=68</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>68</wp:post_id>
		<wp:post_date><![CDATA[2017-03-22 23:53:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-03-22 15:53:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[68]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="header"><![CDATA[HEADER]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://diaryfun.info/2017/05/%e5%bc%80%e5%a7%8b%e5%86%99%e6%97%a5%e6%8a%a5/%e6%8d%95%e8%8e%b7/</link>
		<pubDate>Thu, 04 May 2017 19:04:52 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://diaryfun.info/wp-content/uploads/2017/05/捕获.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>106</wp:post_id>
		<wp:post_date><![CDATA[2017-05-05 03:04:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-04 19:04:52]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%8d%95%e8%8e%b7]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>97</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://diaryfun.info/wp-content/uploads/2017/05/捕获.gif]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:649;s:6:"height";i:635;s:4:"file";s:18:"2017/05/捕获.gif";s:5:"sizes";a:7:{s:9:"thumbnail";a:4:{s:4:"file";s:18:"捕获-150x150.gif";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/gif";}s:6:"medium";a:4:{s:4:"file";s:18:"捕获-300x294.gif";s:5:"width";i:300;s:6:"height";i:294;s:9:"mime-type";s:9:"image/gif";}s:19:"astrid-medium-thumb";a:4:{s:4:"file";s:18:"捕获-520x509.gif";s:5:"width";i:520;s:6:"height";i:509;s:9:"mime-type";s:9:"image/gif";}s:18:"astrid-small-thumb";a:4:{s:4:"file";s:18:"捕获-360x352.gif";s:5:"width";i:360;s:6:"height";i:352;s:9:"mime-type";s:9:"image/gif";}s:20:"astrid-project-thumb";a:4:{s:4:"file";s:18:"捕获-500x310.gif";s:5:"width";i:500;s:6:"height";i:310;s:9:"mime-type";s:9:"image/gif";}s:19:"astrid-client-thumb";a:4:{s:4:"file";s:18:"捕获-250x245.gif";s:5:"width";i:250;s:6:"height";i:245;s:9:"mime-type";s:9:"image/gif";}s:24:"astrid-testimonial-thumb";a:4:{s:4:"file";s:17:"捕获-100x98.gif";s:5:"width";i:100;s:6:"height";i:98;s:9:"mime-type";s:9:"image/gif";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2017/05/捕获.gif]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>234816ylnpqg2azlxpnlqz</title>
		<link>http://diaryfun.info/2018/10/lamp%e6%90%ad%e5%bb%ba%e7%a7%81%e6%9c%89%e4%ba%91owncloud%e6%b5%81%e7%a8%8b/234816ylnpqg2azlxpnlqz/</link>
		<pubDate>Sat, 13 Oct 2018 04:36:15 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://diaryfun.info/wp-content/uploads/2018/10/234816ylnpqg2azlxpnlqz.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>208</wp:post_id>
		<wp:post_date><![CDATA[2018-10-13 12:36:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-13 04:36:15]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[234816ylnpqg2azlxpnlqz]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>202</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://diaryfun.info/wp-content/uploads/2018/10/234816ylnpqg2azlxpnlqz.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2018/10/234816ylnpqg2azlxpnlqz.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:400;s:6:"height";i:647;s:4:"file";s:34:"2018/10/234816ylnpqg2azlxpnlqz.jpg";s:5:"sizes";a:6:{s:9:"thumbnail";a:4:{s:4:"file";s:34:"234816ylnpqg2azlxpnlqz-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:34:"234816ylnpqg2azlxpnlqz-185x300.jpg";s:5:"width";i:185;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:18:"astrid-small-thumb";a:4:{s:4:"file";s:34:"234816ylnpqg2azlxpnlqz-360x582.jpg";s:5:"width";i:360;s:6:"height";i:582;s:9:"mime-type";s:10:"image/jpeg";}s:20:"astrid-project-thumb";a:4:{s:4:"file";s:34:"234816ylnpqg2azlxpnlqz-400x310.jpg";s:5:"width";i:400;s:6:"height";i:310;s:9:"mime-type";s:10:"image/jpeg";}s:19:"astrid-client-thumb";a:4:{s:4:"file";s:34:"234816ylnpqg2azlxpnlqz-250x404.jpg";s:5:"width";i:250;s:6:"height";i:404;s:9:"mime-type";s:10:"image/jpeg";}s:24:"astrid-testimonial-thumb";a:4:{s:4:"file";s:34:"234816ylnpqg2azlxpnlqz-100x162.jpg";s:5:"width";i:100;s:6:"height";i:162;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Snipaste_2018-10-13_12-49-40</title>
		<link>http://diaryfun.info/2018/10/lamp%e6%90%ad%e5%bb%ba%e7%a7%81%e6%9c%89%e4%ba%91owncloud%e6%b5%81%e7%a8%8b/snipaste_2018-10-13_12-49-40/</link>
		<pubDate>Sat, 13 Oct 2018 04:50:07 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://diaryfun.info/wp-content/uploads/2018/10/Snipaste_2018-10-13_12-49-40.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>210</wp:post_id>
		<wp:post_date><![CDATA[2018-10-13 12:50:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-13 04:50:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[snipaste_2018-10-13_12-49-40]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>202</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://diaryfun.info/wp-content/uploads/2018/10/Snipaste_2018-10-13_12-49-40.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2018/10/Snipaste_2018-10-13_12-49-40.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:393;s:6:"height";i:682;s:4:"file";s:40:"2018/10/Snipaste_2018-10-13_12-49-40.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:4:{s:4:"file";s:40:"Snipaste_2018-10-13_12-49-40-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:40:"Snipaste_2018-10-13_12-49-40-173x300.png";s:5:"width";i:173;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:18:"astrid-small-thumb";a:4:{s:4:"file";s:40:"Snipaste_2018-10-13_12-49-40-360x625.png";s:5:"width";i:360;s:6:"height";i:625;s:9:"mime-type";s:9:"image/png";}s:20:"astrid-project-thumb";a:4:{s:4:"file";s:40:"Snipaste_2018-10-13_12-49-40-393x310.png";s:5:"width";i:393;s:6:"height";i:310;s:9:"mime-type";s:9:"image/png";}s:19:"astrid-client-thumb";a:4:{s:4:"file";s:40:"Snipaste_2018-10-13_12-49-40-250x434.png";s:5:"width";i:250;s:6:"height";i:434;s:9:"mime-type";s:9:"image/png";}s:24:"astrid-testimonial-thumb";a:4:{s:4:"file";s:40:"Snipaste_2018-10-13_12-49-40-100x174.png";s:5:"width";i:100;s:6:"height";i:174;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>世界，你好！</title>
		<link>http://diaryfun.info/2017/03/hello-world/</link>
		<pubDate>Mon, 20 Mar 2017 10:21:24 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://172.93.42.104/?p=1</guid>
		<description></description>
		<content:encoded><![CDATA[<p>你好哇！</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1</wp:post_id>
		<wp:post_date><![CDATA[2017-03-20 18:21:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-03-20 10:21:24]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[hello-world]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="other"><![CDATA[其他]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[tc-thumb-fld]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:9:"_thumb_id";b:0;s:11:"_thumb_type";s:10:"attachment";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sd_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[hello-world__trashed]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[weibo_sync]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_is_cornerstone]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[zukocc]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[727571327@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[42.92.191.28]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-04-02 22:33:56]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-04-02 14:33:56]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hello world !]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9</wp:comment_id>
			<wp:comment_author><![CDATA[Barbara de analyse SEO Gratuit]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[analyseseofrance@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://odnek.fr/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[186.4.79.94]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-11-25 03:06:54]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-11-24 19:06:54]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Visit <a href="http://odnek.fr/" rel="nofollow"> for free SEO analysis</a> ! 100 FREE, no subscription requierd !]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Cherry G80-3000 机械键盘试用</title>
		<link>http://diaryfun.info/2017/03/cherry-g80-3000-%e6%9c%ba%e6%a2%b0%e9%94%ae%e7%9b%98%e8%af%95%e7%94%a8/</link>
		<pubDate>Tue, 21 Mar 2017 18:08:12 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://172.93.42.104/?p=44</guid>
		<description></description>
		<content:encoded><![CDATA[<h4>自从我用了机械键盘以后，我觉得我打字要飞起来了。我了个去，这个声音好大啊。</h4>

明天上班带着这个，<strong>啪啪啪啪</strong>的，领导听见以后一定会认为我敲代码很用功，一定会赏识我的！

写几行代码试试吧

<pre class="lang:js decode:true  ">for(var i = 0;i &lt;= 100;i++){

    console.log("我是Cherry G80-3000 青轴");

}</pre>

我感觉有一个缺点，就是容易一激动按错键。

还有就是，打多了手有点累啊。我的手这会儿好酸。

<pre class="lang:sh decode:true ">cd d
cd repository
cd git-learn
git init
git add test.js
git commit -m "From my cherry keyboard"</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>44</wp:post_id>
		<wp:post_date><![CDATA[2017-03-22 02:08:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-03-21 18:08:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cherry-g80-3000-%e6%9c%ba%e6%a2%b0%e9%94%ae%e7%9b%98%e8%af%95%e7%94%a8]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="digital"><![CDATA[数码]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sd_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[robotsmeta]]></wp:meta_key>
			<wp:meta_value><![CDATA[index,follow]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[weibo_sync]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_is_cornerstone]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[Diary]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[383001400@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[121.237.121.14]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-03-30 00:32:21]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-03-29 16:32:21]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>我觉得挺清楚的啊</strong>]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>2</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[师傅]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[perlaperla@sina.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[153.3.61.210]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-03-28 20:46:49]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-03-28 12:46:49]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[要瞎啦！！！]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>开始写日报</title>
		<link>http://diaryfun.info/2017/05/%e5%bc%80%e5%a7%8b%e5%86%99%e6%97%a5%e6%8a%a5/</link>
		<pubDate>Thu, 04 May 2017 19:08:08 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://diaryfun.info/?p=97</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>懒惰是有惯性的，而打破这种循环的办法只有一个，那就是立刻行动起来。</strong>

&nbsp;

准备从今天起写日报，在未来的每一天，希望能够总结当天的收获以及为了目标所作出的努力，避免时间消磨在惰性之上。

先简单写个模板出来（使用Markdown语法）：

&nbsp;

<pre class="lang:default decode:true"># 2017-05-04    //日期
## SUMMARY   //每日收获总结

今天继续羽毛球，遇见两个好搭档，成功霸场，大臂继续疑似拉伤。最近很安逸，处于舒适区，需要搞点事情。

## SKILL TREE    //技能树

### 健身    //技能树方向

- 羽毛球 2h

##### 核心加强计划    //专项计划名称

- 卷腹 15*2
- 平板支撑 30s*2

## TODO LIST    //待办事项

- 做JS五子棋首页入口
- 用node.js写爬虫日志备份
- 为个人网站应用gulp.js

## STATISTIC    //统计数据

- 体重 59.05kg</pre>

&nbsp;

<h1>2017-05-04</h1>

<h2>SUMMARY</h2>

今天继续羽毛球，遇见两个好搭档，成功霸场，大臂继续疑似拉伤。最近很安逸，处于舒适区，需要搞点事情。

<h2>SKILL TREE</h2>

<h3>健身</h3>

<ul>
<li>羽毛球 2h</li>
</ul>

<h5>核心加强计划</h5>

<ul>
<li>卷腹 15*2</li>
<li>平板支撑 30s*2</li>
</ul>

<h2>TODO LIST</h2>

<ul>
<li>做JS五子棋首页入口</li>
<li>用node.js写爬虫日志备份</li>
<li>为个人网站应用gulp.js</li>
</ul>

<h2>STATISTIC</h2>

<ul>
<li>体重 59.05kg</li>
</ul>

&nbsp;

感觉wordpress里并没有typora里显示的那么好，不过也没关系了：

<a href="http://diaryfun.info/wp-content/uploads/2017/05/捕获.gif"><img class="alignnone wp-image-106 size-full" src="http://diaryfun.info/wp-content/uploads/2017/05/捕获.gif" alt="" width="649" height="635" /></a>

&nbsp;

&nbsp;

之前微博发过了总结的有效提升自己的方法论：

<strong>1.保持开放的心态</strong>

<strong>2.明确自身定位进行倒逼</strong>

这两句话很重要

&nbsp;

立夏了，又到了最喜欢的季节。

Carpe diem,

一定要过好每一天啊。

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>97</wp:post_id>
		<wp:post_date><![CDATA[2017-05-05 03:08:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-04 19:08:08]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%bc%80%e5%a7%8b%e5%86%99%e6%97%a5%e6%8a%a5]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="other"><![CDATA[其他]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_is_cornerstone]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[weibo_sync]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2017-05 DIARY日报</title>
		<link>http://diaryfun.info/2017/05/2017-05-diary%e6%97%a5%e6%8a%a5/</link>
		<pubDate>Thu, 04 May 2017 19:09:38 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://diaryfun.info/?p=108</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>2017-05-04</h1>

<h2>SUMMARY</h2>

今天继续羽毛球，遇见两个好搭档，成功霸场，大臂继续疑似拉伤。最近很安逸，处于舒适区，需要搞点事情。

<h2>SKILL TREE</h2>

<h3>健身</h3>

<ul>
<li>羽毛球 2h</li>
</ul>

<h5>核心加强计划</h5>

<ul>
<li>卷腹 15*2</li>
<li>平板支撑 30s*2</li>
</ul>

<h2>STATISTIC</h2>

<ul>
<li>体重 59.05kg</li>
</ul>

&nbsp;

&nbsp;

<h1>2017-05-05</h1>

<h2>SUMMARY</h2>

今天没忍住继续打球，手臂终于坚持不住了，今天起必须休养半个月。

<h2>SKILL TREE</h2>

<h3>英语</h3>

<ul>
    <li>扇贝新闻 3篇</li>
</ul>

<h3>健身</h3>

<ul>
    <li>跑步机 2000m 12.5km/h</li>
    <li>羽毛球 1.5h</li>
</ul>

<h5>核心加强计划</h5>

<ul>
<li>平板支撑 45s*4</li>
</ul>

<h2>STATISTIC</h2>

<ul>
<li>体重 59.40kg</li>
</ul>

&nbsp;

&nbsp;

<h1>2017-05-06</h1>

<h2>SUMMARY</h2>

成功掌握了焊接机械键盘轴的技能，还挺好玩的，需要细心

<h2>SKILL TREE</h2>

<h3>其他</h3>

<ul>
<li>学会机械键盘换轴</li>
</ul>

<h3>英语</h3>

<ul>
<li>扇贝新闻 2篇</li>
</ul>

<h2>STATISTIC</h2>

<ul>
<li>体重 59.90kg</li>
</ul>

&nbsp;

&nbsp;

<h1>2017-05-07</h1>

<h2>SUMMARY</h2>

吃饱喝足休息一天

<h2>SKILL TREE</h2>

<h3>电影</h3>

<ul>
<li>《摔跤吧！爸爸》</li>
</ul>

<h3>烹饪</h3>

<ul>
<li>柠檬黄油煎鸡胸</li>
</ul>

&nbsp;

<h2>STATISTIC</h2>

<ul>
<li>体重 59.90kg</li>
</ul>

&nbsp;

&nbsp;

<h1>2017-05-08</h1>

<h2>SUMMARY</h2>

发现软件SwitchHosts。公司代码上线CDN试验成功。

<h2>SKILL TREE</h2>

<h3>健身</h3>

<ul>
<li>跑步机 2000m 12.5km/h</li>
</ul>

<h2>STATISTIC</h2>

<ul>
<li>体重 59.15kg</li>
</ul>

&nbsp;

&nbsp;

<h1>2017-05-09</h1>

<h2>SUMMARY</h2>

今天买了想买很久的3DS，一个限量版xbox one s 蓝牙手柄，还有一张闪迪的32G SD卡。最近买的东西有点多，要努力点别浪费时间啊。今天别的事啥事没干，真是废柴啊，要积极利落起来啊。

发现一个很厉害的网盘搜索http://www.panc.cc。

<h2>SKILL TREE</h2>

<h3>烹饪</h3>

<ul>
    <li>
<div class="info pure-u">
<p class="name">基础版味噌汤</p>

</div></li>
</ul>

<h2>STATISTIC</h2>

<ul>
<li>体重 59.15kg</li>
</ul>

&nbsp;

&nbsp;

<h1>2017-05-10</h1>

<h2>SUMMARY</h2>

找了一些3DS游戏

<h2>SKILL TREE</h2>

<h2>STATISTIC</h2>

<div class="info pure-u"></div>

<ul>
<li>体重 60.25kg</li>
</ul>

&nbsp;

&nbsp;

<h1>2017-05-11</h1>

<h2>SUMMARY</h2>

3DS到货了，成色略差，但是功能很好。手柄有些问题，准备退货。至于3DS破解，就是跟着有人总结的pdf文件一步一步做下来就行，还是挺佩服这些写破解文件的开发人员的。

<h2>SKILL TREE</h2>

<h3>其他</h3>

<ul>
    <li>
<div class="info pure-u">
<p class="name">A9破解3DS</p>

</div></li>
</ul>

<h2>STATISTIC</h2>

<ul>
<li>体重 60.25kg</li>
</ul>

&nbsp;

&nbsp;

<h1>2017-05-12</h1>

<h2>SUMMARY</h2>

改BUG改的头大，结果发现是数据问题，还是我定位问题的方法有问题，应该更快速发现BUG的原因。

&nbsp;

<h2>SKILL TREE</h2>

<h2>STATISTIC</h2>

<ul>
<li>体重 59.75kg</li>
</ul>

&nbsp;

&nbsp;

<h1>2017-05-13</h1>

<h2>SUMMARY</h2>

约拍了一个妹子，还行，因为妹子人很憨厚很不错。我还应该表现得更专业和自信一些。玩了一下午游戏，没好好吃饭，不应该这样。也可能是玩上了一直以来想玩的游戏掌机，小时候爸妈不可能给买，所以弥补了儿时的渴望，就像小时候玩游戏一样疯狂啊，还是要控制自己。称重一下瘦了4斤，有点夸张，以后一个人也要好好吃饭。

<h2>SKILL TREE</h2>

<h3>摄影</h3>

<ul>
    <li>人像约拍99元</li>
</ul>

<h2>STATISTIC</h2>

<div class="info pure-u"></div>

<ul>
<li>体重 58.25kg</li>
</ul>

&nbsp;

&nbsp;

<h1>2017-05-14</h1>

<h2>SUMMARY</h2>

今天去拿到了900块买的新大三，发现非常的划算，32G SD + 64G SD + GW卡 + new 3DSLL，而且还基本装满了游戏，感觉这配置很豪华。但是我手贱点了一下升级系统，GW虚拟系统就不能启动了，很郁闷，搞了半天没办法了。以后没有问题的时候还是不要瞎折腾，就算要瞎折腾也应该在充分了解信息的情况下，分析利弊，再做决定。冲动往往导致一些不好的结果。

<h2>SKILL TREE</h2>

<h2>STATISTIC</h2>

&nbsp;

&nbsp;

<h1>2017-05-15</h1>

<h2>SUMMARY</h2>

今天状态还行，下面要开始抓紧办理离职手续了。3DS的系统再不想折腾了，毕竟买游戏机的初衷是玩想玩的那几个游戏，而不是装很多游戏装逼，更不是折腾系统什么的，感觉折腾系统已经花费了很多时间了，还是静待GW官网更新吧。今天记录了一下在公司时发现的一些好用的software：<a href="http://diaryfun.info/2017/05/记录一些好用的软件/">http://diaryfun.info/2017/05/记录一些好用的软件/</a>

<h2>SKILL TREE</h2>

<h3>健身</h3>

<ul>
    <li>跑步机2000m 11km/h</li>
</ul>

<h3>烹饪</h3>

<ul>
    <li>红焖牛肉</li>
    <li>海鲜菇牛腩汤</li>
</ul>

<h2>STATISTIC</h2>

<ul>
<li>体重 58.25kg</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>108</wp:post_id>
		<wp:post_date><![CDATA[2017-05-05 03:09:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-04 19:09:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[2017-05-diary%e6%97%a5%e6%8a%a5]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="diary"><![CDATA[日报]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_is_cornerstone]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[weibo_sync]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[9]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>记录一些好用的软件</title>
		<link>http://diaryfun.info/2017/05/%e8%ae%b0%e5%bd%95%e4%b8%80%e4%ba%9b%e5%a5%bd%e7%94%a8%e7%9a%84%e8%bd%af%e4%bb%b6/</link>
		<pubDate>Mon, 15 May 2017 19:06:08 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://diaryfun.info/?p=130</guid>
		<description></description>
		<content:encoded><![CDATA[regex match tracer  正则表达式匹配工具

phpstudy  简易快速搭建一个Apache服务器，同时启动PHP+MySQL

beyond compare  专业文本比对工具

switchhosts  本地hosts文件快速切换

unlocker  快速解除特定软件进程

takecolor  屏幕取色

&nbsp;

ComfyFileRecovery  数据恢复

TeamViewer  远程协助

Typora  本地markdown编辑器

Pixel Ruler  屏幕像素测量

FastStone Capture  屏幕截图

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>130</wp:post_id>
		<wp:post_date><![CDATA[2017-05-16 03:06:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-05-15 19:06:08]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e8%ae%b0%e5%bd%95%e4%b8%80%e4%ba%9b%e5%a5%bd%e7%94%a8%e7%9a%84%e8%bd%af%e4%bb%b6]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="app"><![CDATA[应用]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[weibo_sync]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>数据结构与算法（C++）代码练习（图）</title>
		<link>http://diaryfun.info/2017/11/%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84%e4%b8%8e%e7%ae%97%e6%b3%95%ef%bc%88c%ef%bc%89%e4%bb%a3%e7%a0%81%e7%bb%83%e4%b9%a0/</link>
		<pubDate>Mon, 27 Nov 2017 15:30:21 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://diaryfun.info/?p=137</guid>
		<description></description>
		<content:encoded><![CDATA[<em>所有代码均由Microsoft <span class="st">Visual Studio 2015编译通过</span></em>

&nbsp;

&nbsp;

&nbsp;

<h4>图的遍历DFS和BFS</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="图的遍历DFS和BFS">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
#define N 16
using namespace std;
class listNode
{
public:
    int data;
    listNode* next;
};
class QueueNode
{
public:
    int a;
    QueueNode* next;
};
void enqueue(int a, QueueNode*&amp; rear) {
    rear-&gt;a = a;
    rear-&gt;next = new QueueNode;
    rear = rear-&gt;next;
    rear-&gt;next = NULL;
}
int dequeue(QueueNode*&amp; front) {
    QueueNode* temp = front;
    front = front-&gt;next;
    temp-&gt;next = NULL;
    return temp-&gt;a;
}
void inputLesson(listNode* head[])
{
    head[0] = NULL;
    head[1] = new listNode;
    head[1]-&gt;data = 3;
    head[1]-&gt;next = NULL;
    head[2] = new listNode;
    head[2]-&gt;data = 3;
    head[2]-&gt;next = new listNode;
    head[2]-&gt;next-&gt;data = 13;
    head[2]-&gt;next-&gt;next = NULL;
    head[3] = new listNode;
    head[3]-&gt;data = 7;
    head[3]-&gt;next = NULL;
    head[4] = new listNode;
    head[4]-&gt;data = 5;
    head[4]-&gt;next = NULL;
    head[5] = new listNode;
    head[5]-&gt;data = 6;
    head[5]-&gt;next = NULL;
    head[6] = new listNode;
    head[6]-&gt;data = 15;
    head[6]-&gt;next = NULL;
    head[7] = new listNode;
    head[7]-&gt;data = 10;
    head[7]-&gt;next = new listNode;
    head[7]-&gt;next-&gt;data = 11;
    head[7]-&gt;next-&gt;next = new listNode;
    head[7]-&gt;next-&gt;next-&gt;data = 12;
    head[7]-&gt;next-&gt;next-&gt;next = NULL;
    head[8] = new listNode;
    head[8]-&gt;data = 9;
    head[8]-&gt;next = NULL;
    head[9] = new listNode;
    head[9]-&gt;data = 10;
    head[9]-&gt;next = new listNode;
    head[9]-&gt;next-&gt;data = 11;
    head[9]-&gt;next-&gt;next = NULL;
    head[10] = new listNode;
    head[10]-&gt;data = 14;
    head[10]-&gt;next = NULL;
    head[11] = NULL;
    head[12] = NULL;
    head[13] = NULL;
    head[14] = NULL;
    head[15] = NULL;
}
void DFS(listNode* list[], int index, int visited[])
{
    listNode* p;
    if (visited[index]) {
        return;
    }
    cout &lt;&lt; index;
    visited[index] = 1;
    p = list[index];
    while (p) {
        DFS(list, p-&gt;data, visited);
        p = p-&gt;next;
    }
}
void BFS(listNode* list[], int index, int visited[])
{
    int v;
    listNode* p;
    QueueNode* front,* rear;
    front = rear = new QueueNode;
    rear-&gt;next = NULL;
    enqueue(index, rear);
    visited[index] = 1;
    while (front != rear) {
        v = dequeue(front);
        cout &lt;&lt; v;
        p = list[v];
        while (p) {
            if (!(visited[p-&gt;data])) {
                enqueue(p-&gt;data, rear);
                visited[p-&gt;data] = 1;
            }
            p = p-&gt;next;
        }
    }
}
void resetVisited(int visited[])
{
    for (int i = 0; i &lt; N; i++) {
        visited[i] = 0;
    }
}
void main()
{
    listNode* list[N];
    int n;
    int visited[N];
    inputLesson(list);
    cout &lt;&lt; "请输入深度优先搜索起始点序号：\n";
    cin &gt;&gt; n;
    resetVisited(visited);
    DFS(list, n, visited);
    cout &lt;&lt; '\n';
    cout &lt;&lt; "请输入广度优先搜索起始点序号：\n";
    cin &gt;&gt; n;
    resetVisited(visited);
    BFS(list, n, visited);
    cout &lt;&lt; '\n';
    system("pause");
}
</pre>

&nbsp;

&nbsp;

<h4>最小生成树Prim算法</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="最小生成树Prim算法">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
#define N 8
#define MAX 100000
using namespace std;
class AdjList
{
public:
    int data;
    int dist;
    AdjList* next;
    AdjList() {
        next = NULL;
    }
};
class Vertex
{
public:
    int id;
    AdjList* adj;
    int dist;
    int visited;
    int path;
    Vertex() {
        adj = NULL;
        path = 0;
        visited = 0;
        dist = MAX;
    }
};
class Edge
{
public:
    int v;
    int w;
    void printEdge()
    {
        cout &lt;&lt; v &lt;&lt; '-' &lt;&lt; w &lt;&lt; "\n";
    }
};
class Heap
{
public:
    int size;
    Vertex a[N];
};
void checkOdd(Heap&amp; minHeap)
{
    if (!(minHeap.size % 2)) {
        minHeap.a[minHeap.size + 1].dist = MAX;
    }
}
void incertMinHeap(Vertex v, Heap&amp; minHeap)
{
    int hole = ++minHeap.size;
    while (hole != 1 &amp;&amp; v.dist &lt; minHeap.a[hole / 2].dist) {
        minHeap.a[hole] = minHeap.a[hole / 2];
        hole = hole / 2;
    }
    minHeap.a[hole] = v;
    checkOdd(minHeap);
}
Vertex deleteMin(Heap&amp; minHeap)
{
    Vertex min = minHeap.a[1];
    int hole = 1;
    while (hole &lt;= minHeap.size / 2 &amp;&amp; (minHeap.a[minHeap.size].dist &gt; minHeap.a[hole * 2 + 1].dist || minHeap.a[minHeap.size].dist &gt; minHeap.a[hole * 2].dist)) {
        if (minHeap.a[hole * 2 + 1].dist &lt; minHeap.a[hole * 2].dist) {
            minHeap.a[hole] = minHeap.a[hole * 2 + 1];
            hole = hole * 2 + 1;
        }
        else {
            minHeap.a[hole] = minHeap.a[hole * 2];
            hole = hole * 2;
        }
    }
    minHeap.a[hole] = minHeap.a[minHeap.size];
    minHeap.size--;
    checkOdd(minHeap);
    return min;
}
void input(Vertex &amp;v, int data, int dist)
{
    AdjList*&amp; p = v.adj;
    if (data == 0 &amp;&amp; dist == 0) {
        p = NULL;
        return;
    }
    if (!p) {
        p = new AdjList;
        p-&gt;data = data;
        p-&gt;dist = dist;
    }
    else {
        AdjList* temp = p;
        while (p-&gt;next) {
            p = p-&gt;next;
        }
        p-&gt;next = new AdjList;
        p-&gt;next-&gt;data = data;
        p-&gt;next-&gt;dist = dist;
        p = temp;
    }
}
void inputSample(Vertex v[])
{
    for (int i = 0; i &lt; N; i++)
    {
        v[i].id = i;
    }
    input(v[1], 2, 2);
    input(v[1], 3, 4);
    input(v[1], 4, 1);
    input(v[2], 1, 2);
    input(v[2], 4, 3);
    input(v[2], 5, 10);
    input(v[3], 1, 4);
    input(v[3], 4, 2);
    input(v[3], 6, 5);
    input(v[4], 1, 1);
    input(v[4], 2, 3);
    input(v[4], 3, 2);
    input(v[4], 5, 7);
    input(v[4], 6, 8);
    input(v[4], 7, 4);
    input(v[5], 2, 10);
    input(v[5], 4, 7);
    input(v[5], 7, 6);
    input(v[6], 3, 5);
    input(v[6], 4, 8);
    input(v[6], 7, 1);
    input(v[7], 4, 4);
    input(v[7], 5, 6);
    input(v[7], 6, 1);
}
void Prim(Vertex &amp;s, Vertex g[], Edge MST[])
{
    int i = 0;
    Vertex v;
    AdjList* p;
    Heap minHeap;
    minHeap.size = 0;
    s.dist = 0;
    incertMinHeap(s, minHeap);
    while (minHeap.size) {
        v = deleteMin(minHeap);
        while (g[v.id].visited) {
            if (!minHeap.size) {
                return;
            }
            v = deleteMin(minHeap);
        }
        g[v.id].visited = 1;
        g[v.id].dist = 0;
        if (v.path) {
            i++;
            MST[i].v = v.path;
            MST[i].w = v.id;
        }
        p = v.adj;
        while (p) {
            if (g[p-&gt;data].visited == 0 &amp;&amp; p-&gt;dist &lt; g[p-&gt;data].dist) {
                g[p-&gt;data].dist = p-&gt;dist ;
                g[p-&gt;data].path = v.id;
                incertMinHeap(g[p-&gt;data], minHeap);
            }
            p = p-&gt;next;
        }
    }
}
void check(Vertex v[])
{
    AdjList* p;
    for (int i = 1; i &lt; N; i++)
    {
        cout &lt;&lt; i &lt;&lt; '\n';
        p = v[i].adj;
        while (p) {
            cout &lt;&lt; p-&gt;data &lt;&lt; ' ' &lt;&lt; p-&gt;dist &lt;&lt; ' ' &lt;&lt; p-&gt;next &lt;&lt; '\n';
            p = p-&gt;next;
        }
    }
    system("pause");
}
void main()
{

    Vertex v[N];
    Edge MST[N - 1];
    int n;
    inputSample(v);
    cout &lt;&lt; "请输入源点序号：\n";
    cin &gt;&gt; n;
    Prim(v[n], v, MST);
    cout &lt;&lt; "最小生成树为：\n";
    for (int i = 1; i &lt; N - 1; i++)
    {
        MST[i].printEdge();
    }
    system("pause");
}
</pre>

&nbsp;

&nbsp;

<h4>最小生成树Kruskal算法</h4>

&nbsp;

<pre class="lang:c++ decode:true " title="最小生成树Kruskal算法">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
#define N 8
#define MAX 100000
using namespace std;
class AdjList
{
public:
    int data;
    int dist;
    AdjList* next;
    AdjList() {
        next = NULL;
    }
};
class Vertex
{
public:
    int id;
    AdjList* adj;
    int root;
    int visited;

    Vertex() {
        adj = NULL;
        root = -1;
        visited = 0;
    }
};
class Edge
{
public:
    int v;
    int w;
    int l;
    Edge(int v = 0, int w = 0, int l = 0) :v(v), w(w), l(l) {}
    void printEdge()
    {
        cout &lt;&lt; v &lt;&lt; '-' &lt;&lt; w &lt;&lt; "\n";
    }
};
class Heap
{
public:
    int size;
    Edge a[N*(N - 1)];
    Heap() {
        size = 0;
    }
};
void checkOdd(Heap&amp; minHeap)
{
    if (!(minHeap.size % 2)) {
        minHeap.a[minHeap.size + 1].l = MAX;
    }
}
void incertMinHeap(Edge e, Heap&amp; minHeap)
{
    int hole = ++minHeap.size;
    while (hole != 1 &amp;&amp; e.l &lt; minHeap.a[hole / 2].l) {
        minHeap.a[hole] = minHeap.a[hole / 2];
        hole = hole / 2;
    }
    minHeap.a[hole] = e;
    checkOdd(minHeap);
}
Edge deleteMin(Heap&amp; minHeap)
{
    Edge min = minHeap.a[1];
    int hole = 1;
    while (hole &lt;= minHeap.size / 2 &amp;&amp; (minHeap.a[minHeap.size].l &gt; minHeap.a[hole * 2 + 1].l || minHeap.a[minHeap.size].l &gt; minHeap.a[hole * 2].l)) {
        if (minHeap.a[hole * 2 + 1].l &lt; minHeap.a[hole * 2].l) {
            minHeap.a[hole] = minHeap.a[hole * 2 + 1];
            hole = hole * 2 + 1;
        }
        else {
            minHeap.a[hole] = minHeap.a[hole * 2];
            hole = hole * 2;
        }
    }
    minHeap.a[hole] = minHeap.a[minHeap.size];
    minHeap.size--;
    checkOdd(minHeap);
    return min;
}
int find(Vertex v, Vertex g[])
{
    if (v.root == -1) {
        return v.id;
    }
    return find(g[v.root], g);
}
void unionSet(int r1, int r2, Vertex g[])
{
        g[r2].root = g[r1].id;
}
void input(Vertex &amp;v, int data, int dist)
{
    AdjList*&amp; p = v.adj;
    if (data == 0 &amp;&amp; dist == 0) {
        p = NULL;
        return;
    }
    if (!p) {
        p = new AdjList;
        p-&gt;data = data;
        p-&gt;dist = dist;
    }
    else {
        AdjList* temp = p;
        while (p-&gt;next) {
            p = p-&gt;next;
        }
        p-&gt;next = new AdjList;
        p-&gt;next-&gt;data = data;
        p-&gt;next-&gt;dist = dist;
        p = temp;
    }
}
void inputSample(Vertex v[])
{
    for (int i = 0; i &lt; N; i++)
    {
        v[i].id = i;
    }
    input(v[1], 2, 2);
    input(v[1], 3, 4);
    input(v[1], 4, 1);
    input(v[2], 1, 2);
    input(v[2], 4, 3);
    input(v[2], 5, 10);
    input(v[3], 1, 4);
    input(v[3], 4, 2);
    input(v[3], 6, 5);
    input(v[4], 1, 1);
    input(v[4], 2, 3);
    input(v[4], 3, 2);
    input(v[4], 5, 7);
    input(v[4], 6, 8);
    input(v[4], 7, 4);
    input(v[5], 2, 10);
    input(v[5], 4, 7);
    input(v[5], 7, 6);
    input(v[6], 3, 5);
    input(v[6], 4, 8);
    input(v[6], 7, 1);
    input(v[7], 4, 4);
    input(v[7], 5, 6);
    input(v[7], 6, 1);
}
void Kruskal(Vertex g[], Edge MST[])
{
    Heap minHeap;
    Edge e;
    int i = 0;
    for (int i = 1; i &lt; N; i++) {
        AdjList* p = g[i].adj;
        while (p) {
            if (!g[p-&gt;data].visited) {
                Edge e(i, p-&gt;data, p-&gt;dist);
                incertMinHeap(e, minHeap);
            }
            p = p-&gt;next;
        }
        g[i].visited = 1;
    }
    while (minHeap.size) {
        e = deleteMin(minHeap);
        int r1 = find(g[e.v], g);
        int r2 = find(g[e.w], g);
        if (r1 != r2) {
            MST[++i] = e;
            unionSet(r1, r2, g);
        }
    }

}
void main()
{
    Vertex v[N];
    Edge MST[N - 1];
    inputSample(v);
    Kruskal(v, MST);
    cout &lt;&lt; "最小生成树为：\n";
    for (int i = 1; i &lt; N - 1; i++)
    {
        MST[i].printEdge();
    }
    system("pause");
}
</pre>

&nbsp;

&nbsp;

<h4><span style="color: #333333;">基于最小堆的有权图单源最短路径Dijkstra算法</span></h4>

&nbsp;

<pre class="lang:c++ decode:true" title="基于最小堆的有权图单源最短路径Dijkstra算法">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
#define N 16
#define MAX 100000
using namespace std;
class AdjList
{
public:
    int data;
    int dist;
    AdjList* next;
    AdjList() {
        next = NULL;
    }
};
class Vertex
{
public:
    int id;
    AdjList* adj;
    int dist;
    int visited;
    int path;
    Vertex() {
        adj = NULL;
        path = 0;
        visited = 0;
        dist = MAX;
    }
};
class Heap
{
public:
    int size;
    Vertex a[N];
};
void checkOdd(Heap&amp; minHeap)
{
    if (!(minHeap.size % 2)) {
        minHeap.a[minHeap.size + 1].dist = MAX;
    }
}
void incertMinHeap(Vertex v, Heap&amp; minHeap)
{
    int hole = ++minHeap.size;
    while (hole != 1 &amp;&amp; v.dist &lt; minHeap.a[hole / 2].dist) {
        minHeap.a[hole] = minHeap.a[hole / 2];
        hole = hole / 2;
    }
    minHeap.a[hole] = v;
    checkOdd(minHeap);
}
Vertex deleteMin(Heap&amp; minHeap)
{
    Vertex min = minHeap.a[1];
    int hole = 1;
    while (hole &lt;= minHeap.size / 2 &amp;&amp; (minHeap.a[minHeap.size].dist &gt; minHeap.a[hole * 2 + 1].dist || minHeap.a[minHeap.size].dist &gt; minHeap.a[hole * 2].dist)) {
        if (minHeap.a[hole * 2 + 1].dist &lt; minHeap.a[hole * 2].dist) {
            minHeap.a[hole] = minHeap.a[hole * 2 + 1];
            hole = hole * 2 + 1;
        }
        else {
            minHeap.a[hole] = minHeap.a[hole * 2];
            hole = hole * 2;
        }
    }
    minHeap.a[hole] = minHeap.a[minHeap.size];
    minHeap.size--;
    checkOdd(minHeap);
    return min;
}
void input(Vertex &amp;v, int data, int dist)
{
    AdjList*&amp; p = v.adj;
    if (data == 0 &amp;&amp; dist == 0){
        p = NULL;
        return;
    }
    if (!p) {
        p = new AdjList;
        p-&gt;data = data;
        p-&gt;dist = dist;
    }
    else {
        AdjList* temp = p;
        while (p-&gt;next) {
            p = p-&gt;next;
        }
        p-&gt;next = new AdjList;
        p-&gt;next-&gt;data = data;
        p-&gt;next-&gt;dist = dist;
        p = temp;
    }
}
void inputSample(Vertex v[])
{
    for (int i = 0; i &lt; N; i++)
    {
        v[i].id = i;
    }
    input(v[1], 2, 2);
    input(v[1], 4, 1);
    input(v[2], 4, 3);
    input(v[2], 5, 10);
    input(v[3], 1, 4);
    input(v[3], 6, 5);
    input(v[4], 3, 2);
    input(v[4], 5, 2);
    input(v[4], 6, 8);
    input(v[4], 7, 4);
    input(v[5], 7, 6);
    input(v[7], 6, 1);
}
void Dijkstra(Vertex &amp;s, Vertex g[])
{
    Vertex v;
    AdjList* p;
    Heap minHeap;
    minHeap.size = 0;
    s.dist = 0;
    incertMinHeap(s, minHeap);
    while (minHeap.size) {
        v = deleteMin(minHeap);
        while (g[v.id].visited) {
            if (!minHeap.size) {
                return;
            }
            v = deleteMin(minHeap);
        }
        g[v.id].visited = 1;
        p = v.adj;
        while (p) {
            if (g[p-&gt;data].visited == 0 &amp;&amp; p-&gt;dist + v.dist &lt; g[p-&gt;data].dist) {
                g[p-&gt;data].dist = p-&gt;dist + v.dist;
                g[p-&gt;data].path = v.id;
                incertMinHeap(g[p-&gt;data], minHeap);
            }
            p = p-&gt;next;
        }
    }
}
void printPath(Vertex v, Vertex g[])
{
    if (v.path) {
        printPath(g[v.path], g);
        cout &lt;&lt; "-&gt;";
    }
    cout &lt;&lt; v.id;
}
void check(Vertex v[])
{
    AdjList* p;
    for (int i = 1; i &lt; N; i++)
    {
        cout &lt;&lt; i &lt;&lt; '\n';
        p = v[i].adj;
        while (p) {
            cout &lt;&lt; p-&gt;data &lt;&lt; ' ' &lt;&lt; p-&gt;dist &lt;&lt; ' ' &lt;&lt; p-&gt;next &lt;&lt; '\n';
            p = p-&gt;next;
        }
    }
    system("pause");
}
void main()
{

    Vertex v[N];
    int n;
    inputSample(v);
    cout &lt;&lt; "请输入源点序号：\n";
    cin &gt;&gt; n;
    Dijkstra(v[n], v);
    cout &lt;&lt; "请输入终点序号：\n";
    cin &gt;&gt; n;
    cout &lt;&lt; "最短路径为：\n";
    printPath(v[n], v);
    cout &lt;&lt; "路径权重：" &lt;&lt; v[n].dist;
    system("pause");
}
</pre>

&nbsp;

&nbsp;

<h4>邻接表存储有向无环图以队列法拓扑排序</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="邻接表存储有向无环图以队列法拓扑排序">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
#define N 16
using namespace std;
class listNode
{
public:
    int data;
    listNode* next;
};
class QueueNode
{
public:
    int a;
    QueueNode* next;
};
void enqueue(int a, QueueNode*&amp; rear) {
    rear-&gt;a = a;
    rear-&gt;next = new QueueNode;
    rear = rear-&gt;next;
    rear-&gt;next = NULL;
}
int dequeue(QueueNode*&amp; front) {
    QueueNode* temp = front;
    front = front-&gt;next;
    temp-&gt;next = NULL;
    return temp-&gt;a;
}
void inputLesson(listNode* head[])
{
    head[0] = NULL;
    head[1] = new listNode;
    head[1]-&gt;data = 3;
    head[1]-&gt;next = NULL;
    head[2] = new listNode;
    head[2]-&gt;data = 3;
    head[2]-&gt;next = new listNode;
    head[2]-&gt;next-&gt;data = 13;
    head[2]-&gt;next-&gt;next = NULL;
    head[3] = new listNode;
    head[3]-&gt;data = 7;
    head[3]-&gt;next = NULL;
    head[4] = new listNode;
    head[4]-&gt;data = 5;
    head[4]-&gt;next = NULL;
    head[5] = new listNode;
    head[5]-&gt;data = 6;
    head[5]-&gt;next = NULL;
    head[6] = new listNode;
    head[6]-&gt;data = 15;
    head[6]-&gt;next = NULL;
    head[7] = new listNode;
    head[7]-&gt;data = 10;
    head[7]-&gt;next = new listNode;
    head[7]-&gt;next-&gt;data = 11;
    head[7]-&gt;next-&gt;next = new listNode;
    head[7]-&gt;next-&gt;next-&gt;data = 12;
    head[7]-&gt;next-&gt;next-&gt;next = NULL;
    head[8] = new listNode;
    head[8]-&gt;data = 9;
    head[8]-&gt;next = NULL;
    head[9] = new listNode;
    head[9]-&gt;data = 10;
    head[9]-&gt;next = new listNode;
    head[9]-&gt;next-&gt;data = 11;
    head[9]-&gt;next-&gt;next = NULL;
    head[10] = new listNode;
    head[10]-&gt;data = 14;
    head[10]-&gt;next = NULL;
    head[11] = NULL;
    head[12] = NULL;
    head[13] = NULL;
    head[14] = NULL;
    head[15] = NULL;
}
void scanAll(listNode* list[], int inDegree[])
{
    for (int i = 1; i &lt; N; i++)
    {
        listNode* p;
        p = list[i];
        while (p)
        {
            inDegree[p-&gt;data]++;
            p = p-&gt;next;
        }
    }
}
void topSort(listNode* list[])
{
    int v;
    int inDegree[N];
    listNode* p;
    QueueNode* front, *rear;
    front = rear = new QueueNode;
    for (int i = 0; i &lt; N; i++) {
        inDegree[i] = 0;
    }
    scanAll(list, inDegree);
    for (int i = 1; i &lt; N; i++) {
        if (!inDegree[i]) {
            enqueue(i, rear);
        }
    }
    while (front != rear) {
        v = dequeue(front);
        cout &lt;&lt; v &lt;&lt; '\n';
        p = list[v];
        while (p) {
            if (!(--inDegree[p-&gt;data])) {
                enqueue(p-&gt;data, rear);
            }
            p = p-&gt;next;
        }
    }

}
void main()
{
    listNode* list[N];
    inputLesson(list);
    topSort(list);
    system("pause");
}
</pre>

&nbsp;

&nbsp;

&nbsp;

&nbsp;

2016年3月]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>137</wp:post_id>
		<wp:post_date><![CDATA[2017-11-27 23:30:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-11-27 15:30:21]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84%e4%b8%8e%e7%ae%97%e6%b3%95%ef%bc%88c%ef%bc%89%e4%bb%a3%e7%a0%81%e7%bb%83%e4%b9%a0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="algorithm"><![CDATA[算法]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[weibo_sync]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Windows批处理常用命令</title>
		<link>http://diaryfun.info/2017/11/windows%e6%89%b9%e5%a4%84%e7%90%86%e5%b8%b8%e7%94%a8%e5%91%bd%e4%bb%a4/</link>
		<pubDate>Mon, 27 Nov 2017 15:44:43 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://diaryfun.info/?p=142</guid>
		<description></description>
		<content:encoded><![CDATA[1 echo 和 @

回显命令

@                     #关闭单行回显

echo off              #从下一行开始关闭回显

@echo off             #从本行开始关闭回显。一般批处理第一行都是这个

echo on               #从下一行开始打开回显

echo                  #显示当前是 echo off 状态还是 echo on 状态

echo.                 #输出一个”回车换行”，空白行

#(同echo, echo; echo+ echo[ echo] echo/ echo)

&nbsp;

2 errorlevel

echo %errorlevel%

每个命令运行结束，可以用这个命令行格式查看返回码

默认值为0，一般命令执行出错会设 errorlevel 为1

&nbsp;

3 dir

显示文件夹内容

dir                  #显示当前目录中的文件和子目录

dir /a               #显示当前目录中的文件和子目录，包括隐藏文件和系统文件

dir c: /a:d          #显示 C 盘当前目录中的目录

dir c: /a:-d         #显示 C 盘根目录中的文件

dir c: /b/p         #/b只显示文件名，/p分页显示

dir *.exe /s         #显示当前目录和子目录里所有的.exe文件

&nbsp;

4 cd

切换目录

cd                  #进入根目录

cd                   #显示当前目录

cd /d d:sdk         #可以同时更改盘符和目录

&nbsp;

5 md

创建目录

md d:abc          #如果 d:a 不存在，将会自动创建中级目录

#如果命令扩展名被停用，则需要键入 mkdir abc。

&nbsp;

6 rd

删除目录

rd abc               #删除当前目录里的 abc 子目录，要求为空目录

rd /s/q d:temp      #删除 d:temp 文件夹及其子文件夹和文件，/q安静模式

&nbsp;

7 del

删除文件

del d:test.txt      #删除指定文件，不能是隐藏、系统、只读文件

del /q/a/f d:temp<em>.</em>

删除 d:temp 文件夹里面的所有文件，包括隐藏、只读、系统文件，不包括子目录

del /q/a/f/s d:temp<em>.</em>

删除 d:temp 及子文件夹里面的所有文件，包括隐藏、只读、系统文件，不包括子目录

&nbsp;

8 ren

重命名命令

ren d:temp tmp      #支持对文件夹的重命名

&nbsp;

9 cls

清屏

&nbsp;

10 type

显示文件内容

type c:boot.ini     #显示指定文件的内容，程序文件一般会显示乱码

type *.txt           #显示当前目录里所有.txt文件的内容

&nbsp;

11 copy

拷贝文件

copy c:test.txt d:test.bak

复制 c:test.txt 文件到 d: ，并重命名为 test.bak

copy con test.txt

从屏幕上等待输入，按 Ctrl+Z 结束输入，输入内容存为test.txt文件

con代表屏幕，prn代表打印机，nul代表空设备

copy 1.txt + 2.txt 3.txt

合并 1.txt 和 2.txt 的内容，保存为 3.txt 文件

如果不指定 3.txt ，则保存到 1.txt

copy test.txt +

复制文件到自己，实际上是修改了文件日期

&nbsp;

12 title

设置cmd窗口的标题

title 新标题         #可以看到cmd窗口的标题栏变了

&nbsp;

13 ver

显示系统版本

&nbsp;

14 label 和 vol

设置卷标

vol                  #显示卷标

label                #显示卷标，同时提示输入新卷标

label c:system       #设置C盘的卷标为 system

&nbsp;

15 pause

暂停命令

&nbsp;

16 rem 和 ::

注释命令

注释行不执行操作

&nbsp;

17 date 和 time

日期和时间

date           #显示当前日期，并提示输入新日期，按"回车"略过输入

date/t         #只显示当前日期，不提示输入新日期

time           #显示当前时间，并提示输入新时间，按"回车"略过输入

time/t         #只显示当前时间，不提示输入新时间

&nbsp;

18 goto 和 :

跳转命令

:label         #行首为:表示该行是标签行，标签行不执行操作

goto label     #跳转到指定的标签那一行

&nbsp;

19 find (外部命令)

查找命令

find "abc" c:test.txt

在 c:test.txt 文件里查找含 abc 字符串的行

如果找不到，将设 errorlevel 返回码为1

find /i “abc” c:test.txt

查找含 abc 的行，忽略大小写

find /c "abc" c:test.txt

显示含 abc 的行的行数

&nbsp;

20 more (外部命令)

逐屏显示

more c:test.txt     #逐屏显示 c:test.txt 的文件内容

&nbsp;

21 tree

显示目录结构

tree d:             #显示D盘的文件目录结构

&nbsp;

22 &amp;

顺序执行多条命令，而不管命令是否执行成功

&nbsp;

23 &amp;&amp;

顺序执行多条命令，当碰到执行出错的命令后将不执行后面的命令

find "ok" c:test.txt &amp;&amp; echo 成功

如果找到了"ok"字样，就显示"成功"，找不到就不显示

&nbsp;

24 ||

顺序执行多条命令，当碰到执行正确的命令后将不执行后面的命令

find "ok" c:test.txt || echo 不成功

如果找不到"ok"字样，就显示"不成功"，找到了就不显示

&nbsp;

25 |

管道命令

dir <em>.</em> /s/a | find /c ".exe"

管道命令表示先执行 dir 命令，对其输出的结果执行后面的 find 命令

该命令行结果：输出当前文件夹及所有子文件夹里的.exe文件的个数

type c:test.txt|more

这个和 more c:test.txt 的效果是一样的

&nbsp;

26 &gt; 和 &gt;&gt;

输出重定向命令

<blockquote>
  清除文件中原有的内容后再写入
  
  &gt; 追加内容到文件末尾，而不会清除原有的内容
</blockquote>

主要将本来显示在屏幕上的内容输出到指定文件中

指定文件如果不存在，则自动生成该文件

type c:test.txt &gt;prn

屏幕上不显示文件内容，转向输出到打印机

echo hello world&gt;con

在屏幕上显示hello world，实际上所有输出都是默认 &gt;con 的

copy c:test.txt f: &gt;nul

拷贝文件，并且不显示"文件复制成功"的提示信息，但如果f盘不存在，还是会显示出错信息

copy c:test.txt f: &gt;nul 2&gt;nul

不显示”文件复制成功”的提示信息，并且f盘不存在的话，也不显示错误提示信息

echo ^^W ^&gt; ^W&gt;c:test.txt

生成的文件内容为 ^W &gt; W

^ 和 &gt; 是控制命令，要把它们输出到文件，必须在前面加个 ^ 符号

&nbsp;

27 &lt;

从文件中获得输入信息，而不是从屏幕上

一般用于 date time label 等需要等待输入的命令

@echo off

echo 2005-05-01&gt;temp.txt

date &lt;temp.txt

del temp.txt

这样就可以不等待输入直接修改当前日期

&nbsp;

28 %0 %1 %2 %3 %4 %5 %6 %7 %8 %9 %*

命令行传递给批处理的参数

%0 批处理文件本身

%1 第一个参数

%9 第九个参数

%* 从第一个参数开始的所有参数

&nbsp;

批参数(%n)的替代已被增强。您可以使用以下语法:

&nbsp;

%~1          - 删除引号(")，扩充 %1

%~f1         - 将 %1 扩充到一个完全合格的路径名

%~d1         - 仅将 %1 扩充到一个驱动器号

%~p1         - 仅将 %1 扩充到一个路径

%~n1         - 仅将 %1 扩充到一个文件名

%~x1         - 仅将 %1 扩充到一个文件扩展名

%~s1         - 扩充的路径指含有短名

%~a1         - 将 %1 扩充到文件属性

%~t1         - 将 %1 扩充到文件的日期/时间

%~z1         - 将 %1 扩充到文件的大小

%~$PATH : 1 - 查找列在 PATH 环境变量的目录，并将 %1

扩充到找到的第一个完全合格的名称。如果环境

变量名未被定义，或者没有找到文件，此组合键会

扩充到空字符串

&nbsp;

可以组合修定符来取得多重结果:

&nbsp;

%~dp1        - 只将 %1 扩展到驱动器号和路径

%~nx1        - 只将 %1 扩展到文件名和扩展名

%~dp$PATH:1 - 在列在 PATH 环境变量中的目录里查找 %1，

并扩展到找到的第一个文件的驱动器号和路径。

%~ftza1      - 将 %1 扩展到类似 DIR 的输出行。

可以参照 call/? 或 for/? 看出每个参数的含意

echo load "%%1" "%%2"&gt;c:test.txt

生成的文件内容为 load "%1" "%2"

批处理文件里，用这个格式把命令行参数输出到文件

&nbsp;

29 if

判断命令

if "%1"=="/a" echo 第一个参数是/a

if /i "%1" equ "/a" echo 第一个参数是/a

/i 表示不区分大小写，equ 和 == 是一样的，其它运算符参见 if/?

if exist c:test.bat echo 存在c:test.bat文件

if not exist c:windows (

echo 不存在c:windows文件夹

)

if exist c:test.bat (

echo 存在c:test.bat

) else (

echo 不存在c:test.bat

)

&nbsp;

30 setlocal 和 endlocal

设置”命令扩展名”和”延缓环境变量扩充”

SETLOCAL ENABLEEXTENSIONS             #启用"命令扩展名"

SETLOCAL DISABLEEXTENSIONS            #停用"命令扩展名"

SETLOCAL ENABLEDELAYEDEXPANSION       #启用"延缓环境变量扩充"

SETLOCAL DISABLEDELAYEDEXPANSION      #停用"延缓环境变量扩充"

ENDLOCAL                              #恢复到使用SETLOCAL语句以前的状态

“命令扩展名”默认为启用

“延缓环境变量扩充”默认为停用

批处理结束系统会自动恢复默认值

可以修改注册表以禁用"命令扩展名"，详见 cmd /? 。所以用到"命令扩展名"的程

序，建议在开头和结尾加上 SETLOCAL ENABLEEXTENSIONS 和 ENDLOCAL 语句，以确

保程序能在其它系统上正确运行

"延缓环境变量扩充"主要用于 if 和 for 的符合语句，在 set 的说明里有其实用例程

&nbsp;

31 set

设置变量

引用变量可在变量名前后加 % ，即 %变量名%

set                     #显示目前所有可用的变量，包括系统变量和自定义的变量

echo %SystemDrive%      #显示系统盘盘符。系统变量可以直接引用

set p                   #显示所有以p开头的变量，要是一个也没有就设errorlevel=1

set p=aa1bb1aa2bb2      #设置变量p，并赋值为 = 后面的字符串，即aa1bb1aa2bb2

echo %p%                #显示变量p代表的字符串，即aa1bb1aa2bb2

echo %p:~6%             #显示变量p中第6个字符以后的所有字符，即aa2bb2

echo %p:~6,3%           #显示第6个字符以后的3个字符，即aa2

echo %p:~0,3%           #显示前3个字符，即aa1

echo %p:~-2%            #显示最后面的2个字符，即b2

echo %p:~0,-2%          #显示除了最后2个字符以外的其它字符，即aa1bb1aa2b

echo %p:aa=c%           #用c替换变量p中所有的aa，即显示c1bb1c2bb2

echo %p:aa=%            #将变量p中的所有aa字符串置换为空，即显示1bb12bb2

echo %p:*bb=c%          #第一个bb及其之前的所有字符被替换为c，即显示c1aa2bb2

set p=%p:<em>bb=c%         #设置变量p，赋值为 %p:</em>bb=c% ，即c1aa2bb2

set /a p=39             #设置p为数值型变量，值为39

set /a p=39/10          #支持运算符，有小数时用去尾法，39/10=3.9，去尾得3，p=3

set /a p=p/10           #用 /a 参数时，在 = 后面的变量可以不加%直接引用

set /a p=”1&amp;0″          #”与”运算，要加引号。其它支持的运算符参见set/?

set p=                  #取消p变量

set /p p=请输入

屏幕上显示”请输入”，并会将输入的字符串赋值给变量p

注意这条可以用来取代 choice 命令

注意变量在 if 和 for 的复合语句里是一次性全部替换的，如

@echo off

set p=aaa

if %p%==aaa (

echo %p%

set p=bbb

echo %p%

)

结果将显示

aaa

aaa

因为在读取 if 语句时已经将所有 %p% 替换为aaa

这里的"替换"，在 /? 帮助里就是指"扩充"、"环境变量扩充"

可以启用”延缓环境变量扩充”，用 ! 来引用变量，即 !变量名!

@echo off

SETLOCAL ENABLEDELAYEDEXPANSION

set p=aaa

if %p%==aaa (

echo %p%

set p=bbb

echo !p!

)

ENDLOCAL

结果将显示

aaa

bbb

还有几个动态变量，运行 set 看不到

%CD%                   #代表当前目录的字符串

%DATE%                 #当前日期

%TIME%                 #当前时间

%RANDOM%               #随机整数，介于0~32767

%ERRORLEVEL%           #当前 ERRORLEVEL 值

%CMDEXTVERSION%        #当前命令处理器扩展名版本号

%CMDCMDLINE%           #调用命令处理器的原始命令行

可以用echo命令查看每个变量值，如 echo %time%

注意 %time% 精确到毫秒，在批处理需要延时处理时可以用到

&nbsp;

32 start

批处理中调用外部程序的命令，否则等外部程序完成后才继续执行剩下的指令

&nbsp;

33 call

批处理中调用另外一个批处理的命令，否则剩下的批处理指令将不会被执行

有时有的应用程序用start调用出错的，也可以call调用

&nbsp;

34 choice (外部命令)

选择命令

让用户输入一个字符，从而选择运行不同的命令，返回码errorlevel为1234……

win98里是choice.com

win2000pro里没有，可以从win98里拷过来

win2003里是choice.exe

choice /N /C y /T 5 /D y&gt;nul

延时5秒

&nbsp;

35 assoc 和 ftype

文件关联

assoc 设置'文件扩展名'关联，关联到'文件类型'

ftype 设置'文件类型'关联，关联到'执行程序和参数'

当你双击一个.txt文件时，windows并不是根据.txt直接判断用 notepad.exe 打开

而是先判断.txt属于 txtfile '文件类型'

再调用 txtfile 关联的命令行 txtfile=%SystemRoot%system32NOTEPAD.EXE %1

可以在"文件夹选项"→"文件类型"里修改这2种关联

assoc            #显示所有'文件扩展名'关联

assoc .txt       #显示.txt代表的'文件类型'，结果显示 .txt=txtfile

assoc .doc       #显示.doc代表的'文件类型'，结果显示 .doc=Word.Document.8

assoc .exe       #显示.exe代表的'文件类型'，结果显示 .exe=exefile

ftype            #显示所有'文件类型'关联

ftype exefile    #显示exefile类型关联的命令行，结果显示 exefile="%1" %*

assoc .txt=Word.Document.8

设置.txt为word类型的文档，可以看到.txt文件的图标都变了

assoc .txt=txtfile

恢复.txt的正确关联

ftype exefile="%1" %*

恢复 exefile 的正确关联

如果该关联已经被破坏，可以运行 command.com ，再输入这条命令

&nbsp;

36 pushd 和 popd

切换当前目录

@echo off

c: &amp; cd &amp; md mp3        #在 C: 建立 mp3 文件夹

md d:mp4                #在 D: 建立 mp4 文件夹

cd /d d:mp4             #更改当前目录为 d:mp4

pushd c:mp3             #保存当前目录，并切换当前目录为 c:mp3

popd                     #恢复当前目录为刚才保存的 d:mp4

&nbsp;

37 for

循环命令

这个比较复杂，请对照 for/? 来看

for %%i in (c: d: e: f:) do echo %%i

依次调用小括号里的每个字符串，执行 do 后面的命令

注意%%i，在批处理中 for 语句调用参数用2个%

默认的字符串分隔符是"空格键"，"Tab键"，"回车键"

for %%i in (*.txt) do find "abc" %%i

对当前目录里所有的txt文件执行 find 命令

for /r . %%i in (*.txt) do find "abc" %%i

在当前目录和子目录里所有的.txt文件中搜索包含 abc 字符串的行

for /r . %%i in (.) do echo %%~pni

显示当前目录名和所有子目录名，包括路径，不包括盘符

for /r d:mp3 %%i in (*.mp3) do echo %%i&gt;&gt;d:mp3.txt

把 d:mp3 及其子目录里的mp3文件的文件名都存到 d:mp3.txt 里去

for /l %%i in (2,1,8) do echo %%i

生成2345678的一串数字，2是数字序列的开头，8是结尾，1表示每次加1

for /f %%i in ('set') do echo %%i

对 set 命令的输出结果循环调用，每行一个

for /f "eol=P" %%i in ('set') do echo %%i

取 set 命令的输出结果，忽略以 P 开头的那几行

for /f %%i in (d:mp3.txt) do echo %%i

显示 d:mp3.txt 里的每个文件名，每行一个，不支持带空格的名称

for /f "delims=" %%i in (d:mp3.txt) do echo %%i

显示 d:mp3.txt 里的每个文件名，每行一个，支持带空格的名称

for /f "skip=5 tokens=4" %%a in ('dir') do echo %%a

对 dir 命令的结果，跳过前面5行，余下的每行取第4列

每列之间的分隔符为默认的"空格"

可以注意到 dir 命令输出的前5行是没有文件名的

for /f "tokens=1,2,3 delims=- " %%a in ('date /t') do (

echo %%a

echo %%b

echo %%c

)

对 date /t 的输出结果，每行取1、2、3列

第一列对应指定的 %%a ，后面的 %%b 和 %%c 是派生出来的，对应其它列

分隔符指定为 - 和"空格"，注意 delims=- 后面有个"空格"

其中 tokens=1,2,3 若用 tokens=1-3 替换，效果是一样的

for /f "tokens=2* delims=- " %%a in ('date /t') do echo %%b

取第2列给 %%a ，其后的列都给 %%b

&nbsp;

38 subst (外部命令)

映射磁盘。

subst z: serverd      #这样输入z:就可以访问serverd了

subst z: /d              #取消该映射

subst                    #显示目前所有的映时

&nbsp;

39 xcopy (外部命令)

文件拷贝

xcopy d:mp3 e:mp3 /s/e/i/y

复制 d:mp3 文件夹、所有子文件夹和文件到 e: ，覆盖已有文件

加 /i 表示如果 e: 没有 mp3 文件夹就自动新建一个，否则会有询问]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>142</wp:post_id>
		<wp:post_date><![CDATA[2017-11-27 23:44:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-11-27 15:44:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[windows%e6%89%b9%e5%a4%84%e7%90%86%e5%b8%b8%e7%94%a8%e5%91%bd%e4%bb%a4]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="repost"><![CDATA[转载]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[weibo_sync]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>数据结构与算法（C++）代码练习（排序）</title>
		<link>http://diaryfun.info/2018/03/%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84%e4%b8%8e%e7%ae%97%e6%b3%95%ef%bc%88c%ef%bc%89%e4%bb%a3%e7%a0%81%e7%bb%83%e4%b9%a0%ef%bc%88%e6%8e%92%e5%ba%8f%ef%bc%89/</link>
		<pubDate>Sat, 10 Mar 2018 13:40:13 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://diaryfun.info/?p=151</guid>
		<description></description>
		<content:encoded><![CDATA[<em>所有代码均由Microsoft <span class="st">Visual Studio 2015编译通过</span></em>

&nbsp;

&nbsp;

&nbsp;

<h4>插入排序（Insertion_Sort）</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="插入排序（Insertion_Sort）">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
#define N 10
using namespace std;
void Insertion_Sort(int a[], int n)
{
    int temp;
    for (int i = 1; i &lt; n; i++) {
        int j = i - 1;
        temp = a[i];
        while (j &gt;= 0 &amp;&amp; a[j] &gt; temp) {
            a[j + 1] = a[j];
            j--;
        }
        a[j + 1] = temp;
    }
}
void main()
{
    int a[N];
    cout &lt;&lt; "请输入要排序的" &lt;&lt; N &lt;&lt; "个整数：\n";
    for (int i = 0; i &lt; N; i++) {
        cin &gt;&gt; a[i];
    }
    Insertion_Sort(a, N);
    cout &lt;&lt; "排序后：";
    for (int i = 0; i &lt; N; i++) {
        cout &lt;&lt; a[i] &lt;&lt; "    ";
    }
    system("pause");
}
</pre>

&nbsp;

&nbsp;

<h4>希尔排序（Shell_Sort）</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="希尔排序（Shell_Sort）">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
#define N 10
using namespace std;
void Shell_Sort(int a[], int n)
{
    int temp;
    for (int gap = n / 2; gap &gt; 0; gap /= 2) {
        for (int i = gap; i &lt; n; i += gap) {
            int j = i - gap;
            temp = a[i];
            while (j &gt;= 0 &amp;&amp; a[j] &gt; temp) {
                a[j + gap] = a[j];
                j -= gap;
            }
            a[j + gap] = temp;
        }
    }
}
void main()
{
    int a[N];
    cout &lt;&lt; "请输入要排序的" &lt;&lt; N &lt;&lt; "个整数：\n";
    for (int i = 0; i &lt; N; i++) {
        cin &gt;&gt; a[i];
    }
    Shell_Sort(a, N);
    cout &lt;&lt; "排序后：";
    for (int i = 0; i &lt; N; i++) {
        cout &lt;&lt; a[i] &lt;&lt; "    ";
    }
    system("pause");
}
</pre>

&nbsp;

&nbsp;

<h4>冒泡排序（Bubble_Sort）</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="冒泡排序（Bubble_Sort）">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
#define N 10
using namespace std;
void Bubble_Sort(int a[], int n)
{
    int temp, flag = 1;
    for (int j = n - 1; j &gt; 0 &amp;&amp; flag; j--) {
        flag = 0;
        for (int i = 0; i &lt; j; i++) {
            if (a[i] &gt; a[i + 1]) {
                temp = a[i];
                a[i] = a[i + 1];
                a[i + 1] = temp;
                flag = 1;
            }
        }
    }
}
void main()
{
    int a[N];
    cout &lt;&lt; "请输入要排序的" &lt;&lt; N &lt;&lt; "个整数：";
    for (int i = 0; i &lt; N; i++) {
        cin &gt;&gt; a[i];
    }
    Bubble_Sort(a, N);
    cout &lt;&lt; "排序后：";
    for (int i = 0; i &lt; N; i++) {
        cout &lt;&lt; a[i] &lt;&lt; "    ";
    }
    system("pause");
}
</pre>

&nbsp;

&nbsp;

<h4>快速排序（Quick_Sort）</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="快速排序（Quick_Sort）">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
#define N 10
using namespace std;
void Insertion_Sort(int a[], int n)
{
    int temp;
    for (int i = 1; i &lt; n; i++) {
        int j = i - 1;
        temp = a[i];
        while (j &gt;= 0 &amp;&amp; a[j] &gt; temp) {
            a[j + 1] = a[j];
            j--;
        }
        a[j + 1] = temp;
    }
}
void swap(int &amp;a, int &amp;b)
{
    int temp = a;
    a = b;
    b = temp;
}
int median(int a[], int l, int r)
{
    int c = (l + r) / 2;
    if (a[l] &gt; a[c]) {
        swap(a[l], a[c]);
    }
    if (a[c] &gt; a[r]) {
        swap(a[c], a[r]);
    }
    if (a[l] &gt; a[c]) {
        swap(a[l], a[c]);
    }
    swap(a[c], a[r - 1]);
    return a[r - 1];
}
void quickSort(int a[], int left, int right)
{
    if (right - left + 1 &gt; 3) {
        int pivot = median(a, left, right);
        int i, j;
        i = left;
        j = right - 1;
        while (1) {
            while (a[++i] &lt; pivot) {}
            while (a[--j] &gt; pivot) {}
            if (i &lt; j) {
                swap(a[i], a[j]);
            }
            else {
                break;
            }
        }
        swap(a[i], a[right - 1]);
        quickSort(a, left, i - 1);
        quickSort(a, i + 1, right);
    }
    else {
        Insertion_Sort(a + left, right - left + 1);
    }
}
void Quick_Sort(int a[], int n)
{
    quickSort(a, 0, n - 1);
}
void main()
{
    int a[N];
    cout &lt;&lt; "请输入要排序的" &lt;&lt; N &lt;&lt; "个整数：\n";
    for (int i = 0; i &lt; N; i++) {
        cin &gt;&gt; a[i];
    }
    Quick_Sort(a, N);
    cout &lt;&lt; "排序后：";
    for (int i = 0; i &lt; N; i++) {
        cout &lt;&lt; a[i] &lt;&lt; "    ";
    }
    system("pause");
}
</pre>

&nbsp;

&nbsp;

<h4>选择排序（Select_Sort）</h4>

&nbsp;

<pre class="lang:c++ decode:true" title=" 选择排序（Select_Sort）">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
#define N 10
using namespace std;
void Select_Sort(int a[], int n)
{
    int min, temp;
    for (int i = 0; i &lt; n - 1; i++) {
        min = i;
        for (int j = i + 1; j &lt; n; j++) {
            if (a[j] &lt; a[min]) {
                min = j;
            }
        }
        temp = a[i];
        a[i] = a[min];
        a[min] = temp;
    }
}
void main()
{
    int a[N];
    cout &lt;&lt; "请输入要排序的" &lt;&lt; N &lt;&lt; "个整数：";
    for (int i = 0; i &lt; N; i++) {
        cin &gt;&gt; a[i];
    }
    Select_Sort(a, N);
    cout &lt;&lt; "排序后：";
    for (int i = 0; i &lt; N; i++) {
        cout &lt;&lt; a[i] &lt;&lt; "    ";
    }
    system("pause");
}
</pre>

&nbsp;

&nbsp;

<h4>堆排序（Heap_Sort）</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="堆排序（Heap_Sort）">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
#define N 10
using namespace std;
class Heap
{
public:
    int size;
    int* a;
    Heap() {
        size = 0;
    }
};
void incertMaxHeap(int a, Heap&amp; maxHeap)
{
    int hole = maxHeap.size++;
    while (hole != 0 &amp;&amp; a &gt; maxHeap.a[(hole - 1) / 2]) {
        maxHeap.a[hole] = maxHeap.a[(hole - 1) / 2];
        hole = (hole - 1) / 2;
    }
    maxHeap.a[hole] = a;
}
void moveMaxRear(Heap&amp; maxHeap)
{
    int max = maxHeap.a[0];
    int hole = 0;
    while (hole &lt;= maxHeap.size / 2 - 1 &amp;&amp; (maxHeap.a[maxHeap.size - 1] &lt; maxHeap.a[hole * 2 + 1] || maxHeap.a[maxHeap.size - 1] &lt; maxHeap.a[hole * 2 + 2])) {
        if (maxHeap.a[hole * 2 + 2] &gt; maxHeap.a[hole * 2 + 1]) {
            maxHeap.a[hole] = maxHeap.a[hole * 2 + 2];
            hole = hole * 2 + 2;
        }
        else {
            maxHeap.a[hole] = maxHeap.a[hole * 2 + 1];
            hole = hole * 2 + 1;
        }
    }
    if (maxHeap.size % 2 == 0 &amp;&amp; hole == maxHeap.size) {
        maxHeap.a[maxHeap.size] = maxHeap.a[(hole - 1) / 2];
        hole = (hole - 1) / 2;
    }
    maxHeap.a[hole] = maxHeap.a[maxHeap.size - 1];
    maxHeap.size--;
    maxHeap.a[maxHeap.size] = max;
}
void Heap_Sort(int a[], int n)
{
    Heap maxHeap;
    maxHeap.a = a;
    for (int i = 0; i &lt; n; i++) {
        incertMaxHeap(a[i], maxHeap);
    }
    for (int i = 0; i &lt; n; i++) {
        moveMaxRear(maxHeap);
    }
}
void main()
{
    int a[N];
    cout &lt;&lt; "请输入要排序的" &lt;&lt; N &lt;&lt; "个整数：\n";
    for (int i = 0; i &lt; N; i++) {
        cin &gt;&gt; a[i];
    }
    Heap_Sort(a, N);
    cout &lt;&lt; "排序后：";
    for (int i = 0; i &lt; N; i++) {
        cout &lt;&lt; a[i] &lt;&lt; "    ";
    }
    system("pause");
}
</pre>

&nbsp;

&nbsp;

<h4>归并排序（Merge_Sort）</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="归并排序（Merge_Sort）">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
#define N 10
using namespace std;
void merge(int obj[], int src[], int left, int right, int rEnd)
{
    int lEnd = right - 1;
    int i = left;
    while (left &lt;= lEnd&amp;&amp;right &lt;= rEnd) {
        if (src[left] &lt;= src[right]) {
            obj[i++] = src[left++];
        }
        else {
            obj[i++] = src[right++];
        }
    }
    while (left &lt;= lEnd) {
        obj[i++] = src[left++];
    }
    while (right &lt;= rEnd) {
        obj[i++] = src[right++];
    }
}
void mergeSort(int obj[],int src[],int left,int right)
{
    if (left &gt;= right) {
        return;
    }
    int center = (left + right) / 2;
    mergeSort(src, obj, left, center);
    mergeSort(src, obj, center + 1, right);
    merge(obj, src, left, center + 1, right);
}
void Merge_Sort(int a[], int n)
{
    int* temp = new int[n];
    for (int i = 0; i &lt; n; i++) {
        temp[i] = a[i];
    }
    mergeSort(a, temp, 0, n - 1);
}
void main()
{
    int a[N];
    cout &lt;&lt; "请输入要排序的" &lt;&lt; N &lt;&lt; "个整数：\n";
    for (int i = 0; i &lt; N; i++) {
        cin &gt;&gt; a[i];
    }
    Merge_Sort(a, N);
    cout &lt;&lt; "排序后：";
    for (int i = 0; i &lt; N; i++) {
        cout &lt;&lt; a[i] &lt;&lt; "    ";
    }
    system("pause");
}
</pre>

&nbsp;

&nbsp;

<h4>桶排序（Bucket_Sort）</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="桶排序（Bucket_Sort）">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
#define N 10
#define SIZE 100
using namespace std;
class listNode
{
public:
    int data;
    listNode* next;
    listNode() {
        next = NULL;
    }
};
void addNode(listNode&amp; node, int n)
{
    listNode* p = new listNode;
    p-&gt;data = n;
    p-&gt;next = node.next;
    node.next = p;
}
void readNode(listNode bucket[], int a[])
{
    int j = 0;
    for (int i = 0; i &lt; SIZE; i++) {
        listNode* p = bucket[i].next;
        while (p) {
            a[j++] = p-&gt;data;
            p = p-&gt;next;
        }
    }
}
void Bucket_Sort(int a[], int n)
{
    listNode bucket[SIZE];
    for (int i = 0; i &lt; n; i++) {
        addNode(bucket[a[i]], a[i]);
    }
    readNode(bucket, a);
}
void main()
{
    int a[N];
    cout &lt;&lt; "请输入要排序的" &lt;&lt; N &lt;&lt; "个整数(0-99之间)：\n";
    for (int i = 0; i &lt; N; i++) {
        cin &gt;&gt; a[i];
    }
    Bucket_Sort(a, N);
    cout &lt;&lt; "排序后：";
    for (int i = 0; i &lt; N; i++) {
        cout &lt;&lt; a[i] &lt;&lt; "    ";
    }
    system("pause");
}
</pre>

&nbsp;

&nbsp;

&nbsp;

2016年3月]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>151</wp:post_id>
		<wp:post_date><![CDATA[2018-03-10 21:40:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-03-10 13:40:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84%e4%b8%8e%e7%ae%97%e6%b3%95%ef%bc%88c%ef%bc%89%e4%bb%a3%e7%a0%81%e7%bb%83%e4%b9%a0%ef%bc%88%e6%8e%92%e5%ba%8f%ef%bc%89]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="algorithm"><![CDATA[算法]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[weibo_sync]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>数据结构与算法（C++）代码练习（树）</title>
		<link>http://diaryfun.info/2018/03/%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84%e4%b8%8e%e7%ae%97%e6%b3%95%ef%bc%88c%ef%bc%89%e4%bb%a3%e7%a0%81%e7%bb%83%e4%b9%a0%ef%bc%88%e6%a0%91%ef%bc%89/</link>
		<pubDate>Sat, 10 Mar 2018 14:23:45 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://diaryfun.info/?p=153</guid>
		<description></description>
		<content:encoded><![CDATA[<em>所有代码均由Microsoft <span class="st">Visual Studio 2015编译通过</span></em>

&nbsp;

&nbsp;

&nbsp;

<h4>递归法实现二叉树的三种遍历</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="递归法实现二叉树的三种遍历">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
using namespace std;
class treeNode
{
public:
    int data;
    treeNode* left;
    treeNode* right;
};
int max(int a, int b)
{
    return (a &gt; b ? a : b);
}
int height(treeNode* root)
{
    if (!root) {
        return -1;
    }
    else {
        return max(height(root-&gt;left), height(root-&gt;right)) + 1;
    }
}
void singleRotateLeft(treeNode*&amp; root)
{
    treeNode* temp = root;
    root = root-&gt;left;
    temp-&gt;left = root-&gt;right;
    root-&gt;right = temp;
}
void singleRotateRight(treeNode*&amp; root)
{
    treeNode* temp = root;
    root = root-&gt;right;
    temp-&gt;right = root-&gt;left;
    root-&gt;left = temp;
}
void doubleRotateLeft(treeNode*&amp; root)
{
    singleRotateRight(root-&gt;left);
    singleRotateLeft(root);
}
void doubleRotateRight(treeNode*&amp; root)
{
    singleRotateLeft(root-&gt;right);
    singleRotateRight(root);
}
treeNode* findMin(treeNode* root)
{
    if (!root) {
        return NULL;
    }
    while (root-&gt;left) {
        root = root-&gt;left;
    }
    return root;
}
treeNode* findMax(treeNode* root)
{
    if (!root) {
        return NULL;
    }
    while (root-&gt;right) {
        root = root-&gt;right;
    }
    return root;
}
int incertNode(int a, treeNode*&amp; root)
{
    int res;
    if (!root) {
        root = new treeNode;
        root-&gt;data = a;
        root-&gt;left = root-&gt;right = NULL;
        return 1;
    }
    if (a &lt; root-&gt;data) {
        res = incertNode(a, root-&gt;left);
        if (height(root-&gt;left) - height(root-&gt;right) &gt;= 2) {
            if (a &lt; root-&gt;left-&gt;data) {
                singleRotateLeft(root);
            }
            else {
                doubleRotateLeft(root);
            }
        }
        return res;
    }
    else if (a &gt; root-&gt;data) {
        res = incertNode(a, root-&gt;right);
        if (height(root-&gt;right) - height(root-&gt;left) &gt;= 2) {
            if (a &gt; root-&gt;right-&gt;data) {
                singleRotateRight(root);
            }
            else {
                doubleRotateRight(root);
            }
        }
        return res;
    }
    else {
        return 0;
    }
}
void preorderTraverse(treeNode* root)
{
    if (root) {
        cout &lt;&lt; root-&gt;data;
        preorderTraverse(root-&gt;left);
        preorderTraverse(root-&gt;right);
    }
}
void inorderTraverse(treeNode* root)
{
    if (root) {
        inorderTraverse(root-&gt;left);
        cout &lt;&lt; root-&gt;data;
        inorderTraverse(root-&gt;right);
    }
}
void postorderTraverse(treeNode* root)
{
    if (root) {
        postorderTraverse(root-&gt;left);
        postorderTraverse(root-&gt;right);
        cout &lt;&lt; root-&gt;data;
    }
}
void main()
{
    int n, a, res;
    treeNode* root = NULL;
    cout &lt;&lt; "请输入二叉树结点总数：\n";
    cin &gt;&gt; n;
    cout &lt;&lt; "请依次输入结点数字：\n";
    for (int i = 0; i &lt; n; i++) {
        cin &gt;&gt; a;
        res = incertNode(a, root);
        cout &lt;&lt; (res ? "插入成功\n" : "数据重复\n");
    }
    cout &lt;&lt; "二叉树构建完毕，高度为：" &lt;&lt; height(root) &lt;&lt; '\n';
    cout &lt;&lt; "\n前序遍历：\n";
    preorderTraverse(root);
    cout &lt;&lt; "\n中序遍历：\n";
    inorderTraverse(root);
    cout &lt;&lt; "\n后序遍历：\n";
    postorderTraverse(root);
    system("pause");
}
</pre>

&nbsp;

&nbsp;

<h4>非递归法实现二叉树的中序遍历</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="非递归法实现二叉树的中序遍历">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
using namespace std;
class treeNode
{
public:
    int data;
    treeNode* left;
    treeNode* right;
};
class Node
{
public:
    treeNode* p;
    Node* next;
};
void push(Node* &amp;top, treeNode* p)
{
    Node* temp = new Node;
    temp-&gt;next = top;
    top = temp;
    top-&gt;p = p;
}
treeNode* pop(Node* &amp;top)
{
    Node* temp = top;
    top = top-&gt;next;
    temp-&gt;next = NULL;
    return temp-&gt;p;
}
int max(int a, int b)
{
    return (a &gt; b ? a : b);
}
int height(treeNode* root)
{
    if (!root) {
        return -1;
    }
    else {
        return max(height(root-&gt;left), height(root-&gt;right)) + 1;
    }
}
void singleRotateLeft(treeNode*&amp; root)
{
    treeNode* temp = root;
    root = root-&gt;left;
    temp-&gt;left = root-&gt;right;
    root-&gt;right = temp;
}
void singleRotateRight(treeNode*&amp; root)
{
    treeNode* temp = root;
    root = root-&gt;right;
    temp-&gt;right = root-&gt;left;
    root-&gt;left = temp;
}
void doubleRotateLeft(treeNode*&amp; root)
{
    singleRotateRight(root-&gt;left);
    singleRotateLeft(root);
}
void doubleRotateRight(treeNode*&amp; root)
{
    singleRotateLeft(root-&gt;right);
    singleRotateRight(root);
}
treeNode* findMin(treeNode* root)
{
    if (!root) {
        return NULL;
    }
    while (root-&gt;left) {
        root = root-&gt;left;
    }
    return root;
}
treeNode* findMax(treeNode* root)
{
    if (!root) {
        return NULL;
    }
    while (root-&gt;right) {
        root = root-&gt;right;
    }
    return root;
}
int incertNode(int a, treeNode*&amp; root)
{
    int res;
    if (!root) {
        root = new treeNode;
        root-&gt;data = a;
        root-&gt;left = root-&gt;right = NULL;
        return 1;
    }
    if (a &lt; root-&gt;data) {
        res = incertNode(a, root-&gt;left);
        if (height(root-&gt;left) - height(root-&gt;right) &gt;= 2) {
            if (a &lt; root-&gt;left-&gt;data) {
                singleRotateLeft(root);
            }
            else {
                doubleRotateLeft(root);
            }
        }
        return res;
    }
    else if (a &gt; root-&gt;data) {
        res = incertNode(a, root-&gt;right);
        if (height(root-&gt;right) - height(root-&gt;left) &gt;= 2) {
            if (a &gt; root-&gt;right-&gt;data) {
                singleRotateRight(root);
            }
            else {
                doubleRotateRight(root);
            }
        }
        return res;
    }
    else {
        return 0;
    }
}
void inorderTraverse(treeNode* root)
{
    Node* stack = new Node;
    stack-&gt;next = NULL;
    while (root||stack-&gt;next) {
        while (root) {
            push(stack, root);
            root = root-&gt;left;
        }
        root = pop(stack);
        cout &lt;&lt; root-&gt;data;
        root = root-&gt;right;
    }
}
void main()
{
    int n, a, res;
    treeNode* root = NULL;
    cout &lt;&lt; "请输入二叉树结点总数：\n";
    cin &gt;&gt; n;
    cout &lt;&lt; "请依次输入结点数字：\n";
    for (int i = 0; i &lt; n; i++) {
        cin &gt;&gt; a;
        res = incertNode(a, root);
        cout &lt;&lt; (res ? "插入成功\n" : "数据重复\n");
    }
    cout &lt;&lt; "二叉树构建完毕，高度为：" &lt;&lt; height(root) &lt;&lt; '\n';
    cout &lt;&lt; "\n中序遍历：\n";
    inorderTraverse(root);
    system("pause");
}
</pre>

&nbsp;

&nbsp;

<h4>平衡二叉树的插入、删除、查找</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="平衡二叉树的插入、删除、查找">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
using namespace std;
class treeNode
{
public:
    int data;
    treeNode* left;
    treeNode* right;
};
int max(int a, int b)
{
    return (a &gt; b ? a : b);
}
int height(treeNode* root)
{
    if (!root) {
        return -1;
    }
    else {
        return max(height(root-&gt;left), height(root-&gt;right)) + 1;
    }
}
void singleRotateLeft(treeNode*&amp; root)
{
    treeNode* temp = root;
    root = root-&gt;left;
    temp-&gt;left = root-&gt;right;
    root-&gt;right = temp;
}
void singleRotateRight(treeNode*&amp; root)
{
    treeNode* temp = root;
    root = root-&gt;right;
    temp-&gt;right = root-&gt;left;
    root-&gt;left = temp;
}
void doubleRotateLeft(treeNode*&amp; root)
{
    singleRotateRight(root-&gt;left);
    singleRotateLeft(root);
}
void doubleRotateRight(treeNode*&amp; root)
{
    singleRotateLeft(root-&gt;right);
    singleRotateRight(root);
}
treeNode* find(int a, treeNode* root)
{
    if (!root) {
        return NULL;
    }
    if (a &lt; root-&gt;data) {
        return find(a, root-&gt;left);
    }
    else if (a &gt; root-&gt;data) {
        return find(a, root-&gt;right);
    }
    else {
        return root;
    }
}
treeNode* findMin(treeNode* root)
{
    if (!root) {
        return NULL;
    }
    while (root-&gt;left) {
        root = root-&gt;left;
    }
    return root;
}
treeNode* findMax(treeNode* root)
{
    if (!root) {
        return NULL;
    }
    while (root-&gt;right) {
        root = root-&gt;right;
    }
    return root;
}
int incertNode(int a, treeNode*&amp; root)
{
    int res;
    if (!root) {
        root = new treeNode;
        root-&gt;data = a;
        root-&gt;left = root-&gt;right = NULL;
        return 1;
    }
    if (a &lt; root-&gt;data) {
        res = incertNode(a, root-&gt;left);
        if (height(root-&gt;left) - height(root-&gt;right) &gt;= 2) {
            if (a &lt; root-&gt;left-&gt;data) {
                singleRotateLeft(root);
            }
            else {
                doubleRotateLeft(root);
            }
        }
        return res;
    }
    else if (a &gt; root-&gt;data) {
        res = incertNode(a, root-&gt;right);
        if (height(root-&gt;right) - height(root-&gt;left) &gt;= 2) {
            if (a &gt; root-&gt;right-&gt;data) {
                singleRotateRight(root);
            }
            else {
                doubleRotateRight(root);
            }
        }
        return res;
    }
    else {
        return 0;
    }
}
int deleteNode(int a, treeNode*&amp; root)
{
    if (!root) {
        return 0;
    }
    if (a &lt; root-&gt;data) {
        return deleteNode(a, root-&gt;left);
    }
    else if (a &gt; root-&gt;data) {
        return deleteNode(a, root-&gt;right);
    }
    else if (root-&gt;left&amp;&amp;root-&gt;right) {
        treeNode* p;
        if (height(root-&gt;left) &lt; height(root-&gt;right)) {
            p = findMin(root-&gt;right);
            root-&gt;data = p-&gt;data;
            return deleteNode(p-&gt;data, root-&gt;right);
        }
        else {
            p = findMax(root-&gt;left);
            root-&gt;data = p-&gt;data;
            return deleteNode(p-&gt;data, root-&gt;left);
        }
    }
    else if (root-&gt;left || root-&gt;right) {
        treeNode* p = (root-&gt;left ? root-&gt;left : root-&gt;right);
        delete root;
        root = p;
        return 1;
    }
    else {
        delete root;
        root = NULL;
        return 1;
    }
}
void main()
{
    int n, a, res;
    treeNode* root = NULL, *resP = NULL;
    cout &lt;&lt; "请输入二叉树结点总数：\n";
    cin &gt;&gt; n;
    cout &lt;&lt; "请依次输入结点数字：\n";
    for (int i = 0; i &lt; n; i++) {
        cin &gt;&gt; a;
        res = incertNode(a, root);
        cout &lt;&lt; (res ? "插入成功\n" : "数据重复\n");
    }
    cout &lt;&lt; "二叉树构建完毕，高度为：" &lt;&lt; height(root) &lt;&lt; '\n';
    cout &lt;&lt; "请输入要删除的结点个数：\n";
    cin &gt;&gt; n;
    cout &lt;&lt; "请依次输入结点数字：\n";
    for (int i = 0; i &lt; n; i++) {
        cin &gt;&gt; a;
        res = deleteNode(a, root);
        cout &lt;&lt; (res ? "删除成功\n" : "查无此数\n");
    }
    cout &lt;&lt; "删除完毕，高度为：" &lt;&lt; height(root) &lt;&lt; '\n';
    cout &lt;&lt; "请输入要查找的结点个数：\n";
    cin &gt;&gt; n;
    cout &lt;&lt; "请依次输入结点数字：\n";
    for (int i = 0; i &lt; n; i++) {
        cin &gt;&gt; a;
        resP = find(a, root);
        cout &lt;&lt; (resP ? "已找到\n" : "未找到\n");
    }
    system("pause");
}
</pre>

&nbsp;

&nbsp;

<h4>最小堆的插入与删除</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="最小堆的插入与删除">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
#define N 100
#define MAX 100000
using namespace std;
class Heap
{
public:
    int size;
    int a[N];
};
void checkOdd(Heap&amp; minHeap)
{
    if (!(minHeap.size % 2)) {
        minHeap.a[minHeap.size + 1] = MAX;
    }
}
void incertMinHeap(int a, Heap&amp; minHeap)
{
    int hole = ++minHeap.size;
    while (hole != 1 &amp;&amp; a &lt; minHeap.a[hole / 2]) {
        minHeap.a[hole] = minHeap.a[hole / 2];
        hole = hole / 2;
    }
    minHeap.a[hole] = a;
    checkOdd(minHeap);
}
int deleteMin(Heap&amp; minHeap)
{
    int min = minHeap.a[1];
    int hole = 1;
    while (hole &lt;= minHeap.size / 2 &amp;&amp; (minHeap.a[minHeap.size] &gt; minHeap.a[hole * 2 + 1] || minHeap.a[minHeap.size] &gt; minHeap.a[hole * 2])) {
        if (minHeap.a[hole * 2 + 1] &lt; minHeap.a[hole * 2]) {
            minHeap.a[hole] = minHeap.a[hole * 2 + 1];
            hole = hole * 2 + 1;
        }
        else {
            minHeap.a[hole] = minHeap.a[hole * 2];
            hole = hole * 2;
        }
    }
    minHeap.a[hole] = minHeap.a[minHeap.size];
    minHeap.size--;
    checkOdd(minHeap);
    return min;
}
void main()
{
    int n, a;
    Heap minHeap;
    minHeap.size = 0;
    cout &lt;&lt; "请输入最小堆结点个数（100以内）：\n";
    cin &gt;&gt; n;
    cout &lt;&lt; "请依次输入结点数字：\n";
    for (int i = 0; i &lt; n; i++) {
        cin &gt;&gt; a;
        incertMinHeap(a, minHeap);
        cout &lt;&lt; "已插入第" &lt;&lt; i + 1 &lt;&lt; "个数\n";
    }
    cout &lt;&lt; "请输入要查看从小到大排列的前几个数：\n";
    cin &gt;&gt; n;
    for (int i = 0; i &lt; n; i++) {
        a = deleteMin(minHeap);
        cout &lt;&lt; "第" &lt;&lt; i + 1 &lt;&lt; "小的数为：" &lt;&lt; a &lt;&lt; "\n";
    }
    system("pause");
}
</pre>

&nbsp;

&nbsp;

&nbsp;

2016年3月]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>153</wp:post_id>
		<wp:post_date><![CDATA[2018-03-10 22:23:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-03-10 14:23:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84%e4%b8%8e%e7%ae%97%e6%b3%95%ef%bc%88c%ef%bc%89%e4%bb%a3%e7%a0%81%e7%bb%83%e4%b9%a0%ef%bc%88%e6%a0%91%ef%bc%89]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="algorithm"><![CDATA[算法]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[weibo_sync]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>数据结构与算法（C++）代码练习（查找）</title>
		<link>http://diaryfun.info/2018/03/%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84%e4%b8%8e%e7%ae%97%e6%b3%95%ef%bc%88c%ef%bc%89%e4%bb%a3%e7%a0%81%e7%bb%83%e4%b9%a0%ef%bc%88%e6%9f%a5%e6%89%be%ef%bc%89/</link>
		<pubDate>Sat, 10 Mar 2018 14:30:24 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://diaryfun.info/?p=155</guid>
		<description></description>
		<content:encoded><![CDATA[<em>所有代码均由Microsoft <span class="st">Visual Studio 2015编译通过</span></em>

&nbsp;

&nbsp;

&nbsp;

<h4>20个随机数的数组中的顺序查找</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="20个随机数的数组中的顺序查找">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
#include&lt;stdlib.h&gt;
#include&lt;time.h&gt;
#define N 20
using namespace std;
void Order_Search(int a[], int n)
{
    for (int i=0;i&lt;N;i++){
        if (a[i] == n) {
            cout &lt;&lt; "在第" &lt;&lt;i+1 &lt;&lt; "个位置上找到" &lt;&lt; n &lt;&lt; "\n";
            return;
        }
    }
    cout &lt;&lt; "未找到\n";
    return;
}
void main()
{
    int a[N],n;
    srand(unsigned(time));
    for (int i = 0; i &lt; N; i++)
    {
        a[i] = rand();
        cout &lt;&lt; a[i] &lt;&lt; '\t';
    }
    cout &lt;&lt; "\n请输入要查找的数：";
    cin &gt;&gt; n;
    cout &lt;&lt; "\n\n";
    Order_Search(a,n);
    system("pause");
}
</pre>

&nbsp;

&nbsp;

<h4>20个随机数的数组中的二分查找</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="20个随机数的数组中的二分查找">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
#include&lt;stdlib.h&gt;
#include&lt;time.h&gt;
#define N 20
using namespace std;
void Bubble_Sort(int a[])
{
    int temp, flag = 1;
    for (int j = N - 1; j &gt; 0 &amp;&amp; flag; j--) {
        flag = 0;
        for (int i = 0; i &lt; j; i++) {
            if (a[i] &gt; a[i + 1]) {
                temp = a[i];
                a[i] = a[i + 1];
                a[i + 1] = temp;
                flag = 1;
            }
        }
    }
}
void Binary_Search(int a[], int n)
{
    int left = 0, right = N, mid;
    while (left &lt;= right) {
        mid = (left + right) / 2;
        if (a[mid] &gt; n) {
            right = mid-1;
        }
        else if (a[mid] &lt; n) {
            left = mid+1;
        }
        else {
            cout &lt;&lt; "在升序第" &lt;&lt; mid + 1 &lt;&lt; "个位置上找到" &lt;&lt; n &lt;&lt; "\n";
            return;
        }
    }
    cout &lt;&lt; "未找到\n";
    return;
}
void main()
{
    int a[N], n;
    srand(unsigned(time));
    for (int i = 0; i &lt; N; i++)
    {
        a[i] = rand();
        cout &lt;&lt; a[i] &lt;&lt; '\t';
    }
    cout &lt;&lt; "\n请输入要查找的数：";
    cin &gt;&gt; n;
    cout &lt;&lt; "\n\n";
    Bubble_Sort(a);
    Binary_Search(a, n);
    system("pause");
}
</pre>

&nbsp;

&nbsp;

<h4>使用平方探测的散列表的插入、删除、查找</h4>

&nbsp;

<pre class="lang:c++ decode:true " title="使用平方探测的散列表的插入、删除、查找">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
#define N 43
#define I -100000
#define HOLD 100000
using namespace std;
int Hash(int key)
{
    return key%N;
}
int findPos(int key, int table[])
{
    int n = 0;
    int pos, ipos;
    pos = ipos = Hash(key);
    while (table[pos]!=I &amp;&amp; table[pos] != key) {
        if (++n % 2) {
            pos = ipos + (n + 1) / 2 * (n + 1) / 2;
            while (pos &gt;= N) {
                pos -= N;
            }
        }
        else {
            pos = ipos - (n / 2)*(n / 2);
            while (pos &lt; 0) {
                pos += N;
            }
        }
    }
    return pos;
}
int contain(int key, int table[])
{
    int pos=findPos(key, table);
    if (table[pos]==I) {
        return 0;
    }
    else {
        return 1;
    }
}
void insert(int key, int table[])
{
    int pos = findPos(key, table);
    table[pos] = key;
}
int remove(int key, int table[])
{
    int pos = findPos(key, table);
    if (table[pos]==I) {
        return 0;
    }
    else {
        table[pos] = HOLD;
        return 1;
    }
}
void main()
{
    int n, a, res;
    int hashTable[N];
    for (int i = 0; i &lt; N; i++)
    {
        hashTable[i] = I;
    }
    cout &lt;&lt; "请输入要插入的数据个数：\n";
    cin &gt;&gt; n;
    cout &lt;&lt; "请依次输入数据：\n";
    for (int i = 0; i &lt; n; i++) {
        cin &gt;&gt; a;
        insert(a, hashTable);
    }
    cout &lt;&lt; "请输入要删除的数据个数：\n";
    cin &gt;&gt; n;
    cout &lt;&lt; "请依次输入要删除的数据：\n";
    for (int i = 0; i &lt; n; i++) {
        cin &gt;&gt; a;
        res = remove(a, hashTable);
        cout &lt;&lt; (res ? "删除成功\n" : "查无此数\n");
    }
    cout &lt;&lt; "请输入要查找的数据个数：\n";
    cin &gt;&gt; n;
    cout &lt;&lt; "请依次输入要查找的数据：\n";
    for (int i = 0; i &lt; n; i++) {
        cin &gt;&gt; a;
        res = contain(a, hashTable);
        cout &lt;&lt; (res ? "已找到\n" : "未找到\n");
    }
    system("pause");
}
</pre>

&nbsp;

&nbsp;

&nbsp;

2016年3月]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>155</wp:post_id>
		<wp:post_date><![CDATA[2018-03-10 22:30:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-03-10 14:30:24]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84%e4%b8%8e%e7%ae%97%e6%b3%95%ef%bc%88c%ef%bc%89%e4%bb%a3%e7%a0%81%e7%bb%83%e4%b9%a0%ef%bc%88%e6%9f%a5%e6%89%be%ef%bc%89]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="algorithm"><![CDATA[算法]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[weibo_sync]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>数据结构与算法（C++）代码练习（基础）</title>
		<link>http://diaryfun.info/2018/03/%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84%e4%b8%8e%e7%ae%97%e6%b3%95%ef%bc%88c%ef%bc%89%e4%bb%a3%e7%a0%81%e7%bb%83%e4%b9%a0%ef%bc%88%e5%9f%ba%e7%a1%80%ef%bc%89/</link>
		<pubDate>Sat, 10 Mar 2018 14:52:01 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://diaryfun.info/?p=159</guid>
		<description></description>
		<content:encoded><![CDATA[<em>所有代码均由Microsoft <span class="st">Visual Studio 2015编译通过</span></em>

&nbsp;

&nbsp;

&nbsp;

<h4>递推法求sinx</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="递推法求sinx">#include&lt;iostream&gt;
#include&lt;math.h&gt;
using namespace std;
float sinx(float x);
void main()
{
    float x;
    cout &lt;&lt; "请输入x：";
    cin &gt;&gt; x;
    if (fabs(x) &gt;= 1)
    {
        cout &lt;&lt; "x大于等于1，数值非法";
    }
    else
    {
    cout &lt;&lt; "sin " &lt;&lt; x &lt;&lt; " = " &lt;&lt; sinx(x);
    }
    system("pause");
}
float sinx(float x)
{
    float term = x, result = x;
    for (int n = 1;; n++)
    {
        term = -term*x*x / ((2 * n)*(2 * n + 1));
        if (fabs(term)&lt;0.0001)
        {
            break;
        }
        result += term;
    }
    return result;
}
</pre>

&nbsp;

&nbsp;

<h4>递推法输出斐波那契数列前20项</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="递推法输出斐波那契数列前20项">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
using namespace std;
void main()
{
    long int f1,f2,f3;
    f1 = f2 = 1;
    cout &lt;&lt; setw(10) &lt;&lt; f1 &lt;&lt; setw(10) &lt;&lt; f2;
    for (int i = 3; i &lt;= 20; i++)
    {
        f3 = f1 + f2;
        cout &lt;&lt; setw(10) &lt;&lt; f3;
        f1 = f2;
        f2 = f3;
        if (i % 5 == 0)
        {
            cout &lt;&lt; "\n";
        }
    }
    system("pause");
}</pre>

&nbsp;

&nbsp;

<h4>欧几里得算法求两正整数最大公约数</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="欧几里得算法求两正整数最大公约数">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
using namespace std;
void main()
{
    int a, b,a0,b0;
    int temp;
    cout &lt;&lt; "请输入两整数的值";
    cin &gt;&gt; a &gt;&gt; b;
    a0 = a, b0 = b;
    if (a &lt;= 0 || b &lt;= 0) {
        cout &lt;&lt; "只能计算正整数！\n";
    }
    else {
        while (a%b != 0) {
            temp = a%b;
            a = b;
            b = temp;
        }
        cout &lt;&lt; a0 &lt;&lt; "与" &lt;&lt; b0 &lt;&lt; "的最大公约数为" &lt;&lt; b &lt;&lt; "\n";
    }
    system("pause");
}</pre>

&nbsp;

&nbsp;

<h4>递推法求n阶乘</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="递推法求n阶乘">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
using namespace std;
void main()
{
    int n;
    int result=1;
    cout &lt;&lt; "请输入正整数n\n";
    cin &gt;&gt; n;
    if (n &lt;= 0) {
        cout &lt;&lt; "不是正整数！";
    }
    else {
        for (; n &gt; 0; n--) {
            result *= n;
        }
        cout &lt;&lt; "n！=" &lt;&lt; result &lt;&lt; "\n";
    }
    system("pause");
}</pre>

&nbsp;

&nbsp;

<h4>递归法求n阶乘</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="递归法求n阶乘">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
using namespace std;
int x(int n)
{
    if (n != 0) {
        return n*x(n - 1);
    }
    return 1;
}
void main()
{
    int n;
    int result;
    cout &lt;&lt; "请输入正整数n\n";
    cin &gt;&gt; n;
    if (n &lt;= 0) {
        cout &lt;&lt; "不是正整数！";
    }
    else {
        result=x(n);
        cout &lt;&lt; "n！=" &lt;&lt; result &lt;&lt; "\n";
    }
    system("pause");
}
</pre>

&nbsp;

&nbsp;

<h4>递归法输出斐波那契数列前20项</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="递归法输出斐波那契数列前20项">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
using namespace std;
int fib(int n)
{
    if (n == 1 || n == 2) {
        return 1;
    }
    return fib(n - 1) + fib(n - 2);
}
void main()
{
    for (int i = 1; i &lt;= 20; i++)
    {
        cout &lt;&lt; setw(10) &lt;&lt; fib(i);
        if (i % 5 == 0) {
            cout &lt;&lt; "\n";
        }
    }
    system("pause");
}
</pre>

&nbsp;

&nbsp;

<h4>汉诺塔问题</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="汉诺塔问题">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
using namespace std;
void hanio(int n ,char a , char b , char c ,int &amp;i)
{
    if (n == 0) {
        return;
    }
    hanio(n - 1, a, c, b, i);
    cout &lt;&lt; "移动第" &lt;&lt; n &lt;&lt; "个盘 从" &lt;&lt; a &lt;&lt; "柱到" &lt;&lt; c &lt;&lt; "柱\n";
    i++;
    hanio(n - 1, b, a, c, i);
    return;
}
void main()
{
    int n, steps=0;
    cout &lt;&lt; "请输入汉诺塔总盘数：";
    cin &gt;&gt; n;
    hanio(n,'A','B','C',steps);
    cout &lt;&lt; "总步数：" &lt;&lt; steps &lt;&lt; "步\n";
    system("pause");
}
</pre>

&nbsp;

&nbsp;

<h4>筛法求3-100以内素数</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="筛法求3-100以内素数">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
using namespace std;
void main()
{
    int prime[49];
    for (int i = 0; i &lt; 49; i++) {
        prime[i] = 3 + 2 * i;
    }
    for (int i = 0; i &lt; 4; i++) {
        if (prime[i]) {
            for (int j = i + 1; j &lt; 49; j++) {
                if (prime[j] % prime[i] == 0) {
                    prime[j] = 0;
                }
            }
        }
    }
    int j = 0;
    for (int i = 0; i &lt; 49; i++) {
        if (prime[i] != 0) {
            cout &lt;&lt; prime[i] &lt;&lt; setw(10);
            j++;
        }
        if (j != 0 &amp;&amp; j % 5 == 0) {
            cout &lt;&lt; "\n";
        }
    }
    system("pause");
}
</pre>

&nbsp;

&nbsp;

<h4>输入成绩并输出成绩低于平均成绩的学生</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="输入成绩并输出成绩低于平均成绩的学生">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
#define N 100
using namespace std;
void main()
{
    float x[N], sum = 0, ave;
    int i = 0;
    cout &lt;&lt; "请输入学生成绩，以负数结束\n";
    do {
        cin &gt;&gt; x[i];
        sum += x[i];
    } while (x[i++] &gt;= 0 &amp;&amp; i &lt; N);
    if (i == N) {
        ave = sum / i;
    }
    else {
        ave = (sum - x[--i]) / i;
    }
    cout &lt;&lt; "共输入" &lt;&lt; i &lt;&lt; "个学生    平均成绩" &lt;&lt; ave &lt;&lt; "分\n\n";
    cout &lt;&lt; "其中低于平均成绩的学生有：";
    for (int j = 0; j &lt; i; j++) {
        if (x[j] &lt; ave) {
            cout &lt;&lt; "第" &lt;&lt; j+1 &lt;&lt; "个学生    " &lt;&lt; x[j] &lt;&lt; "分\n";
        }
    }
    system("pause");
}
</pre>

&nbsp;

&nbsp;

<h4>打印10层杨辉三角形</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="打印10层杨辉三角形">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
#define N 10
using namespace std;
void main()
{
    int a[N][N];
    for (int i = 0; i &lt; N; i++) {
        for (int j = 0; j &lt;= i; j++) {
            if (j == 0 || j == i) {
                a[i][j] = 1;
            }
            else {
                a[i][j] = a[i - 1][j] + a[i - 1][j - 1];
            }
            cout &lt;&lt; a[i][j] &lt;&lt; setw(10);
        }
        cout &lt;&lt; "\n";
    }
    system("pause");
}
</pre>

&nbsp;

&nbsp;

&nbsp;

2016年3月]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>159</wp:post_id>
		<wp:post_date><![CDATA[2018-03-10 22:52:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-03-10 14:52:01]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84%e4%b8%8e%e7%ae%97%e6%b3%95%ef%bc%88c%ef%bc%89%e4%bb%a3%e7%a0%81%e7%bb%83%e4%b9%a0%ef%bc%88%e5%9f%ba%e7%a1%80%ef%bc%89]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="algorithm"><![CDATA[算法]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[weibo_sync]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>数据结构与算法（C++）代码练习（PTA题目）</title>
		<link>http://diaryfun.info/2018/03/%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84%e4%b8%8e%e7%ae%97%e6%b3%95%ef%bc%88c%ef%bc%89%e4%bb%a3%e7%a0%81%e7%bb%83%e4%b9%a0%ef%bc%88pta%e9%a2%98%e7%9b%ae%ef%bc%89/</link>
		<pubDate>Sat, 10 Mar 2018 15:03:03 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://diaryfun.info/?p=163</guid>
		<description></description>
		<content:encoded><![CDATA[<em>所有代码均由Microsoft <span class="st">Visual Studio 2015编译通过</span></em>

&nbsp;

&nbsp;

&nbsp;

<h4>在线算法输出N个整数的最大子列和</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="在线算法输出N个整数的最大子列和">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
using namespace std;
int maxSubSum(int a[], int n)
{
    int thisSum = 0, maxSum = 0;
    for (int i = 0; i &lt; n; i++) {
        thisSum += a[i];
        if (thisSum &gt; maxSum) {
            maxSum = thisSum;
        }
        if (thisSum &lt; 0) {
            thisSum = 0;
        }
    }
    return maxSum;
}
void main()
{
    int n, *a, sum;
    cout &lt;&lt; "请输入数列长度：\n";
    cin &gt;&gt; n;
    a = new int[n];
    cout &lt;&lt; "请输入数列：\n";
    for (int i = 0; i &lt; n; i++) {
        cin &gt;&gt; a[i];
    }
    sum = maxSubSum(a, n);
    cout &lt;&lt; "最大子列和为：" &lt;&lt; sum &lt;&lt; "\n";
    system("pause");
}
</pre>

&nbsp;

&nbsp;

<h4>在线算法输出N个整数的最大子列和及其首尾项</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="在线算法输出N个整数的最大子列和及其首尾项">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
using namespace std;
int maxSubSumPrint(int a[], int n)
{
    int thisSum = 0, maxSum = -1;
    int head, rear, flag = 0;
    int maxHead = 0, maxRear = n - 1;
    for (int i = 0; i &lt; n; i++) {
        thisSum += a[i];
        if (flag == 0) {
            if (a[i] &gt;= 0) {
                head = rear = i;
                flag = 1;
            }
        }
        else {
            rear++;
        }
        if (thisSum &gt; maxSum) {
            maxSum = thisSum;
            maxHead = head;
            maxRear = rear;
        }
        if (thisSum &lt; 0) {
            thisSum = 0;
            flag = 0;
        }
    }
    if (maxSum == -1) {
        maxSum = 0;
    }
    cout &lt;&lt; "最大子列和为：" &lt;&lt; maxSum &lt;&lt; "\n";
    cout &lt;&lt; "最大子列头数字为" &lt;&lt; a[maxHead] &lt;&lt; "  尾数字为" &lt;&lt; a[maxRear] &lt;&lt; "\n";
    return maxSum;
}
void main()
{
    int n, *a;
    cout &lt;&lt; "请输入数列长度：\n";
    cin &gt;&gt; n;
    a = new int[n];
    cout &lt;&lt; "请输入数列：\n";
    for (int i = 0; i &lt; n; i++) {
        cin &gt;&gt; a[i];
    }
    maxSubSumPrint(a, n);
    system("pause");
}
</pre>

&nbsp;

&nbsp;

<h4>使用链表输出两个一元多项式的乘积与和</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="使用链表输出两个一元多项式的乘积与和">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
using namespace std;
class PolyNode
{
public:
    int coef;
    int expo;
    PolyNode *nextNode;
};
PolyNode* inputPoly(int n) {
    if (n &lt;= 0) {
        return NULL;
    }
    PolyNode *poly = new PolyNode;
    PolyNode *p = NULL;
    cout &lt;&lt; "请以指数递降顺序输入各项系数与指数（以空格分开）：\n";
    p = poly;
    cin &gt;&gt; p-&gt;coef;
    cin &gt;&gt; p-&gt;expo;
    while (--n) {
        p-&gt;nextNode = new PolyNode;
        p = p-&gt;nextNode;
        cin &gt;&gt; p-&gt;coef;
        cin &gt;&gt; p-&gt;expo;
    }
    p-&gt;nextNode = NULL;
    return poly;
}
PolyNode* add(PolyNode* p1, PolyNode* p2)
{
    PolyNode* p = new PolyNode;
    p-&gt;nextNode = new PolyNode;
    PolyNode* p0 = NULL;
    if (p1 || p2) {
        p0 = p-&gt;nextNode;
    }
    while (p1&amp;&amp;p2) {
        p = p-&gt;nextNode;
        if (p1-&gt;expo &gt; p2-&gt;expo) {
            p-&gt;expo = p1-&gt;expo;
            p-&gt;coef = p1-&gt;coef;
            p1 = p1-&gt;nextNode;
        }
        else if (p1-&gt;expo &lt; p2-&gt;expo) {
            p-&gt;expo = p2-&gt;expo;
            p-&gt;coef = p2-&gt;coef;
            p2 = p2-&gt;nextNode;
        }
        else {
            p-&gt;expo = p1-&gt;expo;
            p-&gt;coef = p1-&gt;coef + p2-&gt;coef;
            p1 = p1-&gt;nextNode;
            p2 = p2-&gt;nextNode;
        }
        p-&gt;nextNode = new PolyNode;
    }
    while (p1) {
        p = p-&gt;nextNode;
        p-&gt;expo = p1-&gt;expo;
        p-&gt;coef = p1-&gt;coef;
        p1 = p1-&gt;nextNode;
        p-&gt;nextNode = new PolyNode;
    }
    while (p2) {
        p = p-&gt;nextNode;
        p-&gt;expo = p2-&gt;expo;
        p-&gt;coef = p2-&gt;coef;
        p2 = p2-&gt;nextNode;
        p-&gt;nextNode = new PolyNode;
    }
    p-&gt;nextNode = NULL;
    return p0;
}
PolyNode* mult(PolyNode* p1, PolyNode* p2)
{
    PolyNode *p = NULL;
    PolyNode *t = new PolyNode;
    t-&gt;nextNode = NULL;
    PolyNode *i = p1, *j = p2;
    while (i) {
        if (i-&gt;coef) {
            j = p2;
            while (j) {
                if (j-&gt;coef) {
                    t-&gt;coef = i-&gt;coef*j-&gt;coef;
                    t-&gt;expo = i-&gt;expo + j-&gt;expo;
                    p = add(p, t);
                }
                j = j-&gt;nextNode;
            }
        }
        i = i-&gt;nextNode;
    }
    return p;
}
void printPoly(PolyNode* p)
{
    int flag = 0;
    while (p) {
        if (p-&gt;coef) {
            cout &lt;&lt; p-&gt;coef &lt;&lt; ' ' &lt;&lt; p-&gt;expo &lt;&lt; ' ';
            flag = 1;
        }
        p = p-&gt;nextNode;
    }
    if (!flag) {
        cout &lt;&lt; "0 0";
    }
    cout &lt;&lt; "\n";
}
void main()
{
    int n1, n2;
    PolyNode *p1, *p2, *padd, *pmult;
    cout &lt;&lt; "请输入第一个多项式非零项项数：\n";
    cin &gt;&gt; n1;
    p1 = inputPoly(n1);
    cout &lt;&lt; "请输入第二个多项式非零项项数：\n";
    cin &gt;&gt; n2;
    p2 = inputPoly(n2);
    padd = add(p1, p2);
    pmult = mult(p1, p2);
    cout &lt;&lt; "和多项式的非零项为：\n";
    printPoly(padd);
    cout &lt;&lt; "乘积多项式的非零项为：\n";
    printPoly(pmult);
    system("pause");
}
</pre>

&nbsp;

&nbsp;

<h4>以k为单位反转抽象链表</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="以k为单位反转抽象链表">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
using namespace std;
class Node
{
public:
    int Data;
    int Next;
};
void input(Node a[], int n)
{
    int i;
    for (int j = 0; j &lt; n; j++) {
        cin &gt;&gt; i;
        cin &gt;&gt; a[i].Data &gt;&gt; a[i].Next;
    }
}
int count(Node a[], int h)
{
    int i = 0, p = h;
    while (p != -1)
    {
        i++;
        p = a[p].Next;
    }
    return i;
}
void reverse(Node a[], int&amp; h, int k)
{
    int n, i = 0;
    n = count(a, h);
    int p, h1, h2, t1, t2;
    p = h1 = h2 = h;
    t1 = a[p].Next;
    t2 = a[t1].Next;
    while (++i)
    {
        if (i &gt; n / k) {
            break;
        }
        for (int j = 0; j &lt; k - 1; j++)
        {
            a[t1].Next = p;
            p = t1;
            t1 = t2;
            t2 = a[t2].Next;
        }
        if (i == 1)
        {
            h = p;
        }
        else {
            a[h1].Next = p;
            h1 = h2;
        }
        p = t1;
        t1 = t2;
        t2 = a[t2].Next;
        h2 = p;
    }
    a[h1].Next = p;
}
void print(Node a[], int h)
{
    int p = h;
    while (p != -1 &amp;&amp; a[p].Next != -1) {
        cout &lt;&lt; setfill('0') &lt;&lt; setw(5) &lt;&lt; p &lt;&lt; ' ' &lt;&lt; a[p].Data &lt;&lt; ' ' &lt;&lt; setw(5) &lt;&lt; a[p].Next &lt;&lt; '\n';
        p = a[p].Next;
    }
    if (a[p].Next == -1) {
        cout &lt;&lt; setfill('0') &lt;&lt; setw(5) &lt;&lt; p &lt;&lt; ' ' &lt;&lt; a[p].Data &lt;&lt; ' ' &lt;&lt; a[p].Next &lt;&lt; '\n';
    }
}
void main()
{
    int head, n, k;
    Node Memory[100000];
    cout &lt;&lt; "请输入头地址、节点总数、反转单位长度：\n";
    cin &gt;&gt; head &gt;&gt; n &gt;&gt; k;
    input(Memory, n);
    reverse(Memory, head, k);
    cout &lt;&lt; "反转后结果：\n";
    print(Memory, head);
    system("pause");
}
</pre>

&nbsp;

&nbsp;

<h4>判断一组数是否为可能的出栈结果</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="判断一组数是否为可能的出栈结果">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
using namespace std;
class Node
{
public:
    int Data;
    Node* Next;
};
void push(Node* &amp;top, int&amp; sum, int a)
{
    Node* temp = new Node;
    temp-&gt;Next = top;
    top = temp;
    top-&gt;Data = a;
    sum++;
}
int pop(Node* &amp;top, int&amp; sum)
{
    Node* temp = top;
    top = top-&gt;Next;
    temp-&gt;Next = NULL;
    sum--;
    return temp-&gt;Data;
}
int check(int m, int n)
{
    int temp = 0, sum = 0;
    int x;
    int result = 1;
    Node* top = new Node;
    top-&gt;Next = NULL;
    for (int i = 0; i &lt; n; i++) {
        cin &gt;&gt; x;
        if (x &lt; temp) {
            if (top-&gt;Data != x) {
                result = 0;
            }
            else {
                pop(top, sum);
            }
            continue;
        }
        while (++temp != x) {
            push(top, sum, temp);
            if (sum &gt; m - 1) {
                result = 0;
                break;
            }
        }
    }
    return result;
}
void main()
{
    int m, n, k;
    cin &gt;&gt; m &gt;&gt; n &gt;&gt; k;
    int *result;
    result = new int[k];
    for (int i = 0; i &lt; k; i++)
    {
        result[i] = check(m, n);
    }
    for (int i = 0; i &lt; k; i++)
    {
        switch (result[i])
        {
        case 0:cout &lt;&lt; "NO\n";
            break;
        case 1:cout &lt;&lt; "YES\n";
            break;
        }
    }
    system("pause");
}
</pre>

&nbsp;

&nbsp;

<h4>递归法判断树的同构</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="递归法判断树的同构">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
using namespace std;
class Node
{
public:
    char data;
    int left;
    int right;
    int isRoot;
};
int input(Node *&amp;a)
{
    int n;
    int root;
    char left, right;
    cin &gt;&gt; n;
    if (!n) {
        a = NULL;
        return -1;
    }
    a = new Node[n];
    for (int i = 0; i &lt; n; i++)
    {
        cin &gt;&gt; a[i].data &gt;&gt; left &gt;&gt; right;
        a[i].isRoot = 1;
        if (left == '-') {
            a[i].left = -1;
        }
        else {
            a[i].left = int(left) - 48;
        }
        if (right == '-') {
            a[i].right = -1;
        }
        else {
            a[i].right = int(right) - 48;
        }
    }
    for (int i = 0; i &lt; n; i++)
    {
        if (a[i].left != -1) {
            a[a[i].left].isRoot = 0;
        }
        if (a[i].right != -1) {
            a[a[i].right].isRoot = 0;
        }
    }
    for (int i = 0; i &lt; n; i++)
    {
        if (a[i].isRoot) {
            root = i;
        }
    }
    return root;
}
int compare(Node* a, Node* b, int aRoot, int bRoot)
{
    if (!a&amp;&amp;!b) {
        return 1;
    }
    else if (!a || !b) {
        return 0;
    }
    else if (aRoot == -1 &amp;&amp; bRoot == -1) {
        return 1;
    }
    else if (aRoot == -1 || bRoot == -1) {
        return 0;
    }
    else if (a[aRoot].data != b[bRoot].data) {
        return 0;
    }
    else if (compare(a, b, a[aRoot].left, b[bRoot].left)) {
        return compare(a, b, a[aRoot].right, b[bRoot].right);
    }
    else if (compare(a, b, a[aRoot].left, b[bRoot].right)) {
        return compare(a, b, a[aRoot].right, b[bRoot].left);
    }
    else {
        return 0;
    }
}
void main()
{
    Node *a, *b;
    int aRoot, bRoot;
    int result;
    aRoot = input(a);
    bRoot = input(b);
    result = compare(a, b, aRoot, bRoot);
    if (result == 1) {
        cout &lt;&lt; "Yes";
    }
    else {
        cout &lt;&lt; "No";
    }
    system("pause");
}
</pre>

&nbsp;

&nbsp;

<h4>层序遍历打印叶子结点</h4>

&nbsp;

<pre class="lang:c++ decode:true" title="层序遍历打印叶子结点">#include&lt;iostream&gt;
#include&lt;iomanip&gt;
using namespace std;
class Node
{
public:
    int left;
    int right;
    int isRoot;
    int isLeaf;
};
class QueueNode
{
public:
    int a;
    QueueNode* next;
};
int input(Node *&amp;a)
{
    int n;
    int root;
    char left, right;
    cin &gt;&gt; n;
    if (!n) {
        a = NULL;
        return -1;
    }
    a = new Node[n];
    for (int i = 0; i &lt; n; i++)
    {
        cin &gt;&gt; left &gt;&gt; right;
        a[i].isRoot = 1;
        a[i].isLeaf = 1;
        if (left == '-') {
            a[i].left = -1;
        }
        else {
            a[i].left = int(left) - int('0');
        }
        if (right == '-') {
            a[i].right = -1;
        }
        else {
            a[i].right = int(right) - int('0');
        }
    }
    for (int i = 0; i &lt; n; i++)
    {
        if (a[i].left != -1) {
            a[a[i].left].isRoot = 0;
            a[i].isLeaf = 0;
        }
        if (a[i].right != -1) {
            a[a[i].right].isRoot = 0;
            a[i].isLeaf = 0;
        }
    }
    for (int i = 0; i &lt; n; i++)
    {
        if (a[i].isRoot) {
            root = i;
        }
    }
    return root;
}
void enqueue(int a, QueueNode*&amp; rear) {
    rear-&gt;a = a;
    rear-&gt;next = new QueueNode;
    rear = rear-&gt;next;
    rear-&gt;next = NULL;
}
int dequeue(QueueNode*&amp; front) {
    QueueNode* temp = front;
    front = front-&gt;next;
    temp-&gt;next = NULL;
    return temp-&gt;a;
}
void printLeaf(Node *tree, int root) {
    QueueNode *front, *rear;
    int a, flag = 0;
    front = rear = new QueueNode;
    rear-&gt;next = NULL;
    enqueue(root, rear);
    while (front != rear) {
        a = dequeue(front);
        if (tree[a].isLeaf) {
            if (!flag) {
                cout &lt;&lt; a;
                flag = 1;
            }
            else {
                cout &lt;&lt; ' ' &lt;&lt; a;
            }
        }
        if (tree[a].left != -1) {
            enqueue(tree[a].left, rear);
        }
        if (tree[a].right != -1) {
            enqueue(tree[a].right, rear);
        }
    }
}
void main()
{
    Node *tree;
    int root;
    root = input(tree);
    printLeaf(tree, root);
    system("pause");
}
</pre>

&nbsp;

&nbsp;

&nbsp;

2016年3月]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>163</wp:post_id>
		<wp:post_date><![CDATA[2018-03-10 23:03:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-03-10 15:03:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84%e4%b8%8e%e7%ae%97%e6%b3%95%ef%bc%88c%ef%bc%89%e4%bb%a3%e7%a0%81%e7%bb%83%e4%b9%a0%ef%bc%88pta%e9%a2%98%e7%9b%ae%ef%bc%89]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="algorithm"><![CDATA[算法]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[weibo_sync]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JavaScript闭包原理分析</title>
		<link>http://diaryfun.info/2018/03/javascript%e9%97%ad%e5%8c%85%e5%8e%9f%e7%90%86%e5%88%86%e6%9e%90/</link>
		<pubDate>Fri, 23 Mar 2018 15:53:03 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://diaryfun.info/?p=169</guid>
		<description></description>
		<content:encoded><![CDATA[<div class="article fmt article__content" data-id="1190000008533150" data-license="cc">

写了几个小例子揭示JS中闭包的本质，适合自己运行后分析。

<hr />

HTML文件

&nbsp;
<pre class="lang:default decode:true">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;

&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Test&lt;/title&gt;
    &lt;script src="lib/jquery-3.1.0.js"&gt;&lt;/script&gt;
    &lt;script src="closure_example.js"&gt;&lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;button&gt;0&lt;/button&gt;
    &lt;button&gt;1&lt;/button&gt;
    &lt;button&gt;2&lt;/button&gt;
    &lt;button&gt;3&lt;/button&gt;
    &lt;button&gt;4&lt;/button&gt;
    &lt;button&gt;5&lt;/button&gt;
    &lt;button style="display:none" class="hide"&gt;什么是闭包&lt;/button&gt;
&lt;/body&gt;

&lt;/html&gt;
</pre>
&nbsp;

<hr />

JS代码
<div class="widget-codetool">
<div class="widget-codetool--inner"></div>
</div>
<pre class="lang:default decode:true ">$(function () {


    /*
    给6个按钮绑定事件，点击打印按钮的序号
     */
    for (var i = 0; i &lt; 6; i++) {
        $('button').eq(i).on('click', function () {
            console.log(i);
        });
    }

    /*
    解决方案一：借用DOM元素的属性存储序号i
     */
    for (var i = 0; i &lt; 6; i++) {
        $('button').eq(i).attr('i', i).on('click', function () {
            console.log($(this).attr('i'));
        });
    }


    /*
    解决方案二：利用IIFE将i作为参数传递给内部函数
     */
    for (var i = 0; i &lt; 6; i++) {
        (function (i) {
            $('button').eq(i).on('click', function () {
                console.log(i);
            });
        })(i);
    }

    /*
    错误方案：IIFE使用位置错误
     */
    for (var i = 0; i &lt; 6; i++) {
        $('button').eq(i).on('click', function () {
            (function (i) {
                console.log(i);
            })(i);
        });
    }

    /*
    解决方案三：利用IIFE所创造的“块级作用域”，将i赋值给局部变量
    */
    for (var i = 0; i &lt; 6; i++) {
        (function () {
            var temp = i;
            $('button').eq(temp).on('click', function () {
                console.log(temp);
            });
        })();
    }

    /*
    什么是闭包？
    */
    function closure() {
        var i = 0;
        return function fun() {
            i++;
            console.log(i);
        }
    }

    var foo = closure();
    foo();
    foo();
    foo();

    var bar = closure();
    bar();
    bar();
    bar();

    $('.hide').show().on('click', foo)

});
</pre>
&nbsp;

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>169</wp:post_id>
		<wp:post_date><![CDATA[2018-03-23 23:53:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-03-23 15:53:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[javascript%e9%97%ad%e5%8c%85%e5%8e%9f%e7%90%86%e5%88%86%e6%9e%90]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="fe"><![CDATA[前端]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[weibo_sync]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>React Starter Kit 学习笔记</title>
		<link>http://diaryfun.info/2018/03/react-starter-kit-%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0/</link>
		<pubDate>Fri, 23 Mar 2018 16:02:44 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://diaryfun.info/?p=173</guid>
		<description></description>
		<content:encoded><![CDATA[<div class="article fmt article__content" data-id="1190000008542662" data-license="cc">

根据<a href="http://reactjs.cn/react/docs/getting-started.html" target="_blank" rel="noopener">http://reactjs.cn/react/docs/...</a>页面中Starter Kit 15.3.1中的例子汇总修改而成。

<hr />

HTML代码
<pre class="lang:default decode:true hljs xml">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;

&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;React test&lt;/title&gt;
    &lt;link rel="stylesheet" href="react_transition.css"&gt;
    &lt;script src="lib/react-with-addons.js"&gt;&lt;/script&gt;
    &lt;script src="lib/react-dom.js"&gt;&lt;/script&gt;
    &lt;script src="lib/browser.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;div id="container1"&gt;&lt;/div&gt;
    &lt;div id="container2"&gt;&lt;/div&gt;
    &lt;div id="container3"&gt;&lt;/div&gt;
    &lt;div id="container4"&gt;&lt;/div&gt;
    &lt;div id="container5"&gt;&lt;/div&gt;
    &lt;div id="container6"&gt;&lt;/div&gt;
    &lt;div id="container7"&gt;&lt;/div&gt;
    &lt;div id="container8"&gt;&lt;/div&gt;
    &lt;div id="container9"&gt;&lt;/div&gt;
    &lt;div id="container10"&gt;&lt;/div&gt;
    &lt;script src="react_test.js" type="text/babel"&gt;&lt;/script&gt;
&lt;/body&gt;

&lt;/html&gt;
</pre>

<hr />

JS代码
<pre class="lang:default decode:true hljs actionscript">const container1 = document.getElementById('container1')
const container2 = document.getElementById('container2')
const container3 = document.getElementById('container3')
const container4 = document.getElementById('container4')
const container5 = document.getElementById('container5')
const container6 = document.getElementById('container6')


//1 'Hello' + name
function Welcome(props) {
    return &lt;h1 &gt; Hello, { props.name } &lt; /h1&gt;;
}

const element = &lt; Welcome name = "Diary" / &gt; ;
ReactDOM.render(
    element,
    container1
);

//2 流逝时间计时器
var Elapsed = React.createClass({
    render: function () {
        var elapsed = Math.round(this.props.elapsed / 100);
        var seconds = elapsed / 10 + (elapsed % 10 ? '' : '.0');
        var message =
            'React has been successfully running for ' + seconds + ' seconds.';

        return &lt;p &gt; { message } &lt; /p&gt;;
    }
});

var start = new Date().getTime();
setInterval(function () {
    ReactDOM.render( &lt; Elapsed elapsed = { new Date().getTime() - start }
        / &gt; ,
        container2
    );
}, 50);

//3 按钮点击计数

var Counter = React.createClass({
    getInitialState: function () {
        return { 
            count: 2,
            sum: 100
        };
    },
    handleClick: function () {
        this.setState({
            count: this.state.count * this.state.count,
        });
    },
    handleDoubleClick: function () {
        this.setState({
            count: 2,
            sum: 1000
        })
    },
    render: function () {
        return ( 
            &lt; button onClick = { this.handleClick } onDoubleClick = { this.handleDoubleClick }&gt;
            sum - count: { this.state.sum - this.state.count } &lt; /button&gt;
        );
    }
});
ReactDOM.render( &lt; Counter / &gt; ,
    container3
);


//4 流逝时间计时器（ES6写法）

class ExampleApplication extends React.Component {
    render() {
        var elapsed = Math.round(this.props.elapsed / 100);
        var seconds = elapsed / 10 + (elapsed % 10 ? '' : '.0');
        var message =
            `React has been successfully running for ${seconds} seconds.`;

        return &lt;p &gt; { message } &lt; /p&gt;;
    }
}
var start = new Date().getTime();
setInterval(() =&gt; {
    ReactDOM.render( &lt; ExampleApplication elapsed = { new Date().getTime() - start }/&gt;,
        container4
    );
}, 50);


//5 实时求解一元二次方程

var QuadraticCalculator = React.createClass({
  getInitialState: function() {
    return {
      a: 1,
      b: 3,
      c: -4
    };
  },

  /**
   * This function will be re-bound in render multiple times. Each .bind() will
   * create a new function that calls this with the appropriate key as well as
   * the event. The key is the key in the state object that the value should be
   * mapped from.
   */
  handleInputChange: function(key, event) {
    var partialState = {};
    partialState[key] = parseFloat(event.target.value);
    this.setState(partialState);
  },

  render: function() {
    var a = this.state.a;
    var b = this.state.b;
    var c = this.state.c;
    var root = Math.sqrt(Math.pow(b, 2) - 4 * a * c);
    var denominator = 2 * a;
    var x1 = (-b + root) / denominator;
    var x2 = (-b - root) / denominator;
    return (
      &lt;div&gt;
        &lt;strong&gt;
          &lt;em&gt;ax&lt;/em&gt;&lt;sup&gt;2&lt;/sup&gt; + &lt;em&gt;bx&lt;/em&gt; + &lt;em&gt;c&lt;/em&gt; = 0
        &lt;/strong&gt;
        &lt;h4&gt;Solve for &lt;em&gt;x&lt;/em&gt;:&lt;/h4&gt;
        &lt;p&gt;
          &lt;label&gt;
            a: &lt;input type="number" value={a} onChange={this.handleInputChange.bind(null, 'a')} /&gt;
          &lt;/label&gt;
          &lt;br /&gt;
          &lt;label&gt;
            b: &lt;input type="number" value={b} onChange={this.handleInputChange.bind(null, 'b')} /&gt;
          &lt;/label&gt;
          &lt;br /&gt;
          &lt;label&gt;
            c: &lt;input type="number" value={c} onChange={this.handleInputChange.bind(null, 'c')} /&gt;
          &lt;/label&gt;
          &lt;br /&gt;
          x: &lt;strong&gt;{x1}, {x2}&lt;/strong&gt;
        &lt;/p&gt;
      &lt;/div&gt;
    );
  }
});

ReactDOM.render(
  &lt;QuadraticCalculator /&gt;,
  container5
);


//6 调用React组件CSSTransitionGroup制作动画效果

var CSSTransitionGroup = React.addons.CSSTransitionGroup;
var INTERVAL = 2000;

var AnimateDemo = React.createClass({
getInitialState: function() {
  return {current: 0};
},

componentDidMount: function() {
  this.interval = setInterval(this.tick, INTERVAL);
},

componentWillUnmount: function() {
  clearInterval(this.interval);
},

tick: function() {
  this.setState({current: this.state.current + 1});
},

render: function() {
  var children = [];
  var colors = ['#fac', '#cdc', '#36d', '#ca0', '#0aa'];
  for (var i = this.state.current, pos=0; i &lt; this.state.current + colors.length; i++, pos++) {
    var style = {
      left: pos * 128,
      background: colors[i % colors.length]
    };
    children.push(&lt;div key={i} className="animateItem" style={style}&gt;{i}&lt;/div&gt;);
  }
  return (
    &lt;CSSTransitionGroup
      className="animateExample"
      transitionEnterTimeout={250}
      transitionLeaveTimeout={250}
      transitionName="example"&gt;
      {children}
    &lt;/CSSTransitionGroup&gt;
  );
}
});

ReactDOM.render(
&lt;AnimateDemo /&gt;,
container6
);</pre>

<hr />

CSS代码（仅在例6中使用）
<div class="widget-codetool">
<div class="widget-codetool--inner"></div>
</div>
<pre class="lang:default decode:true hljs css">.example-enter,
.example-leave {
  -webkit-transition: all .25s;
  transition: all .25s;
}

.example-enter,
.example-leave.example-leave-active {
  opacity: 0.01;
}

.example-leave.example-leave-active {
  margin-left: -128px;
}

.example-enter {
  margin-left: 128px;
}

.example-enter.example-enter-active,
.example-leave {
  margin-left: 0;
  opacity: 1;
}

.animateExample {
  display: block;
  height: 128px;
  position: relative;
  width: 384px;
}

.animateItem {
  color: white;
  font-size: 36px;
  font-weight: bold;
  height: 128px;
  line-height: 128px;
  position: absolute;
  text-align: center;
  -webkit-transition: all .25s; /* TODO: make this a move animation */
  transition: all .25s; /* TODO: make this a move animation */
  width: 128px;
}
</pre>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>173</wp:post_id>
		<wp:post_date><![CDATA[2018-03-24 00:02:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-03-23 16:02:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[react-starter-kit-%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="fe"><![CDATA[前端]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[weibo_sync]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>怎么使用正则表达式完美匹配HTML标签？</title>
		<link>http://diaryfun.info/2018/03/%e6%80%8e%e4%b9%88%e4%bd%bf%e7%94%a8%e6%ad%a3%e5%88%99%e8%a1%a8%e8%be%be%e5%bc%8f%e5%ae%8c%e7%be%8e%e5%8c%b9%e9%85%8dhtml%e6%a0%87%e7%ad%be%ef%bc%88%e4%bb%85%e6%a0%87%e7%ad%be%ef%bc%89%ef%bc%9f/</link>
		<pubDate>Fri, 23 Mar 2018 16:08:54 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://diaryfun.info/?p=175</guid>
		<description></description>
		<content:encoded><![CDATA[<div class="answer fmt" data-id="1020000008801225">

转自腾讯前端博客：<a href="http://imweb.io/topic/56e804ef1a5f05dc50643106" target="_blank" rel="noopener">http://imweb.io/topic/56e804e...</a>

<hr />

匹配HTML标签嘛，感觉很简单的样子，我们的第一反应可能是：<code>var pattern = /&lt;[^&gt;]+&gt;/</code> 不过这样匹配可能存在的问题是：如果tag中含有<code>&gt;</code>，上面的正则就不能正常匹配了。如： <code>&lt;input name=123 value="&gt;" &gt;</code>

<span class="img-wrap"><img class="transparent" src="https://sfault-image.b0.upaiyun.com/247/730/2477308083-58d34691bcbe1" alt="https://sfault-image.b0.upaiyun.com/247/730/2477308083-58d34691bcbe1" /></span>

虽然上面这种HTML的写法很少(sha)见(bi)，但确实合法的。因此，简单的<code>&lt;[^&gt;]+&gt;</code>就不能用了，需要想个聪明点的办法。 我们先来看一下HTML Tag中有什么规则：<code>&lt;...&gt;</code>中能够出现
引用文本（被单引号或双引号包裹的）
非引用形式的“其他文本”（包括除了<code>&gt;</code>和引号之外的任何字符）
<pre class="lang:default decode:true hljs">引用文本：HTML中的引文可以用双引号，也可以用单引号，但不允许嵌套转义的引号。
</pre>
因此我们可以使用<code>/("[^"]*"|'[^']*')/</code>来匹配。
<pre class="lang:default decode:true">其他文本：除了&gt;和引号之外的任意字符</pre>
可以使用<code>/[^'"&gt;]/</code>来匹配 现在可以得出匹配HTML Tag的正则表达式最终版！
<pre class="lang:default decode:true hljs scilab">var pattern = /&lt;("[^"]*"|'[^']*'|[^'"&gt;])*&gt;/
</pre>
给这个正则表达式来点注释：
<pre class="lang:default decode:true hljs 1c">&lt;                # 开始的尖括号"&lt;"
    (            #     任意数量的...
        "[^"]*"  #         双引号字符串
        |        #         或者是...
        '[^']*'  #         单引号字符串
        |        #         或者是...
        [^'"&gt;]   #         "其他文本"
    )*           #         
>                # 结束的尖括号"&gt;"
</pre>
<strong>需要注意的是</strong>，我们不用"+"来修饰<code>[^'"&gt;]</code>的原因是<code>([^'"&gt;]+)*</code>可能会带来灾难性的后果。匹配次数呈指数级增长。比如：对于简单的目标字符串helloworld，是星号会迭代10次，每一次迭代中<code>[^'"&gt;]+</code>匹配一个字符？还是星号迭代3次，内部的<code>[^'"&gt;]+</code>分别匹配5、2、3个字符？或者2、3、1、4个字符？还是其他情况？这样会把正则引擎搞疯掉的啦！

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>175</wp:post_id>
		<wp:post_date><![CDATA[2018-03-24 00:08:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-03-23 16:08:54]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%80%8e%e4%b9%88%e4%bd%bf%e7%94%a8%e6%ad%a3%e5%88%99%e8%a1%a8%e8%be%be%e5%bc%8f%e5%ae%8c%e7%be%8e%e5%8c%b9%e9%85%8dhtml%e6%a0%87%e7%ad%be%ef%bc%88%e4%bb%85%e6%a0%87%e7%ad%be%ef%bc%89%ef%bc%9f]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="fe"><![CDATA[前端]]></category>
		<category domain="category" nicename="repost"><![CDATA[转载]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[weibo_sync]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Vue.js 表格组件</title>
		<link>http://diaryfun.info/2018/03/vue-js-%e8%a1%a8%e6%a0%bc%e7%bb%84%e4%bb%b6/</link>
		<pubDate>Fri, 23 Mar 2018 16:14:12 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://diaryfun.info/?p=178</guid>
		<description></description>
		<content:encoded><![CDATA[HTML：

<pre class="lang:default decode:true ">&lt;div id="target"&gt;&lt;/div&gt;</pre>

&nbsp;

JS：

<pre class="lang:default decode:true ">//Vue组件开始
var Grid = Vue.extend({
    template: '&lt;table class="table" :class="{layoutFixed: config.layoutFixed}"&gt;\
                &lt;thead&gt;\
                    &lt;tr&gt;\
                        &lt;th v-for="col in config.colModel" \
                        v-if="col.sort" \
                        :width="col.width" \
                        :col="col.name" \
                        :title="removeTag(col.display)" &gt;\
                        &lt;div class="sort ellipsis" :sortType="col.sortType"&gt;{{col.display}}\
                        &lt;i class="icon-chevron-up" @click="sortUp"&gt;&lt;/i&gt;\
                        &lt;i class="icon-chevron-down" @click="sortDown"&gt;&lt;/i&gt;\
                        &lt;/div&gt;&lt;/th&gt;\
                        &lt;th v-else \
                        class="ellipsis"\
                        :width="col.width" \
                        :col="col.name" \
                        :title="removeTag(col.display)" &gt;{{col.display}}&lt;/th&gt;\
                    &lt;/tr&gt;\
                &lt;/thead&gt;\
                &lt;tbody&gt;\
                    &lt;tr v-for="row in resData.rows"&gt;\
                        &lt;td v-for="col in config.colModel"\
                        :title="removeTag(row[col.name])" v-handle="{handler:col.handler, v:row[col.name], data:row}"&gt;{{row[col.name]}}&lt;/td&gt;\
                    &lt;/tr&gt;\
                &lt;/tbody&gt;\
            &lt;/table&gt;',
    data: function () {
        return {
            url: '',
            config: {},
            param: {},
            resData: {}
        };
    },
    computed: {

    },
    methods: {
        getData: function () {
            var self = this;
            $.ajax({
                url: this.url,
                type: 'GET',
                data: this.param,
                success: function (json) {
                    json = JSON.parse(json);
                    self.resData = json.data;
                }
            });
        },
        sortUp: function (event) {
            $.extend(this.param, {
                sortType: $(event.target).parent().attr('sorttype'),
                orderType: "1"
            });
            this.getData();
        },
        sortDown: function (event) {
            $.extend(this.param, {
                sortType: $(event.target).parent().attr('sorttype'),
                orderType: "2"
            });
            this.getData();
        },
        removeTag: function (str) {
            if (str) {
                str = str.toString();
                return str.replace(/&lt;("[^"]*"|'[^']*'|[^"'&gt;])&gt;/g, '');
            } else {
                return '';
            }
        },
        log: function (str) {
            console.log(str);
        }
    },
    directives: {
        handle: {
            inserted: function (el, binding) {
                var handler = binding.value.handler;
                if (handler &amp;&amp; $.isFunction(handler)) {
                    handler(binding.value.v, binding.value.data, $(el), $(el).parent('tr'));
                }
            }
        }
    },
    mounted: function () {
        this.getData();
    }
});

Vue.component('grid', Grid);
//Vue组件结束

//创建Vue实例开始
var vm = new Grid({
    el: config.renderTo,
    data: {
        url: config.url,
        config: config
    },
    computed: {

    }
});
//创建Vue实例结束</pre>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>178</wp:post_id>
		<wp:post_date><![CDATA[2018-03-24 00:14:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-03-23 16:14:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vue-js-%e8%a1%a8%e6%a0%bc%e7%bb%84%e4%bb%b6]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="fe"><![CDATA[前端]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[weibo_sync]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>四元数（Quaternion）和旋转</title>
		<link>http://diaryfun.info/2018/07/182/</link>
		<pubDate>Mon, 16 Jul 2018 14:22:45 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://diaryfun.info/?p=182</guid>
		<description></description>
		<content:encoded><![CDATA[原文链接：<a href="https://blog.csdn.net/candycat1992/article/details/41254799">https://blog.csdn.net/candycat1992/article/details/41254799</a>

<h1></h1>

<h1>四元数介绍</h1>

旋转，应该是三种坐标变换——缩放、旋转和平移，中最复杂的一种了。大家应该都听过，有一种旋转的表示方法叫四元数。按照我们的习惯，我们更加熟悉的是另外两种旋转的表示方法——矩阵旋转和<a href="http://zh.wikipedia.org/wiki/%E6%AC%A7%E6%8B%89%E8%A7%92" target="_blank" rel="nofollow noopener">欧拉旋转</a>。矩阵旋转使用了一个4*4大小的矩阵来表示绕任意轴旋转的变换矩阵，而欧拉选择则是按照一定的坐标轴顺序（例如先x、再y、最后z）、每个轴旋转一定角度来变换坐标或向量，它实际上是一系列坐标轴旋转的组合。

那么，<a href="http://zh.wikipedia.org/wiki/%E5%9B%9B%E5%85%83%E6%95%B8" target="_blank" rel="nofollow noopener">四元数</a>又是什么呢？简单来说，四元数本质上是一种高阶复数（听不懂了吧。。。），是一个四维空间，相对于复数的二维空间。我们高中的时候应该都学过复数，一个复数由实部和虚部组成，即x = a + bi，i是虚数单位，如果你还记得的话应该知道i^2 = -1。而四元数其实和我们学到的这种是类似的，不同的是，它的虚部包含了三个虚数单位，i、j、k，即一个四元数可以表示为x = a + bi + cj + dk。那么，它和旋转为什么会有关系呢？

在Unity里，tranform组件有一个变量名为rotation，它的类型就是四元数。很多初学者会直接取rotation的x、y、z，认为它们分别对应了Transform面板里R的各个分量。当然很快我们就会发现这是完全不对的。实际上，四元数的x、y、z和R的那三个值从直观上来讲没什么关系，当然会存在一个表达式可以转换，在后面会讲。

大家应该和我一样都有很多疑问，既然已经存在了这两种旋转表示方式，为什么还要使用四元数这种听起来很难懂的东西呢？我们先要了解这三种旋转方式的优缺点：

<ul>
    <li><strong>矩阵旋转</strong>
<ul>
    <li>优点：
<ul>
    <li>旋转轴可以是任意向量；</li>
</ul>
</li>
    <li>缺点：
<ul>
    <li>旋转其实只需要知道一个向量+一个角度，一共4个值的信息，但矩阵法却使用了16个元素；</li>
    <li>而且在做乘法操作时也会增加计算量，造成了空间和时间上的一些浪费；</li>
</ul>
</li>
</ul>
</li>
    <li><strong>欧拉旋转</strong>
<ul>
    <li>优点：
<ul>
    <li>很容易理解，形象直观；</li>
    <li>表示更方便，只需要3个值（分别对应x、y、z轴的旋转角度）；但按我的理解，它还是转换到了3个3*3的矩阵做变换，效率不如四元数；</li>
</ul>
</li>
    <li>缺点：
<ul>
    <li>之前提到过这种方法是要按照一个固定的坐标轴的顺序旋转的，因此不同的顺序会造成不同的结果；</li>
    <li>会造成<a href="http://zh.wikipedia.org/wiki/%E8%90%AC%E5%90%91%E9%8E%96" target="_blank" rel="nofollow noopener">万向节锁</a>（Gimbal Lock）的现象。这种现象的发生就是由于上述固定坐标轴旋转顺序造成的。理论上，欧拉旋转可以靠这种顺序让一个物体指到任何一个想要的方向，但如果在旋转中不幸让某些坐标轴重合了就会发生万向节锁，这时就会丢失一个方向上的旋转能力，也就是说在这种状态下我们无论怎么旋转（当然还是要原先的顺序）都不可能得到某些想要的旋转效果，除非我们打破原先的旋转顺序或者同时旋转3个坐标轴。这里有个<a href="http://v.youku.com/v_show/id_XNzkyOTIyMTI=.html" target="_blank" rel="nofollow noopener">视频</a>可以直观的理解下；</li>
    <li>由于万向节锁的存在，欧拉旋转无法实现球面平滑插值；</li>
</ul>
</li>
</ul>
</li>
    <li><strong>四元数旋转</strong>
<ul>
    <li>优点：
<ul>
    <li>可以避免万向节锁现象；</li>
    <li>只需要一个4维的四元数就可以执行绕任意过原点的向量的旋转，方便快捷，在某些实现下比旋转矩阵效率更高；</li>
    <li>可以提供平滑插值；</li>
</ul>
</li>
    <li>缺点：
<ul>
    <li>比欧拉旋转稍微复杂了一点点，因为多了一个维度；</li>
    <li>理解更困难，不直观；</li>
</ul>
</li>
</ul>
</li>
</ul>

<div></div>

<div></div>

<h1><a name="t1"></a>四元数和欧拉角</h1>

<div></div>

<div></div>

<h2><a name="t2"></a>基础知识</h2>

<div></div>

<div></div>

<div>前面说过，一个四元数可以表示为q = w + xi + yj + zk，现在就来回答这样一个简单的式子是怎么和三维旋转结合在一起的。为了方便，我们下面使用q = ((x, y, z)，w) = (v, w)，其中v是向量，w是实数，这样的式子来表示一个四元数。</div>

<div></div>

<div>

我们先来看问题的答案。我们可以使用一个四元数<span id="MathJax-Span-484" class="mi">q</span><span id="MathJax-Span-485" class="mo">=</span><span id="MathJax-Span-486" class="mo">(</span><span id="MathJax-Span-487" class="mo">(</span><span id="MathJax-Span-488" class="mi">x</span><span id="MathJax-Span-489" class="mo">,</span><span id="MathJax-Span-490" class="mi">y</span><span id="MathJax-Span-491" class="mo">,</span><span id="MathJax-Span-492" class="mi">z</span><span id="MathJax-Span-493" class="mo">)</span><span id="MathJax-Span-494" class="mi">sin</span><span id="MathJax-Span-495" class="texatom"><span id="MathJax-Span-496" class="mrow"><span id="MathJax-Span-497" class="mfrac"><span id="MathJax-Span-498" class="mi">θ</span><span id="MathJax-Span-499" class="mn">2</span></span></span></span><span id="MathJax-Span-507" class="mo">, <span id="MathJax-Span-486" class="mo"><span id="MathJax-Span-501" class="mi">cos</span><span id="MathJax-Span-502" class="texatom"><span id="MathJax-Span-503" class="mrow"><span id="MathJax-Span-504" class="mfrac"><span id="MathJax-Span-505" class="mi">θ</span><span id="MathJax-Span-506" class="mn">2</span></span></span></span></span>)</span> 来执行一个旋转。具体来说，如果我们想要把空间的一个点P绕着单位向量轴u = (x, y, z)表示的旋转轴旋转θ角度，我们首先把点P扩展到四元数空间，即四元数p = (P, 0)。那么，旋转后新的点对应的四元数（当然这个计算而得的四元数的实部为0，虚部系数就是新的坐标）为：

</div>

<div><span id="MathJax-Span-509" class="mrow"><span id="MathJax-Span-510" class="msup"><span id="MathJax-Span-511" class="mi">p</span><span id="MathJax-Span-512" class="mo">′</span></span><span id="MathJax-Span-513" class="mo">=</span><span id="MathJax-Span-514" class="mi">q</span><span id="MathJax-Span-515" class="mi">p</span><span id="MathJax-Span-516" class="msubsup"><span id="MathJax-Span-517" class="mi">q</span><span id="MathJax-Span-518" class="texatom"><span id="MathJax-Span-519" class="mrow"><span id="MathJax-Span-520" class="mo">−</span><span id="MathJax-Span-521" class="mn">1</span></span></span></span></span></div>

<div></div>

<div>其中，<span id="MathJax-Span-484" class="mi">q</span><span id="MathJax-Span-485" class="mo">=</span><span id="MathJax-Span-486" class="mo">(<span id="MathJax-Span-501" class="mi">cos</span><span id="MathJax-Span-502" class="texatom"><span id="MathJax-Span-503" class="mrow"><span id="MathJax-Span-504" class="mfrac"><span id="MathJax-Span-505" class="mi">θ</span><span id="MathJax-Span-506" class="mn">2</span></span></span></span><span id="MathJax-Span-507" class="mo"></span></span><span id="MathJax-Span-487" class="mo">, (</span><span id="MathJax-Span-488" class="mi">x</span><span id="MathJax-Span-489" class="mo">,</span><span id="MathJax-Span-490" class="mi">y</span><span id="MathJax-Span-491" class="mo">,</span><span id="MathJax-Span-492" class="mi">z</span><span id="MathJax-Span-493" class="mo">)</span><span id="MathJax-Span-494" class="mi">sin</span><span id="MathJax-Span-495" class="texatom"><span id="MathJax-Span-496" class="mrow"><span id="MathJax-Span-497" class="mfrac"><span id="MathJax-Span-498" class="mi">θ</span><span id="MathJax-Span-499" class="mn">2</span></span></span></span><span id="MathJax-Span-507" class="mo">)</span> ，<span id="MathJax-Span-465" class="mrow"><span id="MathJax-Span-466" class="msubsup"><span id="MathJax-Span-467" class="mi">q</span><span id="MathJax-Span-468" class="texatom"><span id="MathJax-Span-469" class="mrow"><span id="MathJax-Span-470" class="mo">−</span><span id="MathJax-Span-471" class="mn">1</span></span></span></span><span id="MathJax-Span-472" class="mo">=</span><span id="MathJax-Span-473" class="mfrac"><span id="MathJax-Span-474" class="msubsup"><span id="MathJax-Span-475" class="mi">q</span><span id="MathJax-Span-476" class="mo">∗</span></span><span id="MathJax-Span-477" class="mrow"><span id="MathJax-Span-478" class="mi">N</span><span id="MathJax-Span-479" class="mo">(</span><span id="MathJax-Span-480" class="mi">q</span><span id="MathJax-Span-481" class="mo">)</span></span></span></span>，由于u是单位向量，因此<span id="MathJax-Span-446" class="mrow"><span id="MathJax-Span-447" class="mi">
N</span><span id="MathJax-Span-448" class="mo">(</span><span class="mo">q</span><span class="mi">)</span></span>=1，即<span id="MathJax-Span-589" class="mrow"><span id="MathJax-Span-590" class="msubsup"><span id="MathJax-Span-591" class="mi">q</span><span id="MathJax-Span-592" class="texatom"><span id="MathJax-Span-593" class="mrow"><span id="MathJax-Span-594" class="mo">−</span><span id="MathJax-Span-595" class="mn">1</span></span></span></span><span id="MathJax-Span-596" class="mo">=</span><span id="MathJax-Span-597" class="msubsup"><span id="MathJax-Span-598" class="mi">q</span><span id="MathJax-Span-599" class="mo">∗</span></span></span>。右边表达式包含了四元数乘法。相关的定义如下：</div>

<div>
<ul>
    <li>四元数乘法：<span id="MathJax-Span-361" class="mrow"><span id="MathJax-Span-362" class="mi">q</span><span id="MathJax-Span-363" class="mn">1</span><span id="MathJax-Span-364" class="mi">q</span><span id="MathJax-Span-365" class="mn">2</span><span id="MathJax-Span-366" class="mo">=</span><span id="MathJax-Span-367" class="mo">(</span><span id="MathJax-Span-368" class="texatom"><span id="MathJax-Span-369" class="mrow"><span id="MathJax-Span-370" class="munderover"><span id="MathJax-Span-371" class="msubsup"><span id="MathJax-Span-372" class="mi">v</span><span id="MathJax-Span-373" class="mn">1</span></span><span id="MathJax-Span-374" class="mo">→</span></span></span></span><span id="MathJax-Span-375" class="mo">×</span><span id="MathJax-Span-376" class="texatom"><span id="MathJax-Span-377" class="mrow"><span id="MathJax-Span-378" class="munderover"><span id="MathJax-Span-379" class="msubsup"><span id="MathJax-Span-380" class="mi">v</span><span id="MathJax-Span-381" class="mn">2</span></span><span id="MathJax-Span-382" class="mo">→</span></span></span></span><span id="MathJax-Span-383" class="mo">+</span><span id="MathJax-Span-384" class="msubsup"><span id="MathJax-Span-385" class="mi">w</span><span id="MathJax-Span-386" class="mn">1</span></span><span id="MathJax-Span-387" class="texatom"><span id="MathJax-Span-388" class="mrow"><span id="MathJax-Span-389" class="munderover"><span id="MathJax-Span-390" class="msubsup"><span id="MathJax-Span-391" class="mi">v</span><span id="MathJax-Span-392" class="mn">2</span></span><span id="MathJax-Span-393" class="mo">→</span></span></span></span><span id="MathJax-Span-394" class="mo">+</span><span id="MathJax-Span-395" class="msubsup"><span id="MathJax-Span-396" class="mi">w</span><span id="MathJax-Span-397" class="mn">2</span></span><span id="MathJax-Span-398" class="texatom"><span id="MathJax-Span-399" class="mrow"><span id="MathJax-Span-400" class="munderover"><span id="MathJax-Span-401" class="msubsup"><span id="MathJax-Span-402" class="mi">v</span><span id="MathJax-Span-403" class="mn">1</span></span><span id="MathJax-Span-404" class="mo">→</span></span></span></span><span id="MathJax-Span-405" class="mo">,</span><span id="MathJax-Span-406" class="msubsup"><span id="MathJax-Span-407" class="mi">w</span><span id="MathJax-Span-408" class="mn">1</span></span><span id="MathJax-Span-409" class="msubsup"><span id="MathJax-Span-410" class="mi">w</span><span id="MathJax-Span-411" class="mn">2</span></span><span id="MathJax-Span-412" class="mo">−</span><span id="MathJax-Span-413" class="texatom"><span id="MathJax-Span-414" class="mrow"><span id="MathJax-Span-415" class="munderover"><span id="MathJax-Span-416" class="msubsup"><span id="MathJax-Span-417" class="mi">v</span><span id="MathJax-Span-418" class="mn">1</span></span><span id="MathJax-Span-419" class="mo">→</span></span></span></span><span id="MathJax-Span-420" class="mo">⋅</span><span id="MathJax-Span-421" class="texatom"><span id="MathJax-Span-422" class="mrow"><span id="MathJax-Span-423" class="munderover"><span id="MathJax-Span-424" class="msubsup"><span id="MathJax-Span-425" class="mi">v</span><span id="MathJax-Span-426" class="mn">2</span></span><span id="MathJax-Span-427" class="mo">→</span></span></span></span><span id="MathJax-Span-428" class="mo">)</span></span><span id="MathJax-Span-361" class="mrow"><span id="MathJax-Span-367" class="mo"></span></span>
<div><strong> </strong></div></li>
    <li>共轭四元数：<span id="MathJax-Span-430" class="mrow"><span id="MathJax-Span-431" class="msubsup"><span id="MathJax-Span-432" class="mi">q</span><span id="MathJax-Span-433" class="mo">∗</span></span><span id="MathJax-Span-434" class="mo">=</span><span id="MathJax-Span-435" class="mo">(</span><span id="MathJax-Span-436" class="mo">−</span><span id="MathJax-Span-437" class="texatom"><span id="MathJax-Span-438" class="mrow"><span id="MathJax-Span-439" class="munderover"><span id="MathJax-Span-440" class="mi">v</span><span id="MathJax-Span-441" class="mo">⃗ </span></span></span></span><span id="MathJax-Span-442" class="mo">,</span><span id="MathJax-Span-443" class="mi">w</span><span id="MathJax-Span-444" class="mo">)</span></span></li>
    <li><strong>四元数的模：</strong><strong>N(q) = √(x^2 + y^2 + z^2 +w^2)，即四元数到原点的距离</strong>
<strong>
</strong></li>
    <li>四元数的逆：<span id="MathJax-Span-465" class="mrow"><span id="MathJax-Span-466" class="msubsup"><span id="MathJax-Span-467" class="mi">q</span><span id="MathJax-Span-468" class="texatom"><span id="MathJax-Span-469" class="mrow"><span id="MathJax-Span-470" class="mo">−</span><span id="MathJax-Span-471" class="mn">1</span></span></span></span><span id="MathJax-Span-472" class="mo">=</span><span id="MathJax-Span-473" class="mfrac"><span id="MathJax-Span-474" class="msubsup"><span id="MathJax-Span-475" class="mi">q</span><span id="MathJax-Span-476" class="mo">∗</span></span><span id="MathJax-Span-477" class="mrow"><span id="MathJax-Span-478" class="mi">N</span><span id="MathJax-Span-479" class="mo">(</span><span id="MathJax-Span-480" class="mi">q</span><span id="MathJax-Span-481" class="mo">)</span></span></span></span></li>
</ul>
</div>

<div></div>

<div>它的证明这里不再赘述，有兴趣的可以参见<a href="http://www.cnblogs.com/yiyezhai/p/3176725.html" target="_blank" rel="nofollow noopener">这篇文章</a>。主要思想是构建了一个辅助向量k，它是将p绕旋转轴旋转θ/2得到的。证明过程尝试证明<span id="MathJax-Span-837" class="mrow"><span id="MathJax-Span-838" class="mi">w</span><span id="MathJax-Span-839" class="msubsup"><span id="MathJax-Span-840" class="mi">k</span><span id="MathJax-Span-841" class="mo">∗</span></span><span id="MathJax-Span-842" class="mo">=</span><span id="MathJax-Span-843" class="mi">k</span><span id="MathJax-Span-844" class="msubsup"><span id="MathJax-Span-845" class="mi">v</span><span id="MathJax-Span-846" class="mo">∗</span></span></span>，以此证明w与v、k在同一平面内，且与v夹角为θ。</div>

<div></div>

<div>我们举个最简单的例子：把点P(1, 0, 1)绕旋转轴u = (0, 1, 0)旋转90°，求旋转后的顶点坐标。首先将P扩充到四元数，即p = (P, 0)。而q = (u*sin45°, cos45°)。求<span id="MathJax-Span-509" class="mrow"><span id="MathJax-Span-510" class="msup"><span id="MathJax-Span-511" class="mi">p</span><span id="MathJax-Span-512" class="mo">′</span></span><span id="MathJax-Span-513" class="mo">=</span><span id="MathJax-Span-514" class="mi">q</span><span id="MathJax-Span-515" class="mi">p</span><span id="MathJax-Span-516" class="msubsup"><span id="MathJax-Span-517" class="mi">q</span><span id="MathJax-Span-518" class="texatom"><span id="MathJax-Span-519" class="mrow"><span id="MathJax-Span-520" class="mo">−</span><span id="MathJax-Span-521" class="mn">1</span></span></span></span></span>的值。建议大家一定要在纸上计算一边，这样才能加深印象，连笔都懒得动的人还是不要往下看了。最后的结果p` = ((1, 0, -1), 0)，即旋转后的顶点位置是(1, 0, -1)。</div>

<div></div>

<div>如果想要得到复合旋转，只需类似复合矩阵那样左乘新的四元数，再进行运算即可。</div>

<div></div>

<div>我们来总结下四元数旋转的<strong>几个需要注意的地方</strong>：</div>

<div></div>

<div>
<ul>
    <li>用于旋转的四元数，每个分量的范围都在（-1，1）；</li>
    <li>每一次旋转实际上需要两个四元数的参与，即q和q*；</li>
    <li>所有用于旋转的四元数都是单位四元数，即它们的模是1；</li>
</ul>
</div>

<div></div>

<div></div>

<div>下面是几点建议：</div>

<div></div>

<div>
<ul>
    <li>实际上，在Unity里即便你不知道上述公式和变换也丝毫不妨碍我们使用四元数，但是有一点要提醒你，<strong>除非你对四元数非常了解，那么不要直接对它们进行赋值</strong>。</li>
    <li>如果你不想知道原理，只想在Unity里找到对应的函数来进行四元数变换，那么你可以使用这两个函数：<a href="http://docs.unity3d.com/ScriptReference/Quaternion.Euler.html" target="_blank" rel="nofollow noopener">Quaternion.Euler</a>和<a href="http://docs.unity3d.com/ScriptReference/Quaternion-eulerAngles.html" target="_blank" rel="nofollow noopener">Quaternion.eulerAngles</a>。它们基本可以满足绝大多数的四元数旋转变换。</li>
</ul>
<div></div>
</div>

<div></div>

<h2><a name="t3"></a>和其他类型的转换</h2>

<div></div>

<div>首先是<strong>轴角到四元数</strong>：</div>

<div></div>

<div>给定一个单位长度的旋转轴(x, y, z)和一个角度θ。对应的四元数为：</div>

<div><span id="MathJax-Span-484" class="mi">q</span><span id="MathJax-Span-485" class="mo">=</span><span id="MathJax-Span-486" class="mo">(</span><span id="MathJax-Span-487" class="mo">(</span><span id="MathJax-Span-488" class="mi">x</span><span id="MathJax-Span-489" class="mo">,</span><span id="MathJax-Span-490" class="mi">y</span><span id="MathJax-Span-491" class="mo">,</span><span id="MathJax-Span-492" class="mi">z</span><span id="MathJax-Span-493" class="mo">)</span><span id="MathJax-Span-494" class="mi">sin</span><span id="MathJax-Span-495" class="texatom"><span id="MathJax-Span-496" class="mrow"><span id="MathJax-Span-497" class="mfrac"><span id="MathJax-Span-498" class="mi">θ</span><span id="MathJax-Span-499" class="mn">2</span></span></span></span><span id="MathJax-Span-507" class="mo">, <span id="MathJax-Span-486" class="mo"><span id="MathJax-Span-501" class="mi">cos</span><span id="MathJax-Span-502" class="texatom"><span id="MathJax-Span-503" class="mrow"><span id="MathJax-Span-504" class="mfrac"><span id="MathJax-Span-505" class="mi">θ</span><span id="MathJax-Span-506" class="mn">2</span></span></span></span></span>)</span></div>

<div></div>

<div></div>

<div>这个公式的推导过程上面已经给出。</div>

<div></div>

<div><strong>欧拉角到四元数</strong>：</div>

<div></div>

<div>给定一个欧拉旋转(X, Y, Z)（即分别绕x轴、y轴和z轴旋转X、Y、Z度），则对应的四元数为：</div>

<div></div>

<div>x = sin(Y/2)sin(Z/2)cos(X/2)+cos(Y/2)cos(Z/2)sin(X/2)
y = sin(Y/2)cos(Z/2)cos(X/2)+cos(Y/2)sin(Z/2)sin(X/2)
z = cos(Y/2)sin(Z/2)cos(X/2)-sin(Y/2)cos(Z/2)sin(X/2)
w = cos(Y/2)cos(Z/2)cos(X/2)-sin(Y/2)sin(Z/2)sin(X/2)
q = ((x, y, z), w)</div>

<div></div>

<div>它的证明过程可以依靠轴角到四元数的公式进行推导。</div>

<div></div>

<div>其他<strong>参考链接</strong>：</div>

<div></div>

<div>1. <a href="http://www.euclideanspace.com/maths/geometry/rotations/conversions/eulerToQuaternion/index.htm" target="_blank" rel="nofollow noopener">Euler to Quaternion</a>
2. <a href="http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToEuler/index.htm" target="_blank" rel="nofollow noopener">Quaternion To Euler</a>
3. <a href="http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm" target="_blank" rel="nofollow noopener">AngleAxis to Quaternion</a>
4. <a href="http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm" target="_blank" rel="nofollow noopener">Quaternion to AngleAxis</a></div>

<div></div>

<div></div>

<h1><a name="t4"></a>四元数的插值</h1>

<div></div>

<div>这里的插值指的是球面线性插值。</div>

<div></div>

<div>

设t是一个在0到1之间的变量。我们想要基于t求Q1到Q2之间插值后四元数Q。它的公式是：

</div>

<div>Q3  = (sin((1-t)A)/sin(A))*Q1 + (sin((tA)/sin(A))*Q2)</div>

<div>Q = Q3/|Q3|，即单位化</div>

<div></div>

<div></div>

<div></div>

<h1><a name="t5"></a>四元数的创建</h1>

<div></div>

<div>在了解了上述知识后，我们就不需要那么惧怕四元数了，实际上它和矩阵类似，不同的只是它的表示方式以及运算方式。那么在Unity里如何利用四元数进行旋转呢？Unity里提供了非常多的方式来创建一个四元数。例如Quaternion.AngleAxis(float angle, Vector3 axis)，它可以返回一个绕轴线axis旋转angle角度的四元数变换。我们可以一个Vector3和它进行左乘，就将得到旋转后的Vector3。在Unity里只需要用一个“ * ”操作符就可以进行四元数对向量的变换操作，相当于我们上述讲到的<span id="MathJax-Span-509" class="mrow"><span id="MathJax-Span-510" class="msup"><span id="MathJax-Span-511" class="mi">p</span><span id="MathJax-Span-512" class="mo">′</span></span><span id="MathJax-Span-513" class="mo">=</span><span id="MathJax-Span-514" class="mi">q</span><span id="MathJax-Span-515" class="mi">p</span><span id="MathJax-Span-516" class="msubsup"><span id="MathJax-Span-517" class="mi">q</span><span id="MathJax-Span-518" class="texatom"><span id="MathJax-Span-519" class="mrow"><span id="MathJax-Span-520" class="mo">−</span><span id="MathJax-Span-521" class="mn">1</span></span></span></span></span>操作。如果我们想要进行多个旋转变换，只需要左乘其他四元数变换即可。例如下面这样：</div>

<div>
<pre onclick="hljs.copyCode(event)"><code>Vector3 newVector = Quaternion.AngleAxis(<span class="hljs-number">90</span>, Vector3.up) * Quaternion.LookRotation(someDirection) * someVector;</code></pre>
</div>

<div>
<div>尽管欧拉角更容易我们理解，但四元数比欧拉角要强大很多。Unity提供了这两种方式供我们选择，我们可以选择最合适的变换。</div>
<div>例如，如果我们需要对旋转进行插值，我们可以首先使用Quaternion.eulerAngles来得到欧拉角度，然后使用Mathf.Clamp对其进行插值运算。</div>
<div>最后更新Quaternion.eulerAngles或者使用Quaternion.Euler(yourAngles)来创建一个新的四元数。</div>
<div></div>
又例如，如果你想要组合旋转，比如让人物的脑袋向下看或者旋转身体，两种方法其实都可以，但一旦这些旋转不是以世界坐标轴为旋转轴，比如人物扭动脖子向下看等，那么四元数是一个更合适的选择。Unity还提供了transform.forward, transform.right and transform.up 这些非常有用的轴，这些轴可以和Quaternion.AngleAxis组合起来，来创建非常有用的旋转组合。例如，下面的代码让物体执行低头的动作：

</div>

<div>
<pre onclick="hljs.copyCode(event)"><code>transform.rotation = Quaternion.AngleAxis(degrees, transform.right) * transform.rotation;</code></pre>
</div>

<div>关于Quaternion的其他函数，后面再补充吧，原理类似~</div>

<div></div>

<div></div>

<div></div>

<h1><a name="t6"></a>补充：欧拉旋转</h1>

<div></div>

<div>在文章开头关于欧拉旋转的细节没有解释的太清楚，而又有不少人询问相关问题，我尽量把自己的理解写到这里，如有不对还望指出。</div>

<div></div>

<div></div>

<h2><a name="t7"></a>欧拉旋转是怎么运作的</h2>

<div></div>

<div></div>

<div>欧拉旋转是我们最容易理解的一种旋转方式。以我们生活中为例，一个舞蹈老师告诉我们，完成某个舞蹈动作需要先向你的左边转30°，再向左侧弯腰60°，再起身向后弯腰90°（如果你能办到的话）。上面这样一个旋转的过程其实和我们在三维中进行欧拉旋转很类似，即我们是通过指明绕三个轴旋转的角度来进行旋转的，不同的是，日常生活中我们更愿意叫这些轴为前后左右上下。而这也意味着我们需要指明一个旋转顺序。这是因为，先绕X轴旋转90°、再绕Y轴30°和先绕Y轴旋转90°、再绕X轴30°得到的是不同的结果。</div>

<div></div>

<div>在Unity里，欧拉旋转的旋转顺序是Z、X、Y，这在相关的API文档中都有说明，例如<a href="http://docs.unity3d.com/ScriptReference/Transform.Rotate.html" target="_blank" rel="nofollow noopener">Transform.Rotate</a>。其实文档中说得不是非常详细，还有一个细节我们需要明白。如果你仔细想想，就会发现有一个非常重要的东西我们没有说明白，那就是旋转时使用的坐标系。给定一个旋转顺序（例如这里的Z、X、Y），以及它们对应的旋转角度（α，β，r），有两种坐标系可以选择：</div>

<div>
<ol>
    <li>绕坐标系E下的Z轴旋转α，绕坐标系E下的Y轴旋转β，绕坐标系E下的X轴旋转r，即进行一次旋转时不一起旋转当前坐标系；</li>
    <li>绕坐标系E下的Z轴旋转α，绕坐标系E在绕Z轴旋转α后的新坐标系E'下的Y轴旋转β，绕坐标系E'在绕Y轴旋转β后的新坐标系E''下的X轴旋转r， 即在旋转时，把坐标系一起转动；</li>
</ol>
<div></div>
</div>

<div>很容易知道，这两种选择的结果是不一样的。但如果把它们的旋转顺序颠倒一下，其实结果就会一样。说得明白点，在第一种情况下、按ZXY顺序旋转和在第二种情况下、按YXZ顺序旋转是一样的。证明方法可以看下<a href="http://www.cnitblog.com/luckydmz/archive/2010/09/07/68674.html" target="_blank" rel="nofollow noopener">这篇文章</a>。而Unity文档中说明的旋转顺序指的是在第一种情况下的顺序。</div>

<div></div>

<div>如果你还是不懂这意味着什么，可以试着调用下这个函数。例如，你认为下面代码的结果是什么：</div>

<div>
<pre onclick="hljs.copyCode(event)"><code>transform.Rotate(<span class="hljs-keyword">new</span> Vector3(<span class="hljs-number">0</span>, <span class="hljs-number">30</span>, <span class="hljs-number">90</span>));</code></pre>
原模型的方向和执行结果如下：

</div>

<div><img src="https://img-blog.csdn.net/20150211171430220?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY2FuZHljYXQxOTky/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" /> <img src="https://img-blog.csdn.net/20150211174626667?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY2FuZHljYXQxOTky/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" /></div>

<div></div>

<div></div>

<div></div>

<div>而我们可以再分别执行下面的代码：</div>

<div>
<div class="hljs-ln-numbers">
<div class="hljs-ln-line hljs-ln-n" data-line-number="1">
<pre class="lang:default decode:true"><span style="background-color: #cce4f5; font-family: 'Courier 10 Pitch', Courier, monospace; font-size: 12.8px;">// First case</span>

transform.Rotate(new Vector3(0, 30, 0));

transform.Rotate(new Vector3(0, 0, 90));



// Second case

// transform.Rotate(new Vector3(0, 0, 90));

// transform.Rotate(new Vector3(0, 30, 0));</pre>
两种情况的结果分别是：

</div>
</div>
</div>

<div><img src="https://img-blog.csdn.net/20150211175051166?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY2FuZHljYXQxOTky/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" /> <img src="https://img-blog.csdn.net/20150211175102507?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY2FuZHljYXQxOTky/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" /></div>

<div></div>

<div>可以发现，调用transform.Rotate(new Vector3(0, 30, 90));是和第一种情况中的代码是一样的结果，即先旋转Y、再旋转Z。进一步实验，我们会发现transform.Rotate(new Vector3(30, 90, -40));的结果是和transform.Rotate(new Vector3(0, 90, 0));transform.Rotate(new Vector3(30, 0, 0));transform.Rotate(new Vector3(0, 0, -40));的结果一样的。你会问了，文档中不是明明说了旋转顺序是Z、X、Y吗？怎么现在完全反过来了呢？原因就是我们之前说的两种坐标系的选择。在一次调用transform.Rotate的过程中，坐标轴是不随每次单个坐标轴的旋转而旋转的。而在调用transform.Rotate后，这个旋转坐标系才会变化。也就是说，transform.Rotate(new Vector3(30, 90, -40));执行时使用的是第一种情况，而transform.Rotate(new Vector3(0, 90, 0));transform.Rotate(new Vector3(30, 0, 0));transform.Rotate(new Vector3(0, 0, -40));每一句则是分别使用了上一句执行后的坐标系，即第二种坐标系情况。因此，我们看起来顺序好像是完全是反了，但结果是一样的。</div>

<div></div>

<div>上面只是说了一些容易混淆的地方，更多的内容大家可以搜搜wiki之类的。</div>

<div></div>

<div></div>

<h2><a name="t8"></a>数学模型</h2>

<div>欧拉旋转的数学实现就是使用矩阵。而最常见的表示方法就是3*3的矩阵。在<a href="http://en.wikipedia.org/wiki/Gimbal_lock" target="_blank" rel="nofollow noopener">Wiki</a>里我们可以找到这种矩阵的表示形式，以下以按XYZ的旋转顺序为例，三个矩阵分别表示了：</div>

<div></div>

<div><img src="https://img-blog.csdn.net/20150212102526686?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY2FuZHljYXQxOTky/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" /></div>

<div></div>

<div></div>

<div>在计算时，我们将原来的旋转矩阵右乘（这里使用的是列向量）上面的矩阵。从这里我们也可以证明上面所说的两种坐标系选择是一样的结果，它们之间的不同从这里来看其实就是矩阵相乘时的顺序不同。第一种坐标系情况，指的是在计算时，先从左到右直接计算R中3个矩阵的结果矩阵，最后再和原旋转矩阵相乘，因此顺序是XYZ；而第二种坐标系情况，指的是在计算时，从右往左依次相乘，因此顺序是反过来的，ZYX。你可以验证R左乘和右乘的结果表达式，就可以相信这个结论了！</div>

<div></div>

<div></div>

<h2><a name="t9"></a>万向节锁</h2>

<div></div>

<div></div>

<div>虽然欧拉旋转非常容易理解，但它会造成臭名昭著的万向节锁问题。我之前给出了链接大家可能都看了，但还是不明白这是怎么回事。这里<a href="http://blog.csdn.net/huazai434/article/details/6458257" target="_blank" rel="nofollow noopener">有一篇文章</a>是我目前找到说得最容易懂的中文文章，大家可以看看。</div>

<div></div>

<div>如果你还是不明白，我们来做个试验。还是使用之前的模型，这次我们直接在面板中把它的欧拉角中的X值设为90°，其他先保持不变：</div>

<div><img src="https://img-blog.csdn.net/20150211224049536?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY2FuZHljYXQxOTky/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" /></div>

<div></div>

<div>此时模型是脸朝下（下图你看到的只是一个头顶）：</div>

<div><img src="https://img-blog.csdn.net/20150211224515155?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY2FuZHljYXQxOTky/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" /></div>

<div></div>

<div>现在，如果我让你不动X轴，只设置Y和Z的值，把这个模型的脸转上来，让它向侧面看，你可以办到吗？你可以发现，这时候无论你怎么设置Y和Z的值，模型始终是脸朝下、在同一平面旋转，看起来就是Y和Z控制的是同一个轴的旋转，下面是我截取的任意两种情况：</div>

<div><img src="https://img-blog.csdn.net/20150211224905630?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY2FuZHljYXQxOTky/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" /> <img src="https://img-blog.csdn.net/20150211224916768?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY2FuZHljYXQxOTky/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" /></div>

<div></div>

<div>这就是一种万向节锁的情况。这里我们先设置X轴为90°也是有原因的，这是因为Unity中欧拉角的旋转顺序是ZXY，即X轴是第二个旋转轴。当我们在面板中设置任意旋转值时，Unity实际是按照固定的ZXY顺序依次旋转特定角度的。</div>

<div></div>

<div>在代码里，我们同样可以重现万向节锁现象。</div>

<div></div>

<div>
<pre class="lang:default decode:true ">transform.Rotate(new Vector3(0, 0, 40));

transform.Rotate(new Vector3(0, 90, 0));

transform.Rotate(new Vector3(80, 0, 0));</pre>
&nbsp;

</div>

<div>我们只需要固定中间一句代码，即使Y轴的旋转角度始终为90°，那么你会发现无论你怎么调整第一句和最后一句中的X或Z值，它会像一个钟表的表针一样总是在同一个平面上运动。</div>

<div></div>

<div>万向节锁中的“锁”，其实是给人一种误导，这可能也是让很多人觉得难以理解的一个原因。实际上，实际上它并没有锁住任何一个旋转轴，只是说我们会在这种旋转情况下会感觉丧失了一个维度。以上面的例子来说，尽管固定了第二个旋转轴的角度为90°，但我们原以为依靠改变其他两个轴的旋转角度是可以得到任意旋转位置的（因为按我们理解，两个轴应该控制的是两个空间维度），而事实是它被“锁”在了一个平面，即只有一个维度了，缺失了一个维度。而只要第二个旋转轴不是±90°，我们就可以依靠改变其他两个轴的旋转角度来得到任意旋转位置。</div>

<div></div>

<div></div>

<h2><a name="t10"></a>数学解释</h2>

<div></div>

<div>我们从最简单的矩阵来理解。还是使用XYZ的旋转顺序。当Y轴的旋转角度为90°时，我们会得到下面的旋转矩阵：</div>

<div><img src="https://img-blog.csdn.net/20150212105617286?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY2FuZHljYXQxOTky/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" /></div>

<div></div>

<div></div>

<div>我们对上述矩阵进行左乘可以得到下面的结果：</div>

<div><img src="https://img-blog.csdn.net/20150212105800681?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY2FuZHljYXQxOTky/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="" /></div>

<div></div>

<div>可以发现，此时当我们改变第一次和第三次的旋转角度时，是同样的效果，而不会改变第一行和第三列的任何数值，从而缺失了一个维度。</div>

<div></div>

<div>我们再尝试着理解下它的本质。<a href="http://en.wikipedia.org/wiki/Gimbal_lock" target="_blank" rel="nofollow noopener">Wiki</a>上写，万向节锁出现的本质原因，是因为从欧拉角到旋转的映射并不是一个覆盖映射，即它并不是在每个点处都是局部同胚的。不懂吧。。。恩，我们再来通俗一下解释，这意味着，从欧拉角到旋转是一个多对一的映射（即不同的欧拉角可以表示同一个旋转方向），而且并不是每一个旋转变化都可以用欧拉角来表示。其他更多的大家去参考wiki吧。</div>

<div></div>

<div></div>

<div>建议还是多看看视频，尤其是后面的部分。当然，如果还是觉得懵懵懂懂的话，在《3D数学基础：图形与游戏开发》一书中有一话说的很有道理，“如果您从来没有遇到过万向锁情况，你可能会对此感到困惑，而且不幸的是，很难在本书中讲清楚这个问题，你需要亲身经历才能明白。”因此，大家也不要纠结啦，等到遇到的时候可以想到是因为万向节锁的原因就好。</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>182</wp:post_id>
		<wp:post_date><![CDATA[2018-07-16 22:22:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-07-16 14:22:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[182]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="repost"><![CDATA[转载]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[weibo_sync]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>git日志别名配置命令行git lg</title>
		<link>http://diaryfun.info/2018/07/git%e6%97%a5%e5%bf%97%e5%88%ab%e5%90%8d%e9%85%8d%e7%bd%ae%e5%91%bd%e4%bb%a4%e8%a1%8cgit-lg/</link>
		<pubDate>Mon, 23 Jul 2018 16:57:17 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://diaryfun.info/?p=186</guid>
		<description></description>
		<content:encoded><![CDATA[<pre class="lang:default decode:true">git config --global alias.lg "log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset' --abbrev-commit"</pre>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>186</wp:post_id>
		<wp:post_date><![CDATA[2018-07-24 00:57:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-07-23 16:57:17]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[git%e6%97%a5%e5%bf%97%e5%88%ab%e5%90%8d%e9%85%8d%e7%bd%ae%e5%91%bd%e4%bb%a4%e8%a1%8cgit-lg]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tool"><![CDATA[工具]]></category>
		<category domain="category" nicename="repost"><![CDATA[转载]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[weibo_sync]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Sublime Text 3 常用插件清单</title>
		<link>http://diaryfun.info/2018/10/sublime-text-3-%e5%b8%b8%e7%94%a8%e6%8f%92%e4%bb%b6%e6%b8%85%e5%8d%95/</link>
		<pubDate>Wed, 10 Oct 2018 03:55:04 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://diaryfun.info/?p=190</guid>
		<description></description>
		<content:encoded><![CDATA[BracketHighlighter

DocBlockr

Emmet

SideBarEnhancements

ColorPicker

ConvertToUTF8

HTML-CSS-JS Prettify

&nbsp;

Git

jQuery

Python 3

&nbsp;

Theme - Spacegray

&nbsp;

<hr />

&nbsp;

Sublime Text 3 License Code
<blockquote>----- BEGIN LICENSE -----
sgbteam
Single User License
EA7E-1153259
8891CBB9 F1513E4F 1A3405C1 A865D53F
115F202E 7B91AB2D 0D2A40ED 352B269B
76E84F0B CD69BFC7 59F2DFEF E267328F
215652A3 E88F9D8F 4C38E3BA 5B2DAAE4
969624E7 DC9CD4D5 717FB40C 1B9738CF
20B3C4F1 E917B5B3 87C38D9C ACCE7DD8
5F7EF854 86B9743C FADC04AA FB0DA5C0
F913BE58 42FEA319 F954EFDD AE881E0B
------ END LICENSE ------</blockquote>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>190</wp:post_id>
		<wp:post_date><![CDATA[2018-10-10 11:55:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-10 03:55:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sublime-text-3-%e5%b8%b8%e7%94%a8%e6%8f%92%e4%bb%b6%e6%b8%85%e5%8d%95]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tool"><![CDATA[工具]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[weibo_sync]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>LAMP搭建私有云OwnCloud流程</title>
		<link>http://diaryfun.info/2018/10/lamp%e6%90%ad%e5%bb%ba%e7%a7%81%e6%9c%89%e4%ba%91owncloud%e6%b5%81%e7%a8%8b/</link>
		<pubDate>Sat, 13 Oct 2018 05:03:58 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://diaryfun.info/?p=202</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading -->
<h2>STEP1: 在Ubuntu 16.04搭建LAMP</h2>
<!-- /wp:heading -->

<h3>Apache installation</h3>
<p>To install webserver i.e. Apache, open terminal &amp; execute the following command,</p>
<p><code>$ sudo apt-get install apache2</code></p>
<p>Once the package has been installed, start the apache service &amp; enable it for boot,</p>
<p><code>$ sudo systemctl start apache2</code></p>
<p><code>$ sudo systemctl enable apache2</code></p>
<p>Now we can test the apache installation. To test the apache installation, open web browser &amp; in the address bar enter the following url,</p>
<p>http://localhost</p>
<p>&nbsp;</p>
<h3>MySQL installation</h3>
<p>Next thing to install is database, we are using MySql as our choice of database server. To install MySql on Ubuntu machine, run the following command from terminal</p>
<p><code>$ sudo apt-get install mysql-server mysql-client</code></p>
<p>During the MySql installation, we will be asked to provide ‘root’ password, provide a suitable password &amp; than confirm it to complete the installation. Once the installation has been completed, start the MySql service &amp; enable it for boot,</p>
<p><code>$ sudo systemctl start mysql</code></p>
<p><code>$ sudo systemctl enable mysql</code></p>
<p>We can now connect to the database to check the installation, to connect to MySql, use the following command,</p>
<p><code>$ mysql -u root -p</code></p>
<p>And than enter the root password that we provided at the time of installation to connect to mysql,</p>
<p>&nbsp;</p>
<h2>PHP installation</h2>
<p>Dynamic content of a website is processed by PHP, its a general purpose programming language. To install php on the system, execute the following command from terminal,</p>
<p><code>$ sudo apt-get install php7.0-mysql php7.0-curl php7.0-json php7.0-cgi libapache2-mod-php7.0 php7.0</code></p>
<p>Once the isntallation has been complete, we will test the php. To do that, open</p>
<p><code>$ sudo vim /var/www/html/test.php</code></p>
<p>&amp; enter the following content to it,</p>
<p><code>&lt;?<br>

phpinfo();<br>

?&gt;</code></p>
<p>Save the file &amp; restart the apache service,</p>
<p><code>$ sudo systemctl restart apache2</code></p>
<p>Now open the browser &amp; enter the following URL,</p>
<p>http://localhost/test.php</p>
<p>We should now see the following page with details about the installed PHP,</p>
<p>&nbsp;</p>
<p>We know have our LAMP stack on Ubuntu OS ready to use, we can now deploy the dynamic websites on this stack.</p>

<!-- wp:heading -->
<h2>STEP2: 搭建OwnCloud </h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>我们需要在自己的设备里安装这些包：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>$ sudo yum install php-mysql php-json php-xml php-mbstring php-zip php-gd curl php-curl php-pdo</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>安装 OwnCloud，我们现在需要在服务器上下载 OwnCloud 安装包。使用下面的命令从官方网站下载安装包（10.0.4）：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>$ wget https://download.owncloud.org/community/owncloud-10.0.4.tar.bz2</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>使用下面的命令解压：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>$ tar -xvf owncloud-10.0.4.tar.bz2</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>

现在，将所有解压后的文件移动至 <code>/var/www/html</code>：

</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>$ mv owncloud/* /var/www/html</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>注意还有两个隐藏文件需要分别移动：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>$ mv owncloud/.htaccess /var/www/html
$ mv owncloud/.user.ini /var/www/html</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>下一步，我们需要在 Apache 的配置文件 <code>apache2.conf</code> 上做些修改：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>$ sudo vim /etc/apache2/apache2.conf</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>

更改下面的选项：

</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>AllowOverride All</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>

保存该文件，并修改 OwnCloud 文件夹的文件权限：

</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>$ sudo chown -R www-data:www-data /var/www/html/
$ sudo chmod 777 /var/www/html/config/</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>

然后重启 Apache 服务器执行修改：

</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>$ sudo systemctl restart apache2</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>现在，我们需要在 MySQL 上创建一个数据库，保存来自 OwnCloud 的数据。使用下面的命令创建数据库owncloud和数据库用户ocuser：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>$ mysql -u root -p
mysql > create database owncloud;
mysql > GRANT ALL ON owncloud.* TO ocuser@localhost IDENTIFIED BY 'owncloud';
mysql > flush privileges;
mysql > exit</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>修改ocuser用户密码：</p>
<!-- /wp:paragraph -->

<!-- wp:code -->
<pre class="wp-block-code"><code>$ mysql -u root -p
mysql > use mysql; 
mysql > UPDATE user SET authentication_string=PASSWORD("your password") WHERE user='ocuser';
mysql > FLUSH PRIVILEGES;
mysql > quit;</code></pre>
<!-- /wp:code -->

<!-- wp:paragraph -->
<p>在浏览器中输入你的服务器IP地址，显示如下界面，填写配置，服务器端搭建，完成！</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":208} -->
<figure class="wp-block-image"><img src="http://diaryfun.info/wp-content/uploads/2018/10/234816ylnpqg2azlxpnlqz.jpg" alt="" class="wp-image-208"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>去官网下载并安装客户端：https://owncloud.org/download/。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>ownCloud，启动！</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":210} -->
<figure class="wp-block-image"><img src="http://diaryfun.info/wp-content/uploads/2018/10/Snipaste_2018-10-13_12-49-40.png" alt="" class="wp-image-210"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>参考链接：</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>https://linuxtechlab.com/install-lamp-stack-on-ubuntu</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>https://linux.cn/article-9418-1.html</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>若有大佬对此文存在修改意见，或是配置过程中存在错误，请在评论区留言。</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>202</wp:post_id>
		<wp:post_date><![CDATA[2018-10-13 13:03:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-13 05:03:58]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[lamp%e6%90%ad%e5%bb%ba%e7%a7%81%e6%9c%89%e4%ba%91owncloud%e6%b5%81%e7%a8%8b]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="app"><![CDATA[应用]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_cb3f7edb678c5d3ca257ffe550df9015]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_28d0a61388c7caa3b09bebe3b75e6519]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_54ae84263dc6fd8502eca0aa52ae9c2d]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_46e64da57f6477d2a772811ed6a89967]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_bf63fe7c34fa165756ab668c2cc47d40]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_a0632190acc35d410b1903593ba204a1]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[15]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_cc1e72521e580e688033ce35d0ed3d1a]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_67d016541e0b1eb48e1b801c94619168]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_7d24f86c064cc2ad26c34e4461ac5e31]]></wp:meta_key>
			<wp:meta_value><![CDATA[<blockquote class="wp-embedded-content" data-secret="qXwTaHrJk7"><a href="https://linuxtechlab.com/install-lamp-stack-on-ubuntu/">Installation of LAMP Stack on Ubuntu</a></blockquote><iframe class="wp-embedded-content" sandbox="allow-scripts" security="restricted" style="position: absolute; clip: rect(1px, 1px, 1px, 1px);" src="https://linuxtechlab.com/install-lamp-stack-on-ubuntu/embed/#?secret=qXwTaHrJk7" data-secret="qXwTaHrJk7" width="600" height="338" title="&#8220;Installation of LAMP Stack on Ubuntu&#8221; &#8212; LinuxTechLab" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_time_7d24f86c064cc2ad26c34e4461ac5e31]]></wp:meta_key>
			<wp:meta_value><![CDATA[1539406340]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_52a378ffa461c4025a9df8df84939f88]]></wp:meta_key>
			<wp:meta_value><![CDATA[<blockquote class="wp-embedded-content" data-secret="jofRFgqJYO"><a href="https://linuxtechlab.com/install-lamp-stack-on-ubuntu/">Installation of LAMP Stack on Ubuntu</a></blockquote><iframe class="wp-embedded-content" sandbox="allow-scripts" security="restricted" style="position: absolute; clip: rect(1px, 1px, 1px, 1px);" src="https://linuxtechlab.com/install-lamp-stack-on-ubuntu/embed/#?secret=jofRFgqJYO" data-secret="jofRFgqJYO" width="600" height="338" title="&#8220;Installation of LAMP Stack on Ubuntu&#8221; &#8212; LinuxTechLab" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_time_52a378ffa461c4025a9df8df84939f88]]></wp:meta_key>
			<wp:meta_value><![CDATA[1539430177]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[weibo_sync]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[stockton cremation]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[terranceburbidge@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.facebook.com/funeral.homestockton</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[37.32.11.152]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-11-05 01:22:08]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-11-04 17:22:08]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I love what you guys tend to be up too. Such clever work and coverage!

Keep up the terrific works guys I've added you guys to 
my own blogroll.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[haynes service manuals for car]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cierraplummer@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://bestdealon.com/index.php/blog/61162/finding-a-computerized-car-repair-manual/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[196.16.48.19]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-11-05 06:15:22]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-11-04 22:15:22]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You could certainly see your expertise within the work you write.
The sector hopes for even more passionate writers like you who are not 
afraid to say how they believe. Always follow your heart.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>8</wp:comment_id>
			<wp:comment_author><![CDATA[diy Repair manuals For atv]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[trenarenwick@yahoo.de]]></wp:comment_author_email>
			<wp:comment_author_url>http://somalibusiness.info/Forum/profile.php?id=226174</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[196.16.48.233]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-11-05 07:29:54]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-11-04 23:29:54]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the auspicious writeup. It in fact was once a amusement account it.
Look advanced to more added agreeable from you! However, how could we keep in touch?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>10</wp:comment_id>
			<wp:comment_author><![CDATA[EllThop]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ellplup@zmail.website]]></wp:comment_author_email>
			<wp:comment_author_url>http://vhsfp.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[31.184.238.103]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2018-12-06 11:44:48]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2018-12-06 03:44:48]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[5mg Tadalafil Generic Inhouse Pharmacy Amoxicillin  <a href="http://arealot.com" rel="nofollow">vytorin</a> Propecia Without Rx]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>通过NuGet包管理器快速在Visual Studio中配置OpenGL环境</title>
		<link>http://diaryfun.info/2018/10/%e9%80%9a%e8%bf%87nuget%e5%8c%85%e7%ae%a1%e7%90%86%e5%99%a8%e5%bf%ab%e9%80%9f%e5%9c%a8visual-studio%e4%b8%ad%e9%85%8d%e7%bd%aeopengl%e7%8e%af%e5%a2%83/</link>
		<pubDate>Mon, 15 Oct 2018 14:28:43 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://diaryfun.info/?p=217</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:code -->
<pre class="wp-block-code"><code>PM> Install-Package nupengl.core -Version 0.1.0.1</code></pre>
<!-- /wp:code -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>217</wp:post_id>
		<wp:post_date><![CDATA[2018-10-15 22:28:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-10-15 14:28:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e9%80%9a%e8%bf%87nuget%e5%8c%85%e7%ae%a1%e7%90%86%e5%99%a8%e5%bf%ab%e9%80%9f%e5%9c%a8visual-studio%e4%b8%ad%e9%85%8d%e7%bd%aeopengl%e7%8e%af%e5%a2%83]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tool"><![CDATA[工具]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[weibo_sync]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[17]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[Kelcync]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[kelhono@emaill.host]]></wp:comment_author_email>
			<wp:comment_author_url>http://banzell.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[5.188.44.20]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-02-06 01:22:36]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-02-05 17:22:36]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Usonline Viagra Priligy At Cvs Viagra Generico Originale  <a href="http://buycial.com" rel="nofollow">cialis no prescription</a> Where To Buy Nexium How Do You Spell Keflex  Buy Cipro Amoxil Chew Tabs Cialis Jambes Lourdes  <a href="http://drugsir.com" rel="nofollow">cialis prices</a> Metronidazole 200mg Sale Montreal Buy Viagra Pills  Can I Take Aleve With Amoxicillin Aciclovir Genfar Travail Reel Dapoxetine  <a href="http://deantxi.com" rel="nofollow">buy cialis online</a> Topills Online Pharmacy Dove Posso Comprare Il Cialis Generico  Is Flagyl Over The Counter Using Amoxicillin For Kennel Cough Viagra Deutsche Apotheke  <a href="http://kamxl.com" rel="nofollow"></a> order accutane online australia Viagra Generique Sur Le Net  Cialis 20 Mg Sale Can Amoxicillin Cause Yeast Infection Can Cephalexin Damage Liver  <a href="http://cidovir.com" rel="nofollow">buy cialis online</a> Macrobid 100mg With Free Shipping]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
</channel>
</rss>
